INSTANCE scoreboard_top 0.6 12
INSTANCE scoreboard_main_table_header 0.6 21
INSTANCE scoreboard_main 0.6 24
INSTANCE scoreboard_spectators 0.6 24
INSTANCE scoreboard_connecting 0.6 24

BEGIN TEMPLATE scoreboard_top
    SETTING ALWAYS_VISIBLE 1
    SETTING item_direction "vertical"
    SETTING cell_direction "horizontal"
    SETTING align "top-left"
    SETTING item_spacing 0
    SETTING cell_spacing 0
   
    STRING bg
    bg = "<svg width='45' height='8.2' viewBox='0 0 45 8.2'>"
    bg = bg & "<path fill='white' d='M 1.608,0 H 45 L 43.392,8.2 H 0 Z' />"
    bg = bg  & "</svg>"

    STRING circle
    circle = "<circle cx='1' cy='1' r='1' fill='red' />"
    
ON_UPDATE

    IF !game_data.show_scoreboard
        discard
    END IF

    OUTPUT 0 0 width 1
    OUTPUT 0 0 height 1

    # Diabotical Logo
    OUTPUT 0 1 width 8
    OUTPUT 0 1 height 8
    OUTPUT 0 1 image "images/diabotical_o_colored.svg"
    OUTPUT 0 1 image_width 6
    OUTPUT 0 1 image_height 6

    # Black parallelogram background
    OUTPUT 0 2 width 45
    OUTPUT 0 2 height 8.2
    OUTPUT 0 2 image bg
    OUTPUT 0 2 image_width 45
    OUTPUT 0 2 image_height 8.2
    OUTPUT 0 2 image_color "#00000099"
    OUTPUT 0 2 x 8

    # Label "Mode"
    OUTPUT 1 0 lvalue "custom_game_settings_mode"
    OUTPUT 1 0 font "roboto-medium"
    OUTPUT 1 0 font_size 1.3
    OUTPUT 1 0 opacity 0.8
    OUTPUT 1 0 indent 0.6
    OUTPUT 1 0 offset_x 10.5
    OUTPUT 1 0 y 2
    
    # Value "Mode"
    STRING mode_string
    mode_string = "game_mode_" & game_data.game_mode
    OUTPUT 1 1 lvalue mode_string
    OUTPUT 1 1 font "roboto-bold"
    OUTPUT 1 1 font_size 1.3
    OUTPUT 1 1 offset_x 10.5
    OUTPUT 1 1 y 2

    # Label "Map"
    OUTPUT 2 0 lvalue "custom_game_settings_map"
    OUTPUT 2 0 font "roboto-medium"
    OUTPUT 2 0 font_size 1.3
    OUTPUT 2 0 opacity 0.8
    OUTPUT 2 0 indent 0.6
    OUTPUT 2 0 offset_x 31
    OUTPUT 2 0 y 2

    # Value "Map"
    IF game_data.map_name != ""
        OUTPUT 2 1 value game_data.map_name
    ELSE
        OUTPUT 2 1 value game_data.map
    END IF
    OUTPUT 2 1 font "roboto-bold"
    OUTPUT 2 1 font_size 1.3
    OUTPUT 2 1 offset_x 31
    OUTPUT 2 1 y 2

    # Label "Duration"
    OUTPUT 3 0 lvalue "custom_game_settings_duration"
    OUTPUT 3 0 font "roboto-medium"
    OUTPUT 3 0 font_size 1.3
    OUTPUT 3 0 opacity 0.8
    OUTPUT 3 0 indent 0.6
    OUTPUT 3 0 offset_x 10
    OUTPUT 3 0 y 4.2

    # Value "Duration"
    duration_ts = TIMESTAMP game_data.time_limit
    OUTPUT 3 1 font "roboto-bold"
    OUTPUT 3 1 font_size 1.3
    OUTPUT 3 1 offset_x 10
    OUTPUT 3 1 y 4.2
    IF game_data.time_limit == 0
        OUTPUT 3 1 lvalue "time_unlimited"
    ELSE
        OUTPUT 3 1 value duration_ts
    END IF

    # Label "Score Limit/Round Limit"
    OUTPUT 4 0 font "roboto-medium"
    OUTPUT 4 0 font_size 1.3
    OUTPUT 4 0 opacity 0.8
    OUTPUT 4 0 indent 0.6
    OUTPUT 4 0 offset_x 30.5
    OUTPUT 4 0 y 4.2
    IF game_data.round_mode
        OUTPUT 4 0 lvalue "custom_game_settings_round_limit"
    ELSE
        OUTPUT 4 0 lvalue "custom_game_settings_score_limit"
    END IF

    # Value "Score Limit/Round Limit"
    OUTPUT 4 1 font "roboto-bold"
    OUTPUT 4 1 font_size 1.3
    OUTPUT 4 1 offset_x 30.5
    OUTPUT 4 1 y 4.2
    IF game_data.score_limit == 0
        OUTPUT 4 1 lvalue "score_unlimited"
    ELSE
        OUTPUT 4 1 value game_data.score_limit
    END IF

    IF game_data.record_replay
        # Recording circle
        OUTPUT 5 0 width 0
        OUTPUT 5 0 height 0
        OUTPUT 5 0 offset_x 48
        OUTPUT 5 0 y 1.9
        OUTPUT 5 0 image circle
        OUTPUT 5 0 image_width 1
        OUTPUT 5 0 image_height 1

        # Label "Match is being recorded"
        OUTPUT 5 1 font "roboto-medium"
        OUTPUT 5 1 font_size 1.3
        OUTPUT 5 1 offset_x 49
        OUTPUT 5 1 y 2
        OUTPUT 5 1 value "REC"
    END IF

    # Label "Physics""
    OUTPUT 6 0 font "roboto-medium"
    OUTPUT 6 0 font_size 1.3
    OUTPUT 6 0 opacity 0.8
    OUTPUT 6 0 lvalue "custom_settings_physics"
    OUTPUT 6 0 indent 0.6
    OUTPUT 6 0 offset_x 9.5
    OUTPUT 6 0 y 6.4

    # Value "Physics"
    OUTPUT 6 1 font "roboto-bold"
    OUTPUT 6 1 font_size 1.3
    OUTPUT 6 1 offset_x 9.5
    OUTPUT 6 1 y 6.4
    IF game_data.physics == 0
        OUTPUT 6 1 lvalue "custom_settings_physics_diabotical"
    ELSE
        IF game_data.physics == 1
            OUTPUT 6 1 lvalue "custom_settings_physics_race"
        ELSE
            OUTPUT 6 1 lvalue "custom_settings_physics_vintage"
        END IF
    END IF
    
    INT preset_length 
    preset_length = LENGTH game_data.settings_preset

    # Label "Custom settings"
    IF preset_length > 0
        # Label "Preset"
        OUTPUT 7 0 font "roboto-medium"
        OUTPUT 7 0 font_size 1.3
        OUTPUT 7 0 opacity 0.8
        OUTPUT 7 0 lvalue "custom_game_settings_preset"
        OUTPUT 7 0 indent 0.6
        OUTPUT 7 0 offset_x 30.5
        OUTPUT 7 0 y 6.4

        # Value "Preset"
        OUTPUT 7 1 font "roboto-bold"
        OUTPUT 7 1 font_size 1.3
        OUTPUT 7 1 color "#ffd43c"
        OUTPUT 7 1 value game_data.settings_preset
        OUTPUT 7 1 offset_x 30.5
        OUTPUT 7 1 y 6.4
    ELSE 
        IF !game_data.is_default_settings
            OUTPUT 7 0 font "roboto-bold"
            OUTPUT 7 0 font_size 1.3
            OUTPUT 7 0 opacity 0.8
            OUTPUT 7 0 lvalue "custom_game_settings_customized"
            OUTPUT 7 0 color "#ffd43c"
            OUTPUT 7 0 offset_x 30.5
            OUTPUT 7 0 y 6.4
        END IF
    END IF

END TEMPLATE


BEGIN TEMPLATE scoreboard_main_table_header
    SETTING ALWAYS_VISIBLE 1
    SETTING item_direction "vertical"
    SETTING cell_direction "horizontal"
    SETTING align "top-left"
    SETTING item_spacing 0
    SETTING cell_spacing 0

ON_UPDATE

    IF !game_data.show_scoreboard
        discard
    END IF

    # cell widths:
    #   avatar 3
    #   country 4.4
    #   name 18
    #   rank 7 (icon 3)
    #   status 8
    #   time 16 (race time)
    #   score 7
    #   kda 9
    #   kda_part 3
    #   dmg 6
    #   ping 5
    #   round wins 6
    #   team score 8

    DOUBLE table_width
    
    # avatar + country + name + ping
    table_width = 30.4
    
    # add rank width
    IF game_data.ranked
        table_width = table_width + 7
    END IF

    # add ready status width
    IF game_data.game_stage <= 1
        table_width = table_width + 8
    END IF

    IF game_data.race_mode
        # add time width
        table_width = table_width + 16
        IF game_data.team_size > 1
            table_width = table_width + 10
        END IF
    ELSE
        # add kda, dmg, team_score width
        table_width = table_width + 23

        # add player score width
        IF game_data.team_size > 1    
            table_width = table_width + 7
        END IF

        # add round score width
        IF game_data.round_mode
            table_width = table_width + 6
        END IF
    END IF

    INT i
    i = 0

    # SPACER
    OUTPUT 0 i width 1
    OUTPUT 0 i height 1
    i = i + 1

    # Background
    OUTPUT 0 i width table_width
    OUTPUT 0 i height 3
    OUTPUT 0 i fill "#00000099"
    i = i + 1

    DOUBLE cell_offset
    cell_offset = 26.3
    
    # Rank icon
    IF game_data.ranked
        OUTPUT 0 i x cell_offset
        OUTPUT 0 i lvalue "stats_rank"
        OUTPUT 0 i width 7
        OUTPUT 0 i opacity 0.7
        OUTPUT 0 i font "roboto-medium-bold"
        OUTPUT 0 i font_size 1.3
        cell_offset = cell_offset + 7
        i = i + 1
    END IF

    # Status
    IF game_data.game_stage <= 1
        OUTPUT 0 i x cell_offset
        OUTPUT 0 i lvalue "stats_status"
        OUTPUT 0 i width 8
        OUTPUT 0 i opacity 0.7
        OUTPUT 0 i font "roboto-medium-bold"
        OUTPUT 0 i font_size 1.3
        cell_offset = cell_offset + 8
        i = i + 1
    END IF

    IF !game_data.race_mode
        # Score
        IF game_data.team_size > 1    
            OUTPUT 0 i x cell_offset
            OUTPUT 0 i lvalue "stats_score"
            OUTPUT 0 i width 7
            OUTPUT 0 i opacity 0.7
            OUTPUT 0 i font "roboto-medium-bold"
            OUTPUT 0 i font_size 1.3
            cell_offset = cell_offset + 7
            i = i + 1
        END IF

        # K/D/A
        OUTPUT 0 i x cell_offset
        OUTPUT 0 i lvalue "stats_kda"
        OUTPUT 0 i width 9
        OUTPUT 0 i opacity 0.7
        OUTPUT 0 i font "roboto-medium-bold"
        OUTPUT 0 i font_size 1.3
        cell_offset = cell_offset + 9
        i = i + 1

        # DMG
        OUTPUT 0 i x cell_offset
        OUTPUT 0 i lvalue "stats_dmg"
        OUTPUT 0 i width 6
        OUTPUT 0 i opacity 0.7
        OUTPUT 0 i font "roboto-medium-bold"
        OUTPUT 0 i font_size 1.3
        cell_offset = cell_offset + 6
        i = i + 1

    END IF

    # Ping
    OUTPUT 0 i x cell_offset
    OUTPUT 0 i lvalue "stats_ping"
    OUTPUT 0 i width 5
    OUTPUT 0 i opacity 0.7
    OUTPUT 0 i font "roboto-medium-bold"
    OUTPUT 0 i font_size 1.3
    cell_offset = cell_offset + 5
    i = i + 1

    # Time
    IF game_data.race_mode
        OUTPUT 0 i x cell_offset
        OUTPUT 0 i lvalue "stats_best_time"
        OUTPUT 0 i width 16
        OUTPUT 0 i opacity 0.7
        OUTPUT 0 i font "roboto-medium-bold"
        OUTPUT 0 i font_size 1.3
        cell_offset = cell_offset + 16
        i = i + 1
    END IF

    # Round Score
    IF game_data.round_mode
        OUTPUT 0 i x cell_offset
        OUTPUT 0 i lvalue "stats_rounds"
        OUTPUT 0 i width 6
        OUTPUT 0 i opacity 0.7
        OUTPUT 0 i font "roboto-medium-bold"
        OUTPUT 0 i font_size 1.3
        cell_offset = cell_offset + 6
        i = i + 1
    END IF

    IF !game_data.race_mode
        IF game_data.game_mode == "macguffin" || game_data.game_mode == "coinrun"
            OUTPUT 0 i lvalue "stats_coins"
        ELSE
            OUTPUT 0 i lvalue "stats_score"
        END IF
        OUTPUT 0 i x cell_offset
        OUTPUT 0 i width 8
        OUTPUT 0 i opacity 0.7
        OUTPUT 0 i font "roboto-medium-bold"
        OUTPUT 0 i font_size 1.3
        cell_offset = cell_offset + 8
        i = i + 1
    END IF
    
END TEMPLATE

BEGIN TEMPLATE scoreboard_main
    SETTING ALWAYS_VISIBLE 1
    SETTING item_direction "vertical"
    SETTING cell_direction "horizontal"
    SETTING align "top-left"
    SETTING item_spacing 0
    SETTING cell_spacing 0
    SETTING iterator game_data.players_per_team
    SETTING iterator2 teams.count

    COL_OUTPUT 0 font_size 1.4
    COL_OUTPUT 1 font_size 1.4
    COL_OUTPUT 2 font_size 1.4
    COL_OUTPUT 3 font_size 1.4
    COL_OUTPUT 4 font_size 1.4
    COL_OUTPUT 5 font_size 1.4
    COL_OUTPUT 6 font_size 1.4
    COL_OUTPUT 7 font_size 1.4
    COL_OUTPUT 8 font_size 1.4
    COL_OUTPUT 9 font_size 1.4
    COL_OUTPUT 10 font_size 1.4
    COL_OUTPUT 11 font_size 1.4
    COL_OUTPUT 12 font_size 1.4
    COL_OUTPUT 13 font_size 1.4
    COL_OUTPUT 14 font_size 1.4

    COL_OUTPUT 0 font "roboto-bold"
    COL_OUTPUT 1 font "roboto-bold"
    COL_OUTPUT 2 font "roboto-bold"
    COL_OUTPUT 3 font "roboto-bold"
    COL_OUTPUT 4 font "roboto-bold"
    COL_OUTPUT 5 font "roboto-bold"
    COL_OUTPUT 6 font "roboto-bold"
    COL_OUTPUT 7 font "roboto-bold"
    COL_OUTPUT 8 font "roboto-bold"
    COL_OUTPUT 9 font "roboto-bold"
    COL_OUTPUT 10 font "roboto-bold"
    COL_OUTPUT 11 font "roboto-bold"
    COL_OUTPUT 12 font "roboto-bold"
    COL_OUTPUT 13 font "roboto-bold"
    COL_OUTPUT 14 font "roboto-bold"

    INT row
    row = 0

    INT real_row
    real_row = 0

    DOUBLE row_offset
    row_offset = 0

    DOUBLE row_offset_extra
    row_offset_extra = 0

    INT i
    INT tidx

    INT odd_row
    odd_row = 1
    
ON_UPDATE
    IF !IDX && !IDX2
        row_offset = 0
        row_offset_extra = 0
        row = 0
        real_row = 0
        tidx = 0
    END IF

    IF IDX >= teams[IDX2].players_count
        break
    END IF

    IF !game_data.show_scoreboard
        discard
    END IF

    # cell widths:
    #   avatar 3
    #   country 4.4
    #   name 18
    #   rank 7 (icon 3)
    #   status 8
    #   time 16 (race time)
    #   score 7
    #   kda 9
    #   kda_part 3
    #   dmg 6
    #   ping 5
    #   round wins 6
    #   team score 8

    INT team_idx
    INT player_idx
    INT player_in_team_idx
    DOUBLE header_width
    DOUBLE row_width
    
    player_in_team_idx = IDX
    team_idx = IDX2
    player_idx = player_in_team_idx + INT(team_idx*game_data.players_per_team)
    
    STRING avatar_url
    INT avatar_length
    avatar_length = LENGTH players[player_idx].avatar
    IF avatar_length > 0
        avatar_url = "customization/avatar/" & players[player_idx].avatar
        avatar_url = avatar_url & ".png"
    ELSE 
        avatar_url = "customization/avatar/av_no_avatar.png"
    END IF

    STRING country_url
    country_url = ""
    INT country_length
    country_length = LENGTH players[player_idx].country
    IF country_length > 0
        country_url = "customization/flag/" & players[player_idx].country
        country_url = country_url & ".png"
    END IF

    IF odd_row
        odd_row = 0
    ELSE
        odd_row = 1
    END IF

    # Reset cell index
    i = 0

    INT render_team_header
    render_team_header = 0

    # Reset "odd" row tracker for new teams
    IF player_in_team_idx == 0
        odd_row = 0
        tidx = tidx + 1
        
        IF game_data.team_size > 1
            render_team_header = 1

            IF row_offset > 0
                row_offset = row_offset + 1
            END IF
        END IF
    ELSE
        render_team_header = 0
    END IF

    STRING row_color
    IF odd_row
        row_color = teams[team_idx].color_dark
    ELSE 
        row_color = teams[team_idx].color
    END IF

    row_color = row_color & "99"

    STRING text_color_grayscale 
    text_color_grayscale = GRAYSCALE teams[team_idx].color

    STRINg text_color
    text_color = "#ffffff"

    IF text_color_grayscale > 0.55
        text_color = "#1c1c1c"
    END IF

    STRING rank_icon_url
    rank_icon_url = ""

    IF game_data.ranked
        IF players[player_idx].rank_position > 0
            IF players[player_idx].rank_position == 1
                rank_icon_url = "ranks/top_4.png"
            ELSE
                IF players[player_idx].rank_position > 100
                    rank_icon_url = "ranks/top_1.png"
                END IF
                IF players[player_idx].rank_position <= 100
                    rank_icon_url = "ranks/top_2.png"
                END IF
                IF players[player_idx].rank_position <= 50
                    rank_icon_url = "ranks/top_3.png"
                END IF
            END IF
        ELSE
            IF players[player_idx].rank_tier == 0
                IF game_data.team_size >= 1
                    IF game_data.team_size <= 5
                        rank_icon_url = "ranks/unranked_" & game_data.team_size 
                        rank_icon_url = rank_icon_url & ".png"
                    ELSE
                        rank_icon_url = "ranks/unranked_5.png"
                    END IF
                ELSE
                    rank_icon_url = "ranks/unranked_1.png"
                END IF
            ELSE 
                rank_icon_url = "ranks/" & players[player_idx].rank_tier
                rank_icon_url = rank_icon_url & ".png"
            END IF
        END IF
    END IF

    INT ping
    ping = players[player_idx].ping * 1000
    ping = CLAMP ping 0 999

    row_width = 0

    INT team_header_row_idx
    team_header_row_idx = 0

    # ===============================================
    # TEAM Header
    IF render_team_header
    
        OUTPUT row 0 height 2.4
        OUTPUT row 0 fill teams[team_idx].color_dark
        OUTPUT row 0 font "montserrat-bold"
        OUTPUT row 0 y row_offset
        OUTPUT row 0 value teams[team_idx].team_name
        OUTPUT row 0 align "left-edge"
        OUTPUT row 0 indent 1
        OUTPUT row 0 color text_color
        
        team_header_row_idx = row

        row = row + 1
        real_row = real_row + 1
        row_offset = row_offset + 2.4
        
    END IF

    # ===============================================
    # ROW Background
    OUTPUT row i height 3
    OUTPUT row i y row_offset
    OUTPUT row i fill row_color
    bg_row = row
    i = i + 1

    DOUBLE cell_offset
    cell_offset = 0

    # ===============================================
    # AVATAR
    OUTPUT row i width 3
    OUTPUT row i height 3
    OUTPUT row i image avatar_url
    OUTPUT row i image_width 3
    OUTPUT row i image_height 3
    OUTPUT row i y row_offset
    OUTPUT row i x 0
    row_width = row_width + 3
    i = i + 1

    OUTPUT row i width 2
    OUTPUT row i height 3
    OUTPUT row i x -1
    OUTPUT row i y row_offset
    IF players[player_idx].is_self        
        OUTPUT row i image "images/icons/fa/caret-right.svg"
        OUTPUT row i image_width 2
        OUTPUT row i image_height 2
        OUTPUT row i image_color "#ffffff"
    END IF
    i = i + 1 

    # ===============================================
    # COUNTRY
    OUTPUT row i width 4.4
    OUTPUT row i height 3
    IF country_length > 0
        OUTPUT row i image country_url
    END IF
    OUTPUT row i image_width 3
    OUTPUT row i image_height 3
    OUTPUT row i y row_offset
    OUTPUT row i x row_width
    row_width = row_width + 4.4
    i = i + 1

    # ===============================================
    # NAME
    OUTPUT row i HEIGHT 3
    OUTPUT row i WIDTH 18
    OUTPUT row i align "left-edge"
    OUTPUT row i font "montserrat-bold"
    OUTPUT row i font_size 1.4
    OUTPUT row i color text_color
    OUTPUT row i VALUE players[player_idx].name
    OUTPUT row i y row_offset
    OUTPUT row i x row_width
    row_width = row_width + 18
    i = i + 1

    # ===============================================
    # RANK ICON
    IF game_data.ranked
        OUTPUT row i width 7
        OUTPUT row i height 3
        OUTPUT row i image rank_icon_url
        OUTPUT row i image_width 3
        OUTPUT row i image_height 3
        OUTPUT row i y row_offset
        OUTPUT row i x row_width
        row_width = row_width + 7
        i = i + 1
    END IF

    # ===============================================
    # READY STATUS
    IF game_data.game_stage <= 1
        OUTPUT row i width 8
        OUTPUT row i height 3
        OUTPUT row i y row_offset
        OUTPUT row i x row_width
        OUTPUT row i color text_color
        IF players[player_idx].ready
            OUTPUT row i lvalue "stats_ready"
        ELSE
            OUTPUT row i lvalue "stats_not_ready"
        END IF
        row_width = row_width + 8
        i = i + 1
    END IF

    IF !game_data.race_mode

        IF game_data.team_size > 1
            # ===============================================
            # SCORE
            OUTPUT row i width 7
            OUTPUT row i height 3
            OUTPUT row i y row_offset
            OUTPUT row i x row_width
            OUTPUT row i color text_color
            OUTPUT row i value players[player_idx].score
            row_width = row_width + 7
            i = i + 1
        END IF

        # ===============================================
        # KDA Background
        OUTPUT row i width 9
        OUTPUT row i height 3
        OUTPUT row i y row_offset
        OUTPUT row i x row_width
        OUTPUT row i color text_color
        OUTPUT row i fill "#FFFFFF19"
        i = i + 1

        # ===============================================
        # FRAGS
        OUTPUT row i width 3
        OUTPUT row i height 3
        OUTPUT row i y row_offset
        OUTPUT row i x row_width
        OUTPUT row i color text_color
        OUTPUT row i value players[player_idx].kills
        row_width = row_width + 3
        i = i + 1

        # ===============================================
        # DEATHS
        OUTPUT row i width 3
        OUTPUT row i height 3
        OUTPUT row i y row_offset
        OUTPUT row i x row_width
        OUTPUT row i color text_color
        OUTPUT row i value players[player_idx].deaths
        row_width = row_width + 3
        i = i + 1

        # ===============================================
        # ASSISTS
        OUTPUT row i width 3
        OUTPUT row i height 3
        OUTPUT row i y row_offset
        OUTPUT row i x row_width
        OUTPUT row i color text_color
        OUTPUT row i value players[player_idx].assists
        row_width = row_width + 3
        i = i + 1

        # ===============================================
        # DMG
        OUTPUT row i width 6
        OUTPUT row i height 3
        OUTPUT row i y row_offset
        OUTPUT row i x row_width
        OUTPUT row i color text_color
        OUTPUT row i value players[player_idx].damage_inflicted
        row_width = row_width + 6
        i = i + 1

    END IF

    # ===============================================
    # PING
    OUTPUT row i width 5
    OUTPUT row i height 3
    OUTPUT row i y row_offset
    OUTPUT row i x row_width
    OUTPUT row i color text_color
    OUTPUT row i value ping
    row_width = row_width + 5
    i = i + 1

    # ===============================================
    # RACE TIME
    IF game_data.race_mode
        OUTPUT row i width 16
        OUTPUT row i height 3
        OUTPUT row i y row_offset
        OUTPUT row i x row_width
        OUTPUT row i color text_color
        OUTPUT row i value players[player_idx].best_time
        row_width = row_width + 16
        i = i + 1
        
        IF render_team_header
            OUTPUT team_header_row_idx 0 width row_width
        END IF

        IF player_in_team_idx == 0
            IF game_data.team_size > 1
                header_width = row_width

                team_height = 3 * teams[team_idx].players_count

                STRING team_race_time
                team_race_time = FORMAT_TIME teams[team_idx].team_score

                # ===============================================
                # TEAM MAIN SCORE
                OUTPUT row i height team_height
                OUTPUT row i width 10
                OUTPUT row i font_size 1.8
                OUTPUT row i fill teams[team_idx].color
                OUTPUT row i color text_color
                OUTPUT row i value team_race_time
                OUTPUT row i y row_offset
                OUTPUT row i x header_width
                i = i + 1

                header_width = header_width + 10

                IF render_team_header
                    OUTPUT team_header_row_idx 0 width header_width
                END IF
            END IF
        END IF

    ELSE 

        header_width = row_width

        # TEAM Round Score & Main Score
        IF player_in_team_idx == 0
            team_height = 3 * teams[team_idx].players_count
            
            # ===============================================
            # TEAM ROUND SCORE
            IF game_data.round_mode
                OUTPUT row i height team_height
                OUTPUT row i width 6
                OUTPUT row i font_size 1.8
                OUTPUT row i fill teams[team_idx].color_dark
                OUTPUT row i color text_color
                OUTPUT row i value teams[team_idx].game_score
                OUTPUT row i y row_offset
                OUTPUT row i x header_width
                i = i + 1

                header_width = header_width + 6
            END IF

            # ===============================================
            # TEAM MAIN SCORE
            OUTPUT row i height team_height
            OUTPUT row i width 8
            OUTPUT row i font_size 2
            OUTPUT row i fill teams[team_idx].color
            OUTPUT row i color text_color
            OUTPUT row i value teams[team_idx].team_score
            OUTPUT row i y row_offset
            OUTPUT row i x header_width
            i = i + 1

            header_width = header_width + 8

            IF render_team_header
                OUTPUT team_header_row_idx 0 width header_width
            END IF
        END IF

    END IF

    # Set background width
    OUTPUT bg_row 0 width row_width

    row = row + 1
    real_row = real_row + 1
    row_offset = row_offset + 3
    
END TEMPLATE

BEGIN TEMPLATE scoreboard_spectators
    SETTING ALWAYS_VISIBLE 1
    SETTING align "top-left"
    SETTING iterator spectators.count

    INT i
    i = 1
    
ON_UPDATE

    INT team_idx
    team_idx = 0
    
    INT total_teams_with_players
    total_teams_with_players = 0

    FOR teams.count
        IF teams[team_idx].players_count > 0
            total_teams_with_players = total_teams_with_players + 1
        END IF

        team_idx = team_idx + 1
    END FOR

    IF !game_data.show_scoreboard
        discard
    END IF

    IF spectators.count == 0
        discard
    END IF

    DOUBLE offset
    offset = game_data.total_player_count * 3
    offset = offset + total_teams_with_players

    IF total_teams_with_players == 0
        offset = offset + 1
    END IF

    IF game_data.team_size > 1
        offset = offset + DOUBLE (total_teams_with_players * 2.4)
    END IF

    DOUBLE names_offset 
    names_offset = offset + 3.7

    IF IDX == 0
        i = 1

        # "Anchor" Point for 0 0 so the offset works
        OUTPUT 0 0 width 1
        OUTPUT 0 0 height 1
        
        # Background
        OUTPUT 0 1 width 60
        OUTPUT 0 1 height 6
        OUTPUT 0 1 fill "#00000099"
        OUTPUT 0 1 y offset

        # Header
        OUTPUT 1 0 lvalue "spectators"
        OUTPUT 1 0 font_size 1.3
        OUTPUT 1 0 font "roboto-bold"
        OUTPUT 1 0 shadow 1
        OUTPUT 1 0 opacity 1
        OUTPUT 1 0 color "#bbbbbb"
        OUTPUT 1 0 x 1
        OUTPUT 1 0 indent 1
        OUTPUT 1 0 y DOUBLE (offset+1.5)
        
        # Padding left for name list
        OUTPUT 2 i width 1
        OUTPUT 2 i height 1
        OUTPUT 2 i y names_offset
        i = i + 1

    END IF

    # Name
    OUTPUT 2 i value spectators[IDX].name
    OUTPUT 2 i font_size 1.3
    OUTPUT 2 i font "montserrat-bold"
    OUTPUT 2 i indent 1
    OUTPUT 2 i shadow 1
    OUTPUT 2 i y names_offset
    i = i + 1

END TEMPLATE

BEGIN TEMPLATE scoreboard_connecting
    SETTING ALWAYS_VISIBLE 1
    SETTING align "top-left"
    SETTING iterator connecting_users.count

    INT i
    i = 1
    
ON_UPDATE

    INT team_idx
    team_idx = 0
    
    INT total_teams_with_players
    total_teams_with_players = 0

    FOR teams.count
        IF teams[team_idx].players_count > 0
            total_teams_with_players = total_teams_with_players + 1
        END IF

        team_idx = team_idx + 1
    END FOR

    IF !game_data.show_scoreboard
        discard
    END IF

    IF connecting_users.count == 0
        discard
    END IF


    ### hack to fix an issue where connecting_users.count is > 0 but all the entries are empty (and nobody is actually connecting)
    INT hack_idx
    INT hack_count
    INT hack_str_len
    hack_count = 0
    hack_str_len = 0
    hack_idx = 0
    FOR connecting_users.count
        hack_str_len = LENGTH connecting_users[hack_idx].user_name

        IF hack_str_len > 0
            hack_count = hack_count + 1
        END IF

        hack_idx = hack_idx + 1
    END FOR

    IF hack_count == 0
        discard
    END IF
    ### end hack


    DOUBLE offset
    offset = game_data.total_player_count * 3
    offset = offset + total_teams_with_players

    IF total_teams_with_players == 0
        offset = offset + 1
    END IF

    IF game_data.team_size > 1
        offset = offset + DOUBLE (total_teams_with_players * 2.4)
    END IF

    IF spectators.count > 0
        offset = offset + 7
    END IF

    DOUBLE names_offset 
    names_offset = offset + 3.7

    IF IDX == 0
        i = 1

        # "Anchor" Point for 0 0 so the offset works
        OUTPUT 0 0 width 1
        OUTPUT 0 0 height 1
        
        # Background
        OUTPUT 0 1 width 60
        OUTPUT 0 1 height 6
        OUTPUT 0 1 fill "#00000099"
        OUTPUT 0 1 y offset

        # Header
        OUTPUT 1 0 lvalue "connecting"
        OUTPUT 1 0 font_size 1.3
        OUTPUT 1 0 font "roboto-bold"
        OUTPUT 1 0 shadow 1
        OUTPUT 1 0 opacity 1
        OUTPUT 1 0 color "#bbbbbb"
        OUTPUT 1 0 x 1
        OUTPUT 1 0 indent 1
        OUTPUT 1 0 y DOUBLE (offset+1.5)

        # Padding left for name list
        OUTPUT 2 i width 1
        OUTPUT 2 i height 1
        OUTPUT 2 i y names_offset
        i = i + 1
        
    END IF

    # Name
    OUTPUT 2 i value connecting_users[IDX].user_name
    OUTPUT 2 i font_size 1.3
    OUTPUT 2 i font "montserrat-bold"
    OUTPUT 2 i indent 1
    OUTPUT 2 i shadow 1
    OUTPUT 2 i y names_offset
    i = i + 1

END TEMPLATE