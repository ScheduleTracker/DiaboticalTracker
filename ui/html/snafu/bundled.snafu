INSTANCE afk_countdown 50 42

BEGIN TEMPLATE afk_countdown
    SETTING item_direction "vertical"
    SETTING cell_direction "horizontal"
    SETTING align "center"
    SETTING item_spacing 0
    SETTING cell_spacing 0
    SETTING row_align "center"

    RASTERIZE_TEXT "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ" "roboto-bold" 3
    RASTERIZE_TEXT "0123456789." "montserrat-bold" 5
ON_UPDATE

    IF game_data.afk_count_down == 0
        discard
    END IF

    OUTPUT 0 0 lvalue "ingame_message_inactivity_countdown"
    LOCALIZE 0 0
    OUTPUT 0 0 font "roboto-bold"
    OUTPUT 0 0 font_size 3
    OUTPUT 0 0 shadow 1
    OUTPUT 0 0 height 10
    OUTPUT 0 0 align "center"

    OUTPUT 0 1 value game_data.afk_count_down
    OUTPUT 0 1 font "montserrat-bold"
    OUTPUT 0 1 font_size 5
    OUTPUT 0 1 shadow 1
    OUTPUT 0 1 indent 2
    OUTPUT 0 1 width 10
    OUTPUT 0 1 height 10
    OUTPUT 0 1 color "#ff0000"
    OUTPUT 0 1 align "center"

    # this is just a hack so the number cell uses its full width for alignment and the whole thing doesn't "jump" around because the total width changes with every number
    OUTPUT 0 2 width 1
    OUTPUT 0 2 height 1
    OUTPUT 0 2 fill "#000000"
    OUTPUT 0 2 opacity 0.01
    OUTPUT 0 2 align "center"


END TEMPLATE
INSTANCE announcements 50 21

BEGIN TEMPLATE announcements
    SETTING item_direction "vertical"
    SETTING cell_direction "horizontal"
    SETTING align "top-edge"
    SETTING row_align "center"
    SETTING item_spacing 0
    SETTING cell_spacing 0

    STRING font
    font = "montserrat-bold"

    COL_OUTPUT 0 font font
    COL_OUTPUT 0 shadow 1
    COL_OUTPUT 0 uppercase 1

    RASTERIZE_TEXT "ABCDEFGHIJKLMNOPQRSTUVWXYZ.:!" font 4
    RASTERIZE_TEXT "0123456789." font 5
    RASTERIZE_TEXT "ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789.!" font 7
    RASTERIZE_TEXT "ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789.:!" font 2
ON_UPDATE

    INT lines
    lines = 1

    DOUBLE fontsize1
    DOUBLE fontsize2

    fontsize1 = 4
    fontsize2 = 5

    INT show
    show = 0

    IF announce.type == "countdown"
        show = 1
        fontsize1 = 7

        OUTPUT 0 0 value announce.value
    END IF

    IF announce.type == "round_countdown"
        show = 1
        lines = 2
        fontsize1 = 4
        fontsize2 = 7

        OUTPUT 0 0 lvalue "ingame_message_round_begins_in"
        LOCALIZE 0 0
        OUTPUT 2 0 value announce.value
    END IF

    IF announce.type == "respawn_countdown"
        show = 1
        lines = 2
        fontsize1 = 4
        fontsize2 = 5

        OUTPUT 0 0 lvalue "ingame_message_respawning_in"
        LOCALIZE 0 0
        OUTPUT 2 0 value announce.value
    END IF

    IF announce.type == "pause_resume"
        show = 1
        lines = 2
        fontsize1 = 4
        fontsize2 = 7

        OUTPUT 0 0 lvalue "ingame_message_match_resumes_in"
        LOCALIZE 0 0
        OUTPUT 2 0 value announce.value
    END IF

    IF announce.type == "pre_countdown"
        show = 1
        lines = 2
        fontsize1 = 4
        fontsize2 = 2

        OUTPUT 0 0 lvalue "ingame_message_get_ready"
        LOCALIZE 0 0
        OUTPUT 2 0 lvalue "ingame_message_start_countdown"
        OUTPUT 2 0 value announce.value
        LOCALIZE 2 0
    END IF

    IF announce.type == "overtime"
        show = 1
        lines = 2
        fontsize1 = 4
        fontsize2 = 2

        OUTPUT 0 0 lvalue "ingame_message_overtime"
        LOCALIZE 0 0
        OUTPUT 2 0 lvalue "ingame_message_overtime_seconds"
        OUTPUT 2 0 value announce.value
        LOCALIZE 2 0
    END IF

    IF announce.type == "score_overtime"
        show = 1
        lines = 2
        fontsize1 = 4
        fontsize2 = 2

        OUTPUT 0 0 lvalue "ingame_message_overtime"
        LOCALIZE 0 0
        OUTPUT 2 0 lvalue "ingame_message_overtime_fraglimit"
        OUTPUT 2 0 value announce.value
        LOCALIZE 2 0
    END IF

    IF announce.type == "saved_map"
        show = 1

        OUTPUT 0 0 lvalue "editor_saved_map"
        OUTPUT 0 0 value announce.value
        LOCALIZE 0 0
    END IF

    IF announce.type == "baked_map"
        show = 1

        OUTPUT 0 0 lvalue "editor_baked_map"
        OUTPUT 0 0 value announce.value
        LOCALIZE 0 0
    END IF

    IF announce.type == "bake_map_failed"
        show = 1

        OUTPUT 0 0 lvalue "editor_map_bake_failed"
        LOCALIZE 0 0
    END IF

    IF announce.type == "round_x"
        show = 1
        fontsize1 = 4

        OUTPUT 0 0 lvalue "ingame_message_round_x"
        OUTPUT 0 0 value announce.value
        LOCALIZE 0 0
    END IF

    IF announce.type == "round_cleared"
        show = 1
        fontsize1 = 4

        OUTPUT 0 0 lvalue "ingame_message_round_cleared"
        LOCALIZE 0 0
    END IF

    IF announce.type == "fragged_by"
        show = 1

        OUTPUT 0 0 lvalue "ingame_message_fragged_by"
        OUTPUT 0 0 value announce.value
        LOCALIZE 0 0
    END IF

    IF announce.type == "self_frag"
        show = 1

        OUTPUT 0 0 lvalue "ingame_message_fragged_self"
        LOCALIZE 0 0
    END IF

    IF announce.type == "announce"
        show = 1
        fontsize1 = 4

        OUTPUT 0 0 value announce.value
    END IF

    IF announce.type == "fight"
        show = 1
        fontsize1 = 7

        OUTPUT 0 0 lvalue "ingame_message_fight"
        LOCALIZE 0 0
    END IF


    OUTPUT 0 0 opacity announce.opacity
    OUTPUT 0 0 font_size fontsize1
    OUTPUT 0 0 height DOUBLE (fontsize1 + 1)

    # Hack to avoid unknown messages from getting prior announcements stuck on the screen
    IF show == 0
        OUTPUT 0 0 lvalue "empty"
        LOCALIZE 0 0
    END IF

    IF lines == 2
        # Bottom border line
        OUTPUT 1 0 fill "#ffffff80"
        OUTPUT 1 0 height 0.2
        OUTPUT 1 0 width 35

        OUTPUT 1 0 opacity announce.opacity
        OUTPUT 2 0 opacity announce.opacity

        OUTPUT 2 0 font_size fontsize2
        OUTPUT 2 0 height DOUBLE (fontsize2 + 1)
    ELSE
        OUTPUT 1 0 opacity 0
        OUTPUT 2 0 opacity 0
    END IF


END TEMPLATE
BEGIN TEMPLATE chat
    SETTING iterator ingame_chat.count
    SETTING item_direction "vertical reverse"
    SETTING cell_direction "horizontal"
    SETTING align pivot
    SETTING item_spacing 0.4
    SETTING cell_spacing 0
    SETTING ALWAYS_VISIBLE 1

    IF font == ""
        font = "notosans-bold"
    END IF
    IF font == "default"
        font = "notosans-bold"
    END IF

    COL_OUTPUT 0 font font
    COL_OUTPUT 1 font font

    RASTERIZE_TEXT "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789.:,;!?()[]_-ยง$%&/()=" font fontSize
ON_UPDATE

    DOUBLE row_height
    row_height = fontSize * 1.1

    DOUBLE ts_width
    ts_width = fontSize * 4

    IF showTimestamp
        OUTPUT IDX 0 value ingame_chat[IDX].timestamp
        OUTPUT IDX 0 opacity ingame_chat[IDX].opacity
        OUTPUT IDX 0 height row_height
        OUTPUT IDX 0 font_size fontSize
        OUTPUT IDX 0 color "#FFFFFF"
        OUTPUT IDX 0 shadow 1
        OUTPUT IDX 0 width ts_width
    END IF 

    OUTPUT IDX 1 value ingame_chat[IDX].message
    OUTPUT IDX 1 opacity ingame_chat[IDX].opacity
    OUTPUT IDX 1 height row_height
    OUTPUT IDX 1 font_size fontSize
    OUTPUT IDX 1 color ingame_chat[IDX].color
    OUTPUT IDX 1 shadow 1

    IF ingame_chat_active 
        # show background, not sure how to do this atm / where to output
    ELSE
        # hide background
    END IF

END TEMPLATE
BEGIN TEMPLATE coins
    SETTING cell_direction "horizontal"
    SETTING align pivot

    //Icon    
    COL_OUTPUT 0 image "images/item_coin.svg"
    COL_OUTPUT 0 image_color "#ffd700"
    COL_OUTPUT 0 image_width fontSize
    COL_OUTPUT 0 image_height fontSize
    COL_OUTPUT 0 width fontSize
    COL_OUTPUT 0 height fontSize

    //Separator
    DOUBLE separator_width
    separator_width = fontSize / 2
    COL_OUTPUT 1 width separator_width

    //Coin Count
    DOUBLE width
    width = fontSize * 2
    COL_OUTPUT 2 color color
    COL_OUTPUT 2 font font
    COL_OUTPUT 2 shadow 1
    COL_OUTPUT 2 align "left-edge"

    RASTERIZE_TEXT "x0123456789" font fontSize
ON_UPDATE

    IF !common_game_data.self_alive 
        discard
    END IF
    IF battle_data.self.coins == 0 
        discard
    END IF

    // Coin Count value
    STRING value
    value = "ร" & battle_data.self.coins
    OUTPUT 0 2 value value
    
END TEMPLATE
BEGIN TEMPLATE controls
    //SETTING cell_direction "horizontal"
    //SETTING align pivot
    INT st

    DOUBLE inactive_opacity
    inactive_opacity = 0.1

    INT style
    style = 1

    IF st == 2
        style = 2
        inactive_opacity = 0
    END IF

    DOUBLE icon_size
    icon_size = height / 2
    
    COL_OUTPUT 0 image_width icon_size
    COL_OUTPUT 0 image_height icon_size
    COL_OUTPUT 1 image_width icon_size
    COL_OUTPUT 1 image_height icon_size
    COL_OUTPUT 2 image_width icon_size
    COL_OUTPUT 2 image_height icon_size
    COL_OUTPUT 0 width icon_size
    COL_OUTPUT 0 height icon_size
    COL_OUTPUT 1 width icon_size
    COL_OUTPUT 1 height icon_size
    COL_OUTPUT 2 width icon_size
    COL_OUTPUT 2 height icon_size

    RASTERIZE "images/controls_down.svg" icon_size icon_size
    RASTERIZE "images/controls_forward.svg" icon_size icon_size
    RASTERIZE "images/controls_up.svg" icon_size icon_size
    RASTERIZE "images/controls_left.svg" icon_size icon_size
    RASTERIZE "images/controls_back.svg" icon_size icon_size
    RASTERIZE "images/controls_right.svg" icon_size icon_size

    RASTERIZE "images/controls_down2.svg" icon_size icon_size
    RASTERIZE "images/controls_forward2.svg" icon_size icon_size
    RASTERIZE "images/controls_up2.svg" icon_size icon_size
    RASTERIZE "images/controls_left2.svg" icon_size icon_size
    RASTERIZE "images/controls_back2.svg" icon_size icon_size
    RASTERIZE "images/controls_right2.svg" icon_size icon_size
    
ON_UPDATE

    IF !common_game_data.self_alive 
        discard
    END IF

    IF IN_EDITOR
        inactive_opacity = 0.9
    END IF

    IF style == 1
        OUTPUT 0 0 image "images/controls_down.svg"
        OUTPUT 0 1 image "images/controls_forward.svg"
        OUTPUT 0 2 image "images/controls_up.svg"
        OUTPUT 1 0 image "images/controls_left.svg"
        OUTPUT 1 1 image "images/controls_back.svg"
        OUTPUT 1 2 image "images/controls_right.svg"
    END IF
    
    IF style == 2
        OUTPUT 0 0 image "images/controls_down2.svg"
        OUTPUT 0 1 image "images/controls_forward2.svg"
        OUTPUT 0 2 image "images/controls_up2.svg"
        OUTPUT 1 0 image "images/controls_left2.svg"
        OUTPUT 2 1 image "images/controls_back2.svg"
        OUTPUT 1 2 image "images/controls_right2.svg"
    END IF
    
    IF battle_data.key_down
        OUTPUT 0 0 opacity 1.0
    ELSE
        OUTPUT 0 0 opacity inactive_opacity
    END IF

    IF battle_data.key_forward
        OUTPUT 0 1 opacity 1.0
    ELSE
        OUTPUT 0 1 opacity inactive_opacity
    END IF

    IF battle_data.key_up
        OUTPUT 0 2 opacity 1.0
    ELSE
        OUTPUT 0 2 opacity inactive_opacity
    END IF
    
    IF battle_data.key_left
        OUTPUT 1 0 opacity 1.0
    ELSE
        OUTPUT 1 0 opacity inactive_opacity
    END IF

    IF style == 1
        IF battle_data.key_back
            OUTPUT 1 1 opacity 1.0
        ELSE
            OUTPUT 1 1 opacity inactive_opacity
        END IF
    END IF
    IF style == 2
        IF battle_data.key_back
            OUTPUT 2 1 opacity 1.0
        ELSE
            OUTPUT 2 1 opacity inactive_opacity
        END IF
    END IF

    IF battle_data.key_right
        OUTPUT 1 2 opacity 1.0
    ELSE
        OUTPUT 1 2 opacity inactive_opacity
    END IF
    
END TEMPLATE
BEGIN TEMPLATE editing_info
    SETTING iterator editing_info.count
    SETTING item_direction "vertical"
    SETTING cell_direction "horizontal"
    SETTING align pivot
    SETTING item_spacing 0.4
    SETTING cell_spacing 0
    SETTING ALWAYS_VISIBLE 1

    IF font == "default"
        font = "notosans-bold"
    END IF

    COL_OUTPUT 0 font font
    COL_OUTPUT 1 font font

    RASTERIZE_TEXT "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789.:,;!" font fontSize
ON_UPDATE

    DOUBLE row_height
    row_height = fontSize * 1.1

    DOUBLE ts_width
    ts_width = fontSize * 4

    OUTPUT IDX 0 value editing_info[IDX].text
    OUTPUT IDX 0 opacity 1.0
    OUTPUT IDX 0 height row_height
    OUTPUT IDX 0 font_size fontSize
    OUTPUT IDX 0 color "#ffffff"
    OUTPUT IDX 0 shadow 1

END TEMPLATE

BEGIN TEMPLATE enemies_alive
    SETTING align pivot
    INT aliveText
    INT teamColor
    INT shadow

    COL_OUTPUT 0 font font
    COL_OUTPUT 0 align pivot
    COL_OUTPUT 0 uppercase 1

    IF shadow
        COL_OUTPUT 0 shadow 1
    END IF

    RASTERIZE_TEXT "ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" font fontSize
ON_UPDATE

    IF game_data.game_mode != "ca" && game_data.game_mode != "wipeout"
        IF !IN_EDITOR
            discard
        END IF
    END IF 

    INT val
    IF IN_EDITOR
        val = 1
    ELSE
        val = game_data.enemy_team.alive_count
    END IF

    STRING text_color
    text_color = color
    IF teamColor
        text_color = game_data.enemy_team.color
    END IF
    OUTPUT 0 0 color text_color

    IF aliveText
        OUTPUT 0 0 lvalue "alive"
        OUTPUT 0 0 value val
        LOCALIZE 0 0
    ELSE 
        OUTPUT 0 0 value val
    END IF

END TEMPLATE


FONT "default" "ui/html/fonts/furore.otf"
FONT "roboto" "ui/html/fonts/Roboto-Regular.ttf"
FONT "roboto-medium" "ui/html/fonts/roboto-medium.ttf"
FONT "roboto-medium-bold" "ui/html/fonts/Roboto-Bold.ttf"
FONT "roboto-bold" "ui/html/fonts/Roboto-Black.ttf"
FONT "montserrat" "ui/html/fonts/Montserrat-SemiBold.ttf"
FONT "montserrat-bold" "ui/html/fonts/Montserrat-ExtraBold.ttf"
FONT "agencyfb-bold" "ui/html/fonts/agencyfb-bold.ttf"
FONT "furore" "ui/html/fonts/furore.otf"
FONT "notosans" "ui/html/fonts/NotoSans-Regular.ttf"
FONT "notosans-bold" "ui/html/fonts/NotoSans-Bold.ttf"
FONT "poppins-medium" "ui/html/fonts/Poppins-Medium.ttf"
FONT "poppins-bold" "ui/html/fonts/Poppins-Bold.ttf"
FONT "veneer" "ui/html/fonts/veneer.otf"
FONT "veneer-italic" "ui/html/fonts/veneer_italic.otf"

BEGIN TEMPLATE fps
    SETTING align pivot
    INT shadow

    COL_OUTPUT 0 font font
    COL_OUTPUT 0 align pivot
    COL_OUTPUT 0 color color
    IF shadow 
        COL_OUTPUT 0 shadow 1
    END IF

    RASTERIZE_TEXT "0123456789" font fontSize
ON_UPDATE    

    OUTPUT 0 0 value misc_data.fps

END TEMPLATE

BEGIN TEMPLATE frag_feed
    SETTING iterator kill_feed.count
    SETTING item_direction direction
    SETTING cell_direction "horizontal"
    SETTING align pivot
    SETTING item_spacing 0.4
    SETTING cell_spacing 0
    SETTING row_align v_align

    DOUBLE row_height
    row_height = fontSize * 2

    RASTERIZE "images/weapon_rl.svg" row_height row_height
    RASTERIZE "images/weapon_melee.svg" row_height row_height
    RASTERIZE "images/weapon_rl.svg" row_height row_height
    RASTERIZE "images/weapon_sb.svg" row_height row_height
    RASTERIZE "images/weapon_mac.svg" row_height row_height
    RASTERIZE "images/weapon_cb.svg" row_height row_height
    RASTERIZE "images/weapon_pncr.svg" row_height row_height
    RASTERIZE "images/weapon_shaft.svg" row_height row_height
    RASTERIZE "images/weapon_gl.svg" row_height row_height
    RASTERIZE "images/weapon_ss.svg" row_height row_height
    RASTERIZE "images/weapon_mg.svg" row_height row_height
    RASTERIZE "images/weapon_w9.svg" row_height row_height
    RASTERIZE "images/weapon_st.svg" row_height row_height
    RASTERIZE "images/weapon_iw.svg" row_height row_height
    RASTERIZE "images/weapon_sw.svg" row_height row_height
    RASTERIZE "images/weapon_bw.svg" row_height row_height
    RASTERIZE "images/weapon_smw.svg" row_height row_height
    RASTERIZE "images/weapon_hw.svg" row_height row_height
    RASTERIZE "images/weapon_kw.svg" row_height row_height
    RASTERIZE "images/weapon_vc.svg" row_height row_height
    RASTERIZE "images/weapon_bl.svg" row_height row_height

    RASTERIZE "images/kick_icon.svg" row_height row_height

    RASTERIZE_TEXT "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" font fontSize
ON_UPDATE

    #kill_feed[]
    #    bool is_suicide = false;
    #    std::string image;
    #    std::string powerup_image;
    #    std::string attacker_name;
    #    std::string target_name;
    #    std::string attacker_color;
    #    std::string target_color;


    DOUBLE attacker_name_color_grayscale 
    attacker_name_color_grayscale = GRAYSCALE kill_feed[IDX].attacker_color

    STRING attacker_name_color
    attacker_name_color = "#ffffff"

    IF attacker_name_color_grayscale > 0.55
        attacker_name_color = "#1c1c1c"
    END IF

    DOUBLE target_name_color_grayscale 
    target_name_color_grayscale = GRAYSCALE kill_feed[IDX].target_color

    STRING target_name_color
    target_name_color = "#ffffff"

    IF target_name_color_grayscale > 0.55
        target_name_color = "#1c1c1c"
    END IF

    DOUBLE indent
    indent = fontSize * 0.8

    DOUBLE image_padding
    image_padding = fontSize

    IF kill_feed[IDX].is_suicide

        OUTPUT IDX 0 height row_height
        OUTPUT IDX 0 value kill_feed[IDX].attacker_name
        OUTPUT IDX 0 font_size fontSize
        OUTPUT IDX 0 font font
        OUTPUT IDX 0 fill kill_feed[IDX].attacker_color
        OUTPUT IDX 0 indent indent
        OUTPUT IDX 0 color attacker_name_color
        OUTPUT IDX 0 border_radius 0.3

        OUTPUT IDX 1 width DOUBLE(fontSize * 0.2)

        OUTPUT IDX 2 height row_height
        OUTPUT IDX 2 lvalue "fraglog_player_suicide"
        OUTPUT IDX 2 value ""
        LOCALIZE IDX 2
        OUTPUT IDX 2 font_size fontSize
        OUTPUT IDX 2 font font
        OUTPUT IDX 2 fill "#00000066"
        OUTPUT IDX 2 indent indent
        OUTPUT IDX 2 border_radius 0.3
        
    ELSE

        OUTPUT IDX 0 value kill_feed[IDX].attacker_name
        OUTPUT IDX 0 height row_height
        OUTPUT IDX 0 font_size fontSize
        OUTPUT IDX 0 font font
        OUTPUT IDX 0 fill kill_feed[IDX].attacker_color
        OUTPUT IDX 0 indent indent
        OUTPUT IDX 0 color attacker_name_color
        OUTPUT IDX 0 border_radius 0.3

        # powerup icon
        # ECHO kill_feed[IDX].powerup_image

        # weapon icon
        OUTPUT IDX 2 width DOUBLE (row_height * image_padding)
        OUTPUT IDX 2 height row_height
        OUTPUT IDX 2 image_width row_height
        OUTPUT IDX 2 image_height row_height
        OUTPUT IDX 2 image kill_feed[IDX].image
        OUTPUT IDX 2 image_color "#ffffff"

        OUTPUT IDX 3 value kill_feed[IDX].target_name
        OUTPUT IDX 3 height row_height
        OUTPUT IDX 3 font_size fontSize
        OUTPUT IDX 3 font font
        OUTPUT IDX 3 fill kill_feed[IDX].target_color
        OUTPUT IDX 3 indent indent
        OUTPUT IDX 3 color target_name_color
        OUTPUT IDX 3 border_radius 0.3

    END IF

END TEMPLATE
BEGIN TEMPLATE item_picked
    SETTING DURATION 3
    SETTING align pivot
    INT shadow
    INT icon
    INT name
    INT owner
    
    STRING pickup_image
    STRING pickup_color
    STRING pickup_owner

    DOUBLE iconWidth

    DOUBLE iconHeight
    iconHeight = fontSize * 1.8

    DOUBLE image_size
    image_size = iconHeight * 0.85

    IF iconWidth < iconHeight
        iconWidth = iconHeight
    END IF

    DOUBLE text_offset
    INT text_indent
    IF icon
        text_offset = iconWidth
        text_indent = 1.5
    END IF
 
    STRING background
    background = "<svg width='" & iconWidth & "'"
    background = background & " height='" & iconHeight & "'>"
    background = background & "<rect width='" & iconWidth & "'"
    background = background & " height='" & iconHeight & "'"
    background = background & " rx='0.5' x='0' y='0' fill='white' /></svg>"

    # ==============================
    # Icon Background
    COL_OUTPUT 0 width iconWidth
    COL_OUTPUT 0 height iconHeight
    COL_OUTPUT 0 image background
    COL_OUTPUT 0 image_width iconWidth
    COL_OUTPUT 0 image_height iconHeight
    COL_OUTPUT 0 image_color iconBackground

    # ==============================
    # Icon
    COL_OUTPUT 1 width iconWidth
    COL_OUTPUT 1 height iconHeight
    COL_OUTPUT 1 image_width image_size
    COL_OUTPUT 1 image_height image_size
    COL_OUTPUT 1 x 0
    COL_OUTPUT 1 y 0
    
    # ==============================
    # Owner Name
    DOUBLE owner_font_size
    owner_font_size = fontSize * 0.7
    COL_OUTPUT 2 font font
    COL_OUTPUT 2 font_size owner_font_size
    COL_OUTPUT 2 shadow 1
    COL_OUTPUT 2 indent text_indent
    COL_OUTPUT 2 x text_offset
    COL_OUTPUT 2 y 0
    COL_OUTPUT 2 color "#cccccc"
    COL_OUTPUT 2 height iconHeight
    IF name
        COL_OUTPUT 2 align "top-left"
    END IF

    # ==============================
    # Item Name
    COL_OUTPUT 3 font font
    COL_OUTPUT 3 shadow 1
    COL_OUTPUT 3 indent text_indent
    COL_OUTPUT 3 height iconHeight
    COL_OUTPUT 3 x text_offset
    COL_OUTPUT 3 y 0
    IF owner
        COL_OUTPUT 3 align "bottom-left"
    END IF


    RASTERIZE "images/weapon_rl.svg" image_size image_size
    RASTERIZE "images/weapon_melee.svg" image_size image_size
    RASTERIZE "images/weapon_rl.svg" image_size image_size
    RASTERIZE "images/weapon_sb.svg" image_size image_size
    RASTERIZE "images/weapon_mac.svg" image_size image_size
    RASTERIZE "images/weapon_cb.svg" image_size image_size
    RASTERIZE "images/weapon_pncr.svg" image_size image_size
    RASTERIZE "images/weapon_shaft.svg" image_size image_size
    RASTERIZE "images/weapon_gl.svg" image_size image_size
    RASTERIZE "images/weapon_ss.svg" image_size image_size
    RASTERIZE "images/weapon_mg.svg" image_size image_size
    RASTERIZE "images/weapon_w9.svg" image_size image_size
    RASTERIZE "images/weapon_st.svg" image_size image_size
    RASTERIZE "images/weapon_iw.svg" image_size image_size
    RASTERIZE "images/weapon_sw.svg" image_size image_size
    RASTERIZE "images/weapon_bw.svg" image_size image_size
    RASTERIZE "images/weapon_smw.svg" image_size image_size
    RASTERIZE "images/weapon_hw.svg" image_size image_size
    RASTERIZE "images/weapon_kw.svg" image_size image_size
    RASTERIZE "images/weapon_vc.svg" image_size image_size
    RASTERIZE "images/weapon_bl.svg" image_size image_size

    RASTERIZE "images/item_flag.svg" image_size image_size
    RASTERIZE "images/item_macguffin.svg" image_size image_size

    RASTERIZE "images/powerup_diabotical.svg" image_size image_size
    RASTERIZE "images/powerup_tripledamage.svg" image_size image_size
    RASTERIZE "images/powerup_siphonator.svg" image_size image_size
    RASTERIZE "images/powerup_surge.svg" image_size image_size
    RASTERIZE "images/powerup_vanguard.svg" image_size image_size

    RASTERIZE "images/item_armort1.svg" image_size image_size
    RASTERIZE "images/item_armort2.svg" image_size image_size
    RASTERIZE "images/item_armort3.svg" image_size image_size
    RASTERIZE "images/item_armort4.svg" image_size image_size
    RASTERIZE "images/item_hpt0.svg" image_size image_size
    RASTERIZE "images/item_hpt1.svg" image_size image_size
    RASTERIZE "images/item_hpt2.svg" image_size image_size
    RASTERIZE "images/item_hpt3.svg" image_size image_size

    RASTERIZE_TEXT "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ" font fontSize
ON_UPDATE

    pickup_name = misc_data.pickup_name
    pickup_owner = misc_data.pickup_owner
    pickup_color = misc_data.pickup_color
    pickup_image = misc_data.pickup_image

    INT pickup_exists
    pickup_exists = LENGTH pickup_image
    IF !pickup_exists && !IN_EDITOR
        discard
    END IF

    IF icon
        OUTPUT 0 1 image pickup_image

        IF pickup_image == "images/item_flag.svg"
            OUTPUT 0 1 hue pickup_color
        ELSE 
            OUTPUT 0 1 image_color pickup_color
        END IF
    ELSE
        OUTPUT 0 0 opacity 0 
        OUTPUT 0 1 opacity 0 
    END IF

    INT owner_length
    owner_length = LENGTH pickup_owner

    STRING owner_text

    IF owner && owner_length
        last_char = SUBSTR pickup_owner -1 1
        IF last_char == "s"
            owner_text = pickup_owner & "'"
        ELSE 
            owner_text = pickup_owner & "'s"
        END IF

        OUTPUT 0 2 value owner_text
    END IF

    IF name
        OUTPUT 0 3 lvalue pickup_name
        LOCALIZE 0 3
    END IF

    IF owner
        IF owner_length > 0
            OUTPUT 0 3 align "bottom-left"
        ELSE
            OUTPUT 0 3 align "left-edge"
        END IF
    ELSE
        OUTPUT 0 3 align "left-edge"
    END IF

END TEMPLATE
BEGIN TEMPLATE item_timers
    SETTING iterator entity_timings.count
    SETTING item_direction item_direction
    SETTING cell_direction cell_direction
    SETTING align pivot
    SETTING item_spacing 0.5
    SETTING cell_spacing 0
    DOUBLE size
    STRING cell_direction
    STRING item_direction

    DOUBLE text_width
    text_width = size * 1.7

    DOUBLE text_size
    text_size = size * 0.7

    DOUBLE text_size_small
    text_size_small = size * 0.5

    DOUBLE bg_width
    bg_width = size + text_width
    
    COL_OUTPUT 0 x 0
    COL_OUTPUT 0 width bg_width
    COL_OUTPUT 0 height size

    COL_OUTPUT 1 image_width size
    COL_OUTPUT 1 image_height size
    COL_OUTPUT 1 width size
    COL_OUTPUT 1 height size
    COL_OUTPUT 1 x 0

    COL_OUTPUT 2 font_size text_size
    COL_OUTPUT 2 font font
    COL_OUTPUT 2 indent 1
    COL_OUTPUT 2 shadow 1
    COL_OUTPUT 2 width text_width
    COL_OUTPUT 2 height size
    COL_OUTPUT 2 align "left-edge"
    COL_OUTPUT 2 x size

    IF cell_direction == "horizontal reverse"
        COL_OUTPUT 2 align "right-edge"
    END IF
    IF cell_direction == "vertical"
        COL_OUTPUT 2 align "center"
        COL_OUTPUT 2 width size
        COL_OUTPUT 2 font_size text_size_small
    END IF
    IF cell_direction == "vertical reverse"
        COL_OUTPUT 2 align "center"
        COL_OUTPUT 2 width size
        COL_OUTPUT 2 font_size text_size_small
    END IF

    RASTERIZE "images/item_macguffin.svg" size size
    RASTERIZE "images/powerup_diabotical.svg" size size
    RASTERIZE "images/powerup_tripledamage.svg" size size
    RASTERIZE "images/powerup_siphonator.svg" size size
    RASTERIZE "images/powerup_surge.svg" size size
    RASTERIZE "images/powerup_vanguard.svg" size size

    RASTERIZE "images/item_armort1.svg" size size
    RASTERIZE "images/item_armort2.svg" size size
    RASTERIZE "images/item_armort3.svg" size size
    RASTERIZE "images/item_armort4.svg" size size
    RASTERIZE "images/item_hpt0.svg" size size
    RASTERIZE "images/item_hpt1.svg" size size
    RASTERIZE "images/item_hpt2.svg" size size
    RASTERIZE "images/item_hpt3.svg" size size

    RASTERIZE_TEXT "0123456789.:" font text_size
ON_UPDATE

    INT disc
    disc = 1

    IF IN_EDITOR
        disc = 0
    END IF

    IF game_data.spectator
        disc = 0
    END IF

    IF disc == 1
        discard
    END IF

    # Team background color to indicate which base this item is in (CTF)
    #OUTPUT IDX 0 fill ...
    #OUTPUT IDX 0 opacity 0.3

    DOUBLE icon_opacity
    icon_opacity = 1

    IF entity_timings[IDX].time_left > 0
        icon_opacity = 0.4
    END IF

    IF IN_EDITOR
        icon_opacity = 1
    END IF

    OUTPUT IDX 1 image entity_timings[IDX].icon
    OUTPUT IDX 1 image_color entity_timings[IDX].color
    OUTPUT IDX 1 opacity icon_opacity

    IF entity_timings[IDX].time_left > 0
        OUTPUT IDX 2 value entity_timings[IDX].time_left
    END IF

END TEMPLATE




BEGIN TEMPLATE minimap
    //HACK: This do-nothing minimap template is currently required so that the
    //metrics of the minimap, which is rendered by the engine, are processed correctly
ON_UPDATE
    OUTPUT 0 0 VALUE ""
END TEMPLATE

BEGIN TEMPLATE net
    //HACK: This do-nothing template is currently required so that the
    //metrics of this element, which is rendered by the engine, are processed correctly
ON_UPDATE
    OUTPUT 0 0 VALUE ""
END TEMPLATE


BEGIN TEMPLATE overtime_progress
    SETTING align pivot
    INT txt

    STRING progress_rect
    progress_rect = "<svg width='" & width & "'"
    progress_rect = progress_rect & " height='" & height & "'>"
    progress_rect = progress_rect & "<rect width='" & width & "'"
    progress_rect = progress_rect & " height='" & height & "'"
    progress_rect = progress_rect & " x='0' y='0' fill='white' /></svg>"

    COL_OUTPUT 0 width width
    COL_OUTPUT 0 height height
    COL_OUTPUT 0 fill "#FFFFFF4C"

    COL_OUTPUT 1 width width
    COL_OUTPUT 1 height height
    COL_OUTPUT 1 image progress_rect
    COL_OUTPUT 1 image_width width
    COL_OUTPUT 1 image_height height
    COL_OUTPUT 1 image_color "#ffff9c"
    COL_OUTPUT 1 x 0
    COL_OUTPUT 1 y 0

    DOUBLE progress
    progress = 0

    IF txt
        DOUBLE fontsize
        fontsize = height * 1.5

        DOUBLE text_offset
        text_offset = fontsize * 0.66
        text_offset = text_offset * -1

        COL_OUTPUT 2 lvalue "ingame_message_overtime"
        LOCALIZE 0 2
        COL_OUTPUT 2 uppercase 1
        COL_OUTPUT 2 width width
        COL_OUTPUT 2 height fontsize
        COL_OUTPUT 2 align "center"
        COL_OUTPUT 2 font "montserrat-bold"
        COL_OUTPUT 2 font_size fontsize
        COL_OUTPUT 2 x 0
        COL_OUTPUT 2 y text_offset
        COL_OUTPUT 2 shadow 1
    END IF

    RASTERIZE_TEXT "ABCDEFGHIJKLMNOPQRSTUVWXYZ" "montserrat-bold" fontsize

ON_UPDATE

    IF game_data.game_mode != "macguffin" && !IN_EDITOR
        discard
    END IF

    IF IN_EDITOR
        COL_OUTPUT 1 clip_x -0.6
    ELSE
        IF frame_data.finish_progress == 0
            discard
        END IF

        progress = frame_data.finish_progress / 100
        progress = progress * -1
        COL_OUTPUT 1 clip_x progress
    END IF

END TEMPLATE
INSTANCE pause_msg 50 42

BEGIN TEMPLATE pause_msg
    SETTING align "center"

    RASTERIZE_TEXT "ABCDEFGHIJKLMNOPQRSTUVWXYZ." "montserrat-bold" 5
ON_UPDATE

    IF !game_data.game_paused
        discard
    END IF

    IF battle_data.is_editor_loaded
        discard
    END IF

    OUTPUT 0 0 lvalue "ingame_game_is_paused"
    OUTPUT 0 0 value ""
    LOCALIZE 0 0
    OUTPUT 0 0 font "montserrat-bold"
    OUTPUT 0 0 font_size 5
    OUTPUT 0 0 shadow 1
    OUTPUT 0 0 uppercase 1

END TEMPLATE
PRELOAD "images/icons/fa/caret-down.svg"
PRELOAD "images/icons/fa/heart.svg"
PRELOAD "images/icons/fa/times.svg"
PRELOAD "images/icons/fa/question.svg"

PRELOAD "images/diabotical_o_shield.svg"
PRELOAD "images/diabotical_o_colored.svg"
PRELOAD "images/diabotical_o.svg"

PRELOAD "customization/avatar/av_no_avatar.png"

PRELOAD "images/icons/dodge_arrow_single.svg"
PRELOAD "images/icons/dodge_arrow_type1_1.svg"
PRELOAD "images/icons/dodge_arrow_type1_2.svg"
PRELOAD "images/icons/dodge_arrow_type1_3.svg"
PRELOAD "images/icons/dodge_arrow_type2_1.svg"
PRELOAD "images/icons/dodge_arrow_type2_2.svg"
PRELOAD "images/icons/dodge_arrow_type2_3.svg"

PRELOAD "images/hud_icon_hp.svg"
PRELOAD "images/hud_icon_armor.svg"
PRELOAD "images/hud_icon_speed.svg"
PRELOAD "images/hud_icon_wrench.svg"

PRELOAD "images/controls_back.svg"
PRELOAD "images/controls_down.svg"
PRELOAD "images/controls_forward.svg"
PRELOAD "images/controls_left.svg"
PRELOAD "images/controls_right.svg"
PRELOAD "images/controls_up.svg"

PRELOAD "images/item_coin.svg"
PRELOAD "images/item_flag.svg"
PRELOAD "images/item_macguffin.svg"
PRELOAD "images/powerup_diabotical.svg"
PRELOAD "images/powerup_tripledamage.svg"
PRELOAD "images/powerup_siphonator.svg"
PRELOAD "images/powerup_surge.svg"
PRELOAD "images/powerup_vanguard.svg"
PRELOAD "images/weapon_melee.svg"
PRELOAD "images/weapon_rl.svg"
PRELOAD "images/weapon_sb.svg"
PRELOAD "images/weapon_mac.svg"
PRELOAD "images/weapon_cb.svg"
PRELOAD "images/weapon_pncr.svg"
PRELOAD "images/weapon_shaft.svg"
PRELOAD "images/weapon_gl.svg"
PRELOAD "images/weapon_ss.svg"
PRELOAD "images/weapon_mg.svg"
PRELOAD "images/weapon_w9.svg"
PRELOAD "images/weapon_st.svg"
PRELOAD "images/weapon_iw.svg"
PRELOAD "images/weapon_sw.svg"
PRELOAD "images/weapon_bw.svg"
PRELOAD "images/weapon_smw.svg"
PRELOAD "images/weapon_hw.svg"
PRELOAD "images/weapon_kw.svg"
PRELOAD "images/weapon_vc.svg"
PRELOAD "images/item_armort1.svg"
PRELOAD "images/item_armort2.svg"
PRELOAD "images/item_armort3.svg"
PRELOAD "images/item_armort4.svg"
PRELOAD "images/item_hpt0.svg"
PRELOAD "images/item_hpt1.svg"
PRELOAD "images/item_hpt2.svg"
PRELOAD "images/item_hpt3.svg"
PRELOAD "images/weapon_bl.svg"
PRELOAD "images/weapon_shaft.svg"
PRELOAD "images/weapon_rl.svg"
PRELOAD "images/weapon_ss.svg"
PRELOAD "images/weapon_pncr.svg"
PRELOAD "images/weapon_mac.svg"
PRELOAD "images/weapon_gl.svg"
PRELOAD "images/weapon_editpad.svg"

PRELOAD "images/weapon_icons/knife.svg"
PRELOAD "images/weapon_icons/revolver.svg"
PRELOAD "images/weapon_icons/shotgun.svg"
PRELOAD "images/weapon_icons/machinegun.svg"
PRELOAD "images/weapons_icons/syringe.svg"
PRELOAD "images/weapons_icons/security.svg"

PRELOAD "images/gauntlet_character_head.png"
PRELOAD "images/compass.svg"
BEGIN TEMPLATE race_timer
    SETTING align pivot

    COL_OUTPUT 0 align pivot
    COL_OUTPUT 0 color color
    COL_OUTPUT 0 font font
    COL_OUTPUT 0 shadow 1

    RASTERIZE_TEXT "0123456789.:" font fontSize
ON_UPDATE

    IF !game_data.race_mode && !IN_EDITOR
        discard
    END IF

    OUTPUT 0 0 value frame_data.race_timer

END TEMPLATE

INSTANCE ready_up_msg 50 35.5

BEGIN TEMPLATE ready_up_msg
    SETTING align "center"

    RASTERIZE_TEXT "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" "roboto-bold" 3
ON_UPDATE

    INT show_msg
    show_msg = 1

    IF game_data.spectator
        show_msg = 0
    END IF

    IF game_data.game_stage > 1
        show_msg = 0
    END IF

    IF battle_data.self.ready
        show_msg = 0
    END IF

    IF battle_data.is_editor_loaded
        show_msg = 0
    END IF

    IF !show_msg
        discard
    END IF

    OUTPUT 0 0 lvalue "ingame_status_unready"
    OUTPUT 0 0 value battle_data.ready_key
    LOCALIZE 0 0
    OUTPUT 0 0 font "roboto-bold"
    OUTPUT 0 0 font_size 3
    OUTPUT 0 0 shadow 1    


END TEMPLATE
BEGIN TEMPLATE rect
    SETTING cell_direction "horizontal"
    SETTING align pivot
    DOUBLE bWidth
    DOUBLE bRadius
    DOUBLE cCode
    DOUBLE skewX
    DOUBLE skewY
    INT hide_dead

    DOUBLE double_bWidth
    double_bWidth = 2 * bWidth

    DOUBLE half_bWidth
    half_bWidth = bWidth / 2

    DOUBLE bg_width
    DOUBLE bg_height
    bg_width = width - double_bWidth
    bg_height = height - double_bWidth

    DOUBLE bg_radius
    bg_radius = bWidth / 2
    bg_radius = bRadius - bg_radius 
    bg_radius = CLAMP bg_radius 0 100

    STRING bg_svg
    bg_svg = "<svg "
    bg_svg = bg_svg & " width='" & width & "'"
    bg_svg = bg_svg & " height='" & height & "'"
    bg_svg = bg_svg & " viewBox='" & 0
    bg_svg = bg_svg & " " & 0
    bg_svg = bg_svg & " " & width
    bg_svg = bg_svg & " " & height & "'>"
    bg_svg = bg_svg & "<rect "
    bg_svg = bg_svg & " width='" & bg_width & "' "
    bg_svg = bg_svg & " height='" & bg_height & "' "
    bg_svg = bg_svg & " rx='" & bg_radius & "' "
    bg_svg = bg_svg & " fill='#ffffff' "
    bg_svg = bg_svg & " stroke-width='0' "
    bg_svg = bg_svg & " y='" & bWidth & "' "
    bg_svg = bg_svg & " x='" & bWidth & "' "
    bg_svg = bg_svg & "/></svg>"

    DOUBLE border_width
    DOUBLE border_height
    border_width = width - bWidth
    border_height = height - bWidth

    STRING border_svg 
    border_svg = "<svg "
    border_svg = border_svg & " width='" & width & "'"
    border_svg = border_svg & " height='" & height & "'"
    border_svg = border_svg & " viewBox='" & 0
    border_svg = border_svg & " " & 0
    border_svg = border_svg & " " & width
    border_svg = border_svg & " " & height & "'>"
    border_svg = border_svg & "<rect "
    border_svg = border_svg & " width='" & border_width & "' "
    border_svg = border_svg & " height='" & border_height & "' "
    border_svg = border_svg & " rx='" & bRadius & "' "
    border_svg = border_svg & " fill-opacity='0' "
    border_svg = border_svg & " stroke='#ffffff' "
    border_svg = border_svg & " stroke-width='" & bWidth & "' "
    border_svg = border_svg & " y='" & half_bWidth & "' "
    border_svg = border_svg & " x='" & half_bWidth & "' "
    border_svg = border_svg & "/></svg>"

    COL_OUTPUT 0 image bg_svg
    COL_OUTPUT 0 image_width width
    COL_OUTPUT 0 image_height height
    COL_OUTPUT 0 width width
    COL_OUTPUT 0 height height

    COL_OUTPUT 1 image border_svg
    COL_OUTPUT 1 image_width width
    COL_OUTPUT 1 image_height height
    COL_OUTPUT 1 image_color bCCustom
    COL_OUTPUT 1 width width
    COL_OUTPUT 1 height height
    COL_OUTPUT 1 x 0
    COL_OUTPUT 1 y 0

    INT hide_when_dead
    IF hide_dead
        hide_when_dead = 1
    END IF

ON_UPDATE

    IF hide_when_dead == 1 && common_game_data.self_alive == "false"
        discard
    END IF

    STRING bg_color
    bg_color = bgCCustom
    IF bgC == "team"
        bg_color = game_data.pov_team.color
    END IF
    IF bgC == "team_dark"
        bg_color = game_data.pov_team.color_dark
    END IF
    IF bgC == "team_darker"
        bg_color = game_data.pov_team.color_darker
    END IF
    IF bgC == "weapon"
        bg_color = current_weapon_data.color
    END IF
    
    OUTPUT 0 0 image_color bg_color
    OUTPUT 0 0 opacity o

END TEMPLATe
INSTANCE report_chat 1 95

BEGIN TEMPLATE report_chat
    SETTING iterator ingame_chat.count
    SETTING item_direction "vertical reverse"
    SETTING cell_direction "horizontal"
    SETTING align "bottom-left"
    SETTING item_spacing 0.4
    SETTING cell_spacing 0
    SETTING show_on_game_over 1
    
    STRING font
    font = "notosans-bold"

    DOUBLE fontSize
    fontSize = 1.5

    COL_OUTPUT 0 font font

    RASTERIZE_TEXT "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789.:,;!?()[]_-ยง$%&/()=" font fontSize
ON_UPDATE

    DOUBLE row_height
    row_height = fontSize * 1.1

    DOUBLE ts_width
    ts_width = fontSize * 4

    OUTPUT IDX 0 value ingame_chat[IDX].message
    OUTPUT IDX 0 opacity ingame_chat[IDX].opacity
    OUTPUT IDX 0 height row_height
    OUTPUT IDX 0 font_size fontSize
    OUTPUT IDX 0 color ingame_chat[IDX].color
    OUTPUT IDX 0 shadow 1

END TEMPLATE
INSTANCE respawn_msg 50 78

BEGIN TEMPLATE respawn_msg
    SETTING align "center"

    RASTERIZE_TEXT "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ" "roboto-bold" 3
ON_UPDATE

    IF !game_data.show_respawn_message
        discard
    END IF

    IF battle_data.is_editor_loaded
        discard
    END IF

    OUTPUT 0 0 lvalue "ingame_press_attack_to_respawn"
    LOCALIZE 0 0
    OUTPUT 0 0 value ""
    OUTPUT 0 0 font "roboto-bold"
    OUTPUT 0 0 font_size 3
    OUTPUT 0 0 shadow 1

END TEMPLATE
INSTANCE scoreboard_top 0.6 12
INSTANCE scoreboard_main_table_header 0.6 21
INSTANCE scoreboard_main 0.6 24
INSTANCE scoreboard_spectators 0.6 24
INSTANCE scoreboard_connecting 0.6 24

BEGIN TEMPLATE scoreboard_top
    SETTING ALWAYS_VISIBLE 1
    SETTING item_direction "vertical"
    SETTING cell_direction "horizontal"
    SETTING align "top-left"
    SETTING item_spacing 0
    SETTING cell_spacing 0
   
    STRING bg
    bg = "<svg width='45' height='8.2' viewBox='0 0 45 8.2'>"
    bg = bg & "<path fill='white' d='M 1.608,0 H 45 L 43.392,8.2 H 0 Z' />"
    bg = bg  & "</svg>"

    STRING circle
    circle = "<circle cx='1' cy='1' r='1' fill='red' />"

    RASTERIZE "images/diabotical_o_colored.svg" 6 6
    RASTERIZE bg 45 8.2
    RASTERIZE circle 1 1
    RASTERIZE "images/icons/fa/caret-right.svg" 2 2

    RASTERIZE_TEXT "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" "roboto-medium" 1.3
    RASTERIZE_TEXT "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" "roboto-bold" 1.3
ON_UPDATE

    IF !game_data.show_scoreboard
        discard
    END IF

    OUTPUT 0 0 width 1
    OUTPUT 0 0 height 1

    # Diabotical Logo
    OUTPUT 0 1 width 8
    OUTPUT 0 1 height 8
    OUTPUT 0 1 image "images/diabotical_o_colored.svg"
    OUTPUT 0 1 image_width 6
    OUTPUT 0 1 image_height 6

    # Black parallelogram background
    OUTPUT 0 2 width 45
    OUTPUT 0 2 height 8.2
    OUTPUT 0 2 image bg
    OUTPUT 0 2 image_width 45
    OUTPUT 0 2 image_height 8.2
    OUTPUT 0 2 image_color "#00000099"
    OUTPUT 0 2 x 8

    # Label "Mode"
    OUTPUT 1 0 lvalue "custom_game_settings_mode"
    LOCALIZE 1 0
    OUTPUT 1 0 font "roboto-medium"
    OUTPUT 1 0 font_size 1.3
    OUTPUT 1 0 opacity 0.8
    OUTPUT 1 0 indent 0.6
    OUTPUT 1 0 offset_x 10.5
    OUTPUT 1 0 y 2
    
    # Value "Mode"
    STRING mode_string
    mode_string = "game_mode_" & game_data.game_mode
    OUTPUT 1 1 lvalue mode_string
    LOCALIZE 1 1
    OUTPUT 1 1 font "roboto-bold"
    OUTPUT 1 1 font_size 1.3
    OUTPUT 1 1 offset_x 10.5
    OUTPUT 1 1 y 2

    # Label "Map"
    OUTPUT 2 0 lvalue "custom_game_settings_map"
    LOCALIZE 2 0
    OUTPUT 2 0 font "roboto-medium"
    OUTPUT 2 0 font_size 1.3
    OUTPUT 2 0 opacity 0.8
    OUTPUT 2 0 indent 0.6
    OUTPUT 2 0 offset_x 31
    OUTPUT 2 0 y 2

    # Value "Map"
    IF game_data.map_name != ""
        OUTPUT 2 1 value game_data.map_name
    ELSE
        OUTPUT 2 1 value game_data.map
    END IF
    OUTPUT 2 1 font "roboto-bold"
    OUTPUT 2 1 font_size 1.3
    OUTPUT 2 1 offset_x 31
    OUTPUT 2 1 y 2

    # Label "Duration"
    OUTPUT 3 0 lvalue "custom_game_settings_duration"
    LOCALIZE 3 0
    OUTPUT 3 0 font "roboto-medium"
    OUTPUT 3 0 font_size 1.3
    OUTPUT 3 0 opacity 0.8
    OUTPUT 3 0 indent 0.6
    OUTPUT 3 0 offset_x 10
    OUTPUT 3 0 y 4.2

    # Value "Duration"
    duration_ts = TIMESTAMP game_data.time_limit
    OUTPUT 3 1 font "roboto-bold"
    OUTPUT 3 1 font_size 1.3
    OUTPUT 3 1 offset_x 10
    OUTPUT 3 1 y 4.2
    IF game_data.time_limit == 0
        OUTPUT 3 1 lvalue "time_unlimited"
        LOCALIZE 3 1
    ELSE
        OUTPUT 3 1 value duration_ts
    END IF

    # Label "Score Limit/Round Limit"
    OUTPUT 4 0 font "roboto-medium"
    OUTPUT 4 0 font_size 1.3
    OUTPUT 4 0 opacity 0.8
    OUTPUT 4 0 indent 0.6
    OUTPUT 4 0 offset_x 30.5
    OUTPUT 4 0 y 4.2
    IF game_data.round_mode
        OUTPUT 4 0 lvalue "custom_game_settings_round_limit"
    ELSE
        OUTPUT 4 0 lvalue "custom_game_settings_score_limit"
    END IF
    LOCALIZE 4 0

    # Value "Score Limit/Round Limit"
    OUTPUT 4 1 font "roboto-bold"
    OUTPUT 4 1 font_size 1.3
    OUTPUT 4 1 offset_x 30.5
    OUTPUT 4 1 y 4.2
    IF game_data.score_limit == 0
        OUTPUT 4 1 lvalue "score_unlimited"
        LOCALIZE 4 1
    ELSE
        OUTPUT 4 1 value game_data.score_limit
    END IF

    IF game_data.record_replay
        # Recording circle
        OUTPUT 5 0 width 0
        OUTPUT 5 0 height 0
        OUTPUT 5 0 offset_x 48
        OUTPUT 5 0 y 1.9
        OUTPUT 5 0 image circle
        OUTPUT 5 0 image_width 1
        OUTPUT 5 0 image_height 1

        # Label "Match is being recorded"
        OUTPUT 5 1 font "roboto-medium"
        OUTPUT 5 1 font_size 1.3
        OUTPUT 5 1 offset_x 49
        OUTPUT 5 1 y 2
        OUTPUT 5 1 value "REC"
    END IF

    # Label "Physics""
    OUTPUT 6 0 font "roboto-medium"
    OUTPUT 6 0 font_size 1.3
    OUTPUT 6 0 opacity 0.8
    OUTPUT 6 0 lvalue "custom_settings_physics"
    LOCALIZE 6 0
    OUTPUT 6 0 indent 0.6
    OUTPUT 6 0 offset_x 9.5
    OUTPUT 6 0 y 6.4

    # Value "Physics"
    OUTPUT 6 1 font "roboto-bold"
    OUTPUT 6 1 font_size 1.3
    OUTPUT 6 1 offset_x 9.5
    OUTPUT 6 1 y 6.4
    IF game_data.physics == 0
        OUTPUT 6 1 lvalue "custom_settings_physics_diabotical"
    ELSE
        IF game_data.physics == 1
            OUTPUT 6 1 lvalue "custom_settings_physics_race"
        ELSE
            OUTPUT 6 1 lvalue "custom_settings_physics_vintage"
        END IF
    END IF
    LOCALIZE 6 1
    
    INT preset_length 
    preset_length = LENGTH game_data.settings_preset

    # Label "Custom settings"
    IF preset_length > 0
        # Label "Preset"
        OUTPUT 7 0 font "roboto-medium"
        OUTPUT 7 0 font_size 1.3
        OUTPUT 7 0 opacity 0.8
        OUTPUT 7 0 lvalue "custom_game_settings_preset"
        LOCALIZE 7 0
        OUTPUT 7 0 indent 0.6
        OUTPUT 7 0 offset_x 30.5
        OUTPUT 7 0 y 6.4

        # Value "Preset"
        OUTPUT 7 1 font "roboto-bold"
        OUTPUT 7 1 font_size 1.3
        OUTPUT 7 1 color "#ffd43c"
        OUTPUT 7 1 value game_data.settings_preset
        OUTPUT 7 1 offset_x 30.5
        OUTPUT 7 1 y 6.4
    ELSE 
        IF !game_data.is_default_settings
            OUTPUT 7 0 font "roboto-bold"
            OUTPUT 7 0 font_size 1.3
            OUTPUT 7 0 opacity 0.8
            OUTPUT 7 0 lvalue "custom_game_settings_customized"
            LOCALIZE 7 0
            OUTPUT 7 0 color "#ffd43c"
            OUTPUT 7 0 offset_x 30.5
            OUTPUT 7 0 y 6.4
        END IF
    END IF

END TEMPLATE


BEGIN TEMPLATE scoreboard_main_table_header
    SETTING ALWAYS_VISIBLE 1
    SETTING item_direction "vertical"
    SETTING cell_direction "horizontal"
    SETTING align "top-left"
    SETTING item_spacing 0
    SETTING cell_spacing 0

    RASTERIZE_TEXT "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" "roboto-medium-bold" 1.3
ON_UPDATE

    IF !game_data.show_scoreboard
        discard
    END IF

    # cell widths:
    #   avatar 3
    #   country 4.4
    #   name 18
    #   rank 7 (icon 3)
    #   status 8
    #   time 16 (race time)
    #   score 7
    #   kda 9
    #   kda_part 3
    #   dmg 6
    #   ping 5
    #   round wins 6
    #   team score 8

    DOUBLE table_width
    
    # avatar + country + name + ping
    table_width = 30.4
    
    # add rank width
    IF game_data.ranked
        table_width = table_width + 7
    END IF

    # add ready status width
    IF game_data.game_stage <= 1
        table_width = table_width + 8
    END IF

    IF game_data.race_mode
        # add time width
        table_width = table_width + 16
        IF game_data.team_size > 1
            table_width = table_width + 10
        END IF
    ELSE
        # add kda, dmg, team_score width
        table_width = table_width + 23

        # add player score width
        IF game_data.team_size > 1    
            table_width = table_width + 7
        END IF

        # add round score width
        IF game_data.round_mode
            table_width = table_width + 6
        END IF
    END IF

    INT i
    i = 0

    # SPACER
    OUTPUT 0 i width 1
    OUTPUT 0 i height 1
    i = i + 1

    # Background
    OUTPUT 0 i width table_width
    OUTPUT 0 i height 3
    OUTPUT 0 i fill "#00000099"
    i = i + 1

    DOUBLE cell_offset
    cell_offset = 26.3
    
    # Rank icon
    IF game_data.ranked
        OUTPUT 0 i x cell_offset
        OUTPUT 0 i lvalue "stats_rank"
        LOCALIZE 0 i
        OUTPUT 0 i width 7
        OUTPUT 0 i opacity 0.7
        OUTPUT 0 i font "roboto-medium-bold"
        OUTPUT 0 i font_size 1.3
        cell_offset = cell_offset + 7
        i = i + 1
    END IF

    # Status
    IF game_data.game_stage <= 1
        OUTPUT 0 i x cell_offset
        OUTPUT 0 i lvalue "stats_status"
        LOCALIZE 0 i
        OUTPUT 0 i width 8
        OUTPUT 0 i opacity 0.7
        OUTPUT 0 i font "roboto-medium-bold"
        OUTPUT 0 i font_size 1.3
        cell_offset = cell_offset + 8
        i = i + 1
    END IF

    IF !game_data.race_mode
        # Score
        IF game_data.team_size > 1    
            OUTPUT 0 i x cell_offset
            OUTPUT 0 i lvalue "stats_score"
            LOCALIZE 0 i
            OUTPUT 0 i width 7
            OUTPUT 0 i opacity 0.7
            OUTPUT 0 i font "roboto-medium-bold"
            OUTPUT 0 i font_size 1.3
            cell_offset = cell_offset + 7
            i = i + 1
        END IF

        # K/D/A
        OUTPUT 0 i x cell_offset
        OUTPUT 0 i lvalue "stats_kda"
        LOCALIZE 0 i
        OUTPUT 0 i width 9
        OUTPUT 0 i opacity 0.7
        OUTPUT 0 i font "roboto-medium-bold"
        OUTPUT 0 i font_size 1.3
        cell_offset = cell_offset + 9
        i = i + 1

        # DMG
        OUTPUT 0 i x cell_offset
        OUTPUT 0 i lvalue "stats_dmg"
        LOCALIZE 0 i
        OUTPUT 0 i width 6
        OUTPUT 0 i opacity 0.7
        OUTPUT 0 i font "roboto-medium-bold"
        OUTPUT 0 i font_size 1.3
        cell_offset = cell_offset + 6
        i = i + 1

    END IF

    # Ping
    OUTPUT 0 i x cell_offset
    OUTPUT 0 i lvalue "stats_ping"
    LOCALIZE 0 i
    OUTPUT 0 i width 5
    OUTPUT 0 i opacity 0.7
    OUTPUT 0 i font "roboto-medium-bold"
    OUTPUT 0 i font_size 1.3
    cell_offset = cell_offset + 5
    i = i + 1

    # Time
    IF game_data.race_mode
        OUTPUT 0 i x cell_offset
        OUTPUT 0 i lvalue "stats_best_time"
        LOCALIZE 0 i
        OUTPUT 0 i width 16
        OUTPUT 0 i opacity 0.7
        OUTPUT 0 i font "roboto-medium-bold"
        OUTPUT 0 i font_size 1.3
        cell_offset = cell_offset + 16
        i = i + 1
    END IF

    # Round Score
    IF game_data.round_mode
        OUTPUT 0 i x cell_offset
        OUTPUT 0 i lvalue "stats_rounds"
        LOCALIZE 0 i
        OUTPUT 0 i width 6
        OUTPUT 0 i opacity 0.7
        OUTPUT 0 i font "roboto-medium-bold"
        OUTPUT 0 i font_size 1.3
        cell_offset = cell_offset + 6
        i = i + 1
    END IF

    IF !game_data.race_mode
        IF game_data.game_mode == "macguffin" || game_data.game_mode == "coinrun"
            OUTPUT 0 i lvalue "stats_coins"
        ELSE
            OUTPUT 0 i lvalue "stats_score"
        END IF
        LOCALIZE 0 i
        OUTPUT 0 i x cell_offset
        OUTPUT 0 i width 8
        OUTPUT 0 i opacity 0.7
        OUTPUT 0 i font "roboto-medium-bold"
        OUTPUT 0 i font_size 1.3
        cell_offset = cell_offset + 8
        i = i + 1
    END IF
    
END TEMPLATE

BEGIN TEMPLATE scoreboard_main
    SETTING ALWAYS_VISIBLE 1
    SETTING item_direction "vertical"
    SETTING cell_direction "horizontal"
    SETTING align "top-left"
    SETTING item_spacing 0
    SETTING cell_spacing 0
    SETTING iterator game_data.players_per_team
    SETTING iterator2 teams.count

    COL_OUTPUT 0 font_size 1.4
    COL_OUTPUT 1 font_size 1.4
    COL_OUTPUT 2 font_size 1.4
    COL_OUTPUT 3 font_size 1.4
    COL_OUTPUT 4 font_size 1.4
    COL_OUTPUT 5 font_size 1.4
    COL_OUTPUT 6 font_size 1.4
    COL_OUTPUT 7 font_size 1.4
    COL_OUTPUT 8 font_size 1.4
    COL_OUTPUT 9 font_size 1.4
    COL_OUTPUT 10 font_size 1.4
    COL_OUTPUT 11 font_size 1.4
    COL_OUTPUT 12 font_size 1.4
    COL_OUTPUT 13 font_size 1.4
    COL_OUTPUT 14 font_size 1.4

    COL_OUTPUT 0 font "roboto-bold"
    COL_OUTPUT 1 font "roboto-bold"
    COL_OUTPUT 2 font "roboto-bold"
    COL_OUTPUT 3 font "roboto-bold"
    COL_OUTPUT 4 font "roboto-bold"
    COL_OUTPUT 5 font "roboto-bold"
    COL_OUTPUT 6 font "roboto-bold"
    COL_OUTPUT 7 font "roboto-bold"
    COL_OUTPUT 8 font "roboto-bold"
    COL_OUTPUT 9 font "roboto-bold"
    COL_OUTPUT 10 font "roboto-bold"
    COL_OUTPUT 11 font "roboto-bold"
    COL_OUTPUT 12 font "roboto-bold"
    COL_OUTPUT 13 font "roboto-bold"
    COL_OUTPUT 14 font "roboto-bold"

    INT row
    row = 0

    INT real_row
    real_row = 0

    DOUBLE row_offset
    row_offset = 0

    DOUBLE row_offset_extra
    row_offset_extra = 0

    INT i
    INT tidx

    INT odd_row
    odd_row = 1

    RASTERIZE_TEXT "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" "roboto-bold" 1.4
    RASTERIZE_TEXT "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" "montserrat-bold" 1.4
    RASTERIZE_TEXT "0123456789" "roboto-bold" 1.8
    RASTERIZE_TEXT "0123456789" "roboto-bold" 2
ON_UPDATE
    IF !IDX && !IDX2
        row_offset = 0
        row_offset_extra = 0
        row = 0
        real_row = 0
        tidx = 0
    END IF

    IF IDX >= teams[IDX2].players_count
        break
    END IF

    IF !game_data.show_scoreboard
        discard
    END IF

    # cell widths:
    #   avatar 3
    #   country 4.4
    #   name 18
    #   rank 7 (icon 3)
    #   status 8
    #   time 16 (race time)
    #   score 7
    #   kda 9
    #   kda_part 3
    #   dmg 6
    #   ping 5
    #   round wins 6
    #   team score 8

    INT team_idx
    INT player_idx
    INT player_in_team_idx
    DOUBLE header_width
    DOUBLE row_width
    
    player_in_team_idx = IDX
    team_idx = IDX2
    player_idx = player_in_team_idx + INT(team_idx*game_data.players_per_team)
    
    STRING avatar_url
    INT avatar_length
    avatar_length = LENGTH players[player_idx].avatar
    IF avatar_length > 0
        avatar_url = "customization/avatar/" & players[player_idx].avatar
        avatar_url = avatar_url & ".png"
    ELSE 
        avatar_url = "customization/avatar/av_no_avatar.png"
    END IF

    STRING country_url
    country_url = ""
    INT country_length
    country_length = LENGTH players[player_idx].country
    IF country_length > 0
        country_url = "customization/flag/" & players[player_idx].country
        country_url = country_url & ".png"
    END IF

    IF odd_row
        odd_row = 0
    ELSE
        odd_row = 1
    END IF

    # Reset cell index
    i = 0

    INT render_team_header
    render_team_header = 0

    # Reset "odd" row tracker for new teams
    IF player_in_team_idx == 0
        odd_row = 0
        tidx = tidx + 1
        
        IF game_data.team_size > 1
            render_team_header = 1

            IF row_offset > 0
                row_offset = row_offset + 1
            END IF
        END IF
    ELSE
        render_team_header = 0
    END IF

    STRING row_color
    IF odd_row
        row_color = teams[team_idx].color_dark
    ELSE 
        row_color = teams[team_idx].color
    END IF

    row_color = row_color & "99"

    STRING text_color_grayscale 
    text_color_grayscale = GRAYSCALE teams[team_idx].color

    STRINg text_color
    text_color = "#ffffff"

    IF text_color_grayscale > 0.55
        text_color = "#1c1c1c"
    END IF

    STRING rank_icon_url
    rank_icon_url = ""

    IF game_data.ranked
        IF players[player_idx].rank_position > 0
            IF players[player_idx].rank_position == 1
                rank_icon_url = "ranks/top_4.png"
            ELSE
                IF players[player_idx].rank_position > 100
                    rank_icon_url = "ranks/top_1.png"
                END IF
                IF players[player_idx].rank_position <= 100
                    rank_icon_url = "ranks/top_2.png"
                END IF
                IF players[player_idx].rank_position <= 50
                    rank_icon_url = "ranks/top_3.png"
                END IF
            END IF
        ELSE
            IF players[player_idx].rank_tier == 0
                IF game_data.team_size >= 1
                    IF game_data.team_size <= 5
                        rank_icon_url = "ranks/unranked_" & game_data.team_size 
                        rank_icon_url = rank_icon_url & ".png"
                    ELSE
                        rank_icon_url = "ranks/unranked_5.png"
                    END IF
                ELSE
                    rank_icon_url = "ranks/unranked_1.png"
                END IF
            ELSE 
                rank_icon_url = "ranks/" & players[player_idx].rank_tier
                rank_icon_url = rank_icon_url & ".png"
            END IF
        END IF
    END IF

    INT ping
    ping = players[player_idx].ping * 1000
    ping = CLAMP ping 0 999

    row_width = 0

    INT team_header_row_idx
    team_header_row_idx = 0

    # ===============================================
    # TEAM Header
    IF render_team_header
    
        OUTPUT row 0 height 2.4
        OUTPUT row 0 fill teams[team_idx].color_dark
        OUTPUT row 0 font "montserrat-bold"
        OUTPUT row 0 y row_offset
        OUTPUT row 0 value teams[team_idx].team_name
        OUTPUT row 0 align "left-edge"
        OUTPUT row 0 indent 1
        OUTPUT row 0 color text_color
        
        team_header_row_idx = row

        row = row + 1
        real_row = real_row + 1
        row_offset = row_offset + 2.4
        
    END IF

    # ===============================================
    # ROW Background
    OUTPUT row i height 3
    OUTPUT row i y row_offset
    OUTPUT row i fill row_color
    bg_row = row
    i = i + 1

    DOUBLE cell_offset
    cell_offset = 0

    # ===============================================
    # AVATAR
    OUTPUT row i width 3
    OUTPUT row i height 3
    OUTPUT row i image avatar_url
    OUTPUT row i image_width 3
    OUTPUT row i image_height 3
    OUTPUT row i y row_offset
    OUTPUT row i x 0
    row_width = row_width + 3
    i = i + 1

    OUTPUT row i width 2
    OUTPUT row i height 3
    OUTPUT row i x -1
    OUTPUT row i y row_offset
    IF players[player_idx].is_self        
        OUTPUT row i image "images/icons/fa/caret-right.svg"
        OUTPUT row i image_width 2
        OUTPUT row i image_height 2
        OUTPUT row i image_color "#ffffff"
    END IF
    i = i + 1 

    # ===============================================
    # COUNTRY
    OUTPUT row i width 4.4
    OUTPUT row i height 3
    IF country_length > 0
        OUTPUT row i image country_url
    END IF
    OUTPUT row i image_width 3
    OUTPUT row i image_height 3
    OUTPUT row i y row_offset
    OUTPUT row i x row_width
    row_width = row_width + 4.4
    i = i + 1

    # ===============================================
    # NAME
    OUTPUT row i HEIGHT 3
    OUTPUT row i WIDTH 18
    OUTPUT row i align "left-edge"
    OUTPUT row i font "montserrat-bold"
    OUTPUT row i font_size 1.4
    OUTPUT row i color text_color
    OUTPUT row i VALUE players[player_idx].name
    OUTPUT row i y row_offset
    OUTPUT row i x row_width
    row_width = row_width + 18
    i = i + 1

    # ===============================================
    # RANK ICON
    IF game_data.ranked
        OUTPUT row i width 7
        OUTPUT row i height 3
        OUTPUT row i image rank_icon_url
        OUTPUT row i image_width 3
        OUTPUT row i image_height 3
        OUTPUT row i y row_offset
        OUTPUT row i x row_width
        row_width = row_width + 7
        i = i + 1
    END IF

    # ===============================================
    # READY STATUS
    IF game_data.game_stage <= 1
        OUTPUT row i width 8
        OUTPUT row i height 3
        OUTPUT row i y row_offset
        OUTPUT row i x row_width
        OUTPUT row i color text_color
        IF players[player_idx].ready
            OUTPUT row i lvalue "stats_ready"
        ELSE
            OUTPUT row i lvalue "stats_not_ready"
        END IF
        LOCALIZE row i
        row_width = row_width + 8
        i = i + 1
    END IF

    IF !game_data.race_mode

        IF game_data.team_size > 1
            # ===============================================
            # SCORE
            OUTPUT row i width 7
            OUTPUT row i height 3
            OUTPUT row i y row_offset
            OUTPUT row i x row_width
            OUTPUT row i color text_color
            OUTPUT row i value players[player_idx].score
            row_width = row_width + 7
            i = i + 1
        END IF

        # ===============================================
        # KDA Background
        OUTPUT row i width 9
        OUTPUT row i height 3
        OUTPUT row i y row_offset
        OUTPUT row i x row_width
        OUTPUT row i color text_color
        OUTPUT row i fill "#FFFFFF19"
        i = i + 1

        # ===============================================
        # FRAGS
        OUTPUT row i width 3
        OUTPUT row i height 3
        OUTPUT row i y row_offset
        OUTPUT row i x row_width
        OUTPUT row i color text_color
        OUTPUT row i value players[player_idx].kills
        row_width = row_width + 3
        i = i + 1

        # ===============================================
        # DEATHS
        OUTPUT row i width 3
        OUTPUT row i height 3
        OUTPUT row i y row_offset
        OUTPUT row i x row_width
        OUTPUT row i color text_color
        OUTPUT row i value players[player_idx].deaths
        row_width = row_width + 3
        i = i + 1

        # ===============================================
        # ASSISTS
        OUTPUT row i width 3
        OUTPUT row i height 3
        OUTPUT row i y row_offset
        OUTPUT row i x row_width
        OUTPUT row i color text_color
        OUTPUT row i value players[player_idx].assists
        row_width = row_width + 3
        i = i + 1

        # ===============================================
        # DMG
        OUTPUT row i width 6
        OUTPUT row i height 3
        OUTPUT row i y row_offset
        OUTPUT row i x row_width
        OUTPUT row i color text_color
        OUTPUT row i value players[player_idx].damage_inflicted
        row_width = row_width + 6
        i = i + 1

    END IF

    # ===============================================
    # PING
    OUTPUT row i width 5
    OUTPUT row i height 3
    OUTPUT row i y row_offset
    OUTPUT row i x row_width
    OUTPUT row i color text_color
    OUTPUT row i value ping
    row_width = row_width + 5
    i = i + 1

    # ===============================================
    # RACE TIME
    IF game_data.race_mode
        OUTPUT row i width 16
        OUTPUT row i height 3
        OUTPUT row i y row_offset
        OUTPUT row i x row_width
        OUTPUT row i color text_color
        OUTPUT row i value players[player_idx].best_time
        row_width = row_width + 16
        i = i + 1
        
        IF render_team_header
            OUTPUT team_header_row_idx 0 width row_width
        END IF

        IF player_in_team_idx == 0
            IF game_data.team_size > 1
                header_width = row_width

                team_height = 3 * teams[team_idx].players_count

                STRING team_race_time
                team_race_time = FORMAT_TIME teams[team_idx].team_score

                # ===============================================
                # TEAM MAIN SCORE
                OUTPUT row i height team_height
                OUTPUT row i width 10
                OUTPUT row i font_size 1.8
                OUTPUT row i fill teams[team_idx].color
                OUTPUT row i color text_color
                OUTPUT row i value team_race_time
                OUTPUT row i y row_offset
                OUTPUT row i x header_width
                i = i + 1

                header_width = header_width + 10

                IF render_team_header
                    OUTPUT team_header_row_idx 0 width header_width
                END IF
            END IF
        END IF

    ELSE 

        header_width = row_width

        # TEAM Round Score & Main Score
        IF player_in_team_idx == 0
            team_height = 3 * teams[team_idx].players_count
            
            # ===============================================
            # TEAM ROUND SCORE
            IF game_data.round_mode
                OUTPUT row i height team_height
                OUTPUT row i width 6
                OUTPUT row i font_size 1.8
                OUTPUT row i fill teams[team_idx].color_dark
                OUTPUT row i color text_color
                OUTPUT row i value teams[team_idx].game_score
                OUTPUT row i y row_offset
                OUTPUT row i x header_width
                i = i + 1

                header_width = header_width + 6
            END IF

            # ===============================================
            # TEAM MAIN SCORE
            OUTPUT row i height team_height
            OUTPUT row i width 8
            OUTPUT row i font_size 2
            OUTPUT row i fill teams[team_idx].color
            OUTPUT row i color text_color
            OUTPUT row i value teams[team_idx].team_score
            OUTPUT row i y row_offset
            OUTPUT row i x header_width
            i = i + 1

            header_width = header_width + 8

            IF render_team_header
                OUTPUT team_header_row_idx 0 width header_width
            END IF
        END IF

    END IF

    # Set background width
    OUTPUT bg_row 0 width row_width

    row = row + 1
    real_row = real_row + 1
    row_offset = row_offset + 3
    
END TEMPLATE

BEGIN TEMPLATE scoreboard_spectators
    SETTING ALWAYS_VISIBLE 1
    SETTING align "top-left"
    SETTING iterator spectators.count

    INT i
    i = 1

    RASTERIZE_TEXT "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ" "roboto-bold" 1.3
    RASTERIZE_TEXT "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" "montserrat-bold" 1.3
ON_UPDATE

    INT team_idx
    team_idx = 0
    
    INT total_teams_with_players
    total_teams_with_players = 0

    FOR teams.count
        IF teams[team_idx].players_count > 0
            total_teams_with_players = total_teams_with_players + 1
        END IF

        team_idx = team_idx + 1
    END FOR

    IF !game_data.show_scoreboard
        discard
    END IF

    IF spectators.count == 0
        discard
    END IF

    DOUBLE offset
    offset = game_data.total_player_count * 3
    offset = offset + total_teams_with_players

    IF total_teams_with_players == 0
        offset = offset + 1
    END IF

    IF game_data.team_size > 1
        offset = offset + DOUBLE (total_teams_with_players * 2.4)
    END IF

    DOUBLE names_offset 
    names_offset = offset + 3.7

    IF IDX == 0
        i = 1

        # "Anchor" Point for 0 0 so the offset works
        OUTPUT 0 0 width 1
        OUTPUT 0 0 height 1
        
        # Background
        OUTPUT 0 1 width 60
        OUTPUT 0 1 height 6
        OUTPUT 0 1 fill "#00000099"
        OUTPUT 0 1 y offset

        # Header
        OUTPUT 1 0 lvalue "spectators"
        LOCALIZE 1 0
        OUTPUT 1 0 font_size 1.3
        OUTPUT 1 0 font "roboto-bold"
        OUTPUT 1 0 shadow 1
        OUTPUT 1 0 opacity 1
        OUTPUT 1 0 color "#bbbbbb"
        OUTPUT 1 0 x 1
        OUTPUT 1 0 indent 1
        OUTPUT 1 0 y DOUBLE (offset+1.5)
        
        # Padding left for name list
        OUTPUT 2 i width 1
        OUTPUT 2 i height 1
        OUTPUT 2 i y names_offset
        i = i + 1

    END IF

    # Name
    OUTPUT 2 i value spectators[IDX].name
    OUTPUT 2 i font_size 1.3
    OUTPUT 2 i font "montserrat-bold"
    OUTPUT 2 i indent 1
    OUTPUT 2 i shadow 1
    OUTPUT 2 i y names_offset
    i = i + 1

END TEMPLATE

BEGIN TEMPLATE scoreboard_connecting
    SETTING ALWAYS_VISIBLE 1
    SETTING align "top-left"
    SETTING iterator connecting_users.count

    INT i
    i = 1

    RASTERIZE_TEXT "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ" "roboto-bold" 1.3
    RASTERIZE_TEXT "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" "montserrat-bold" 1.3
ON_UPDATE

    INT team_idx
    team_idx = 0
    
    INT total_teams_with_players
    total_teams_with_players = 0

    FOR teams.count
        IF teams[team_idx].players_count > 0
            total_teams_with_players = total_teams_with_players + 1
        END IF

        team_idx = team_idx + 1
    END FOR

    IF !game_data.show_scoreboard
        discard
    END IF

    IF connecting_users.count == 0
        discard
    END IF


    ### hack to fix an issue where connecting_users.count is > 0 but all the entries are empty (and nobody is actually connecting)
    INT hack_idx
    INT hack_count
    INT hack_str_len
    hack_count = 0
    hack_str_len = 0
    hack_idx = 0
    FOR connecting_users.count
        hack_str_len = LENGTH connecting_users[hack_idx].user_name

        IF hack_str_len > 0
            hack_count = hack_count + 1
        END IF

        hack_idx = hack_idx + 1
    END FOR

    IF hack_count == 0
        discard
    END IF
    ### end hack


    DOUBLE offset
    offset = game_data.total_player_count * 3
    offset = offset + total_teams_with_players

    IF total_teams_with_players == 0
        offset = offset + 1
    END IF

    IF game_data.team_size > 1
        offset = offset + DOUBLE (total_teams_with_players * 2.4)
    END IF

    IF spectators.count > 0
        offset = offset + 7
    END IF

    DOUBLE names_offset 
    names_offset = offset + 3.7

    IF IDX == 0
        i = 1

        # "Anchor" Point for 0 0 so the offset works
        OUTPUT 0 0 width 1
        OUTPUT 0 0 height 1
        
        # Background
        OUTPUT 0 1 width 60
        OUTPUT 0 1 height 6
        OUTPUT 0 1 fill "#00000099"
        OUTPUT 0 1 y offset

        # Header
        OUTPUT 1 0 lvalue "connecting"
        LOCALIZE 1 0
        OUTPUT 1 0 font_size 1.3
        OUTPUT 1 0 font "roboto-bold"
        OUTPUT 1 0 shadow 1
        OUTPUT 1 0 opacity 1
        OUTPUT 1 0 color "#bbbbbb"
        OUTPUT 1 0 x 1
        OUTPUT 1 0 indent 1
        OUTPUT 1 0 y DOUBLE (offset+1.5)

        # Padding left for name list
        OUTPUT 2 i width 1
        OUTPUT 2 i height 1
        OUTPUT 2 i y names_offset
        i = i + 1
        
    END IF

    # Name
    OUTPUT 2 i value connecting_users[IDX].user_name
    OUTPUT 2 i font_size 1.3
    OUTPUT 2 i font "montserrat-bold"
    OUTPUT 2 i indent 1
    OUTPUT 2 i shadow 1
    OUTPUT 2 i y names_offset
    i = i + 1

END TEMPLATE
BEGIN TEMPLATE speed
    SETTING align pivot
    INT hideUnit
    INT shadow

    COL_OUTPUT 0 align pivot
    COL_OUTPUT 0 color color
    COL_OUTPUT 0 font font
    IF shadow 
        COL_OUTPUT 0 shadow 1
    END IF

    RASTERIZE_TEXT "0123456789ups" font fontSize
ON_UPDATE    
    IF !common_game_data.self_alive 
        discard
    END IF

    STRING print_value
    print_value = frame_data.speed
    IF !hideUnit 
        print_value = frame_data.speed & "ups"
    END IF

    OUTPUT 0 0 value print_value

END TEMPLATE

BEGIN TEMPLATE stack
    SETTING cell_direction "horizontal"
    SETTING align pivot
    INT showDormant
    INT shadow

    DOUBLE half_fontSize
    half_fontSize = fontSize / 2

    DOUBLE stack_width
    stack_width = fontSize * 4

    DOUBLE gap
    gap = 0.2 * fontSize
    
    COL_OUTPUT 0 align "right-edge"
    COL_OUTPUT 0 font font
    COL_OUTPUT 0 color color
    COL_OUTPUT 0 height fontSize

    IF showDormant
        COL_OUTPUT 1 width gap

        COL_OUTPUT 2 align "left-edge"
        COL_OUTPUT 2 font font
        COL_OUTPUT 2 font_size half_fontSize
        COL_OUTPUT 2 color color
    END IF 

    IF shadow
        COL_OUTPUT 0 shadow 1
        COL_OUTPUT 2 shadow 1
    END IF

    RASTERIZE_TEXT "0123456789+-" font fontSize
ON_UPDATE

    IF !common_game_data.self_alive 
        discard
    END IF

    DOUBLE stack_value
    stack_value = battle_data.self.hp * 3

    DOUBLE tmp
    tmp = battle_data.self.hp + battle_data.self.armor

    stack_value = MIN stack_value tmp

    DOUBLE tmp_2
    tmp_2 = battle_data.self.hp * 3
    tmp_2 = battle_data.self.armor - tmp_2
    tmp_2 = tmp_2 + battle_data.self.hp

    DOUBLE dormant 
    dormant = MAX 0 tmp_2

    STRING dormant_out
    dormant_out = "+" & dormant

    IF IN_EDITOR
        OUTPUT 0 0 value "150"
        IF showDormant
            OUTPUT 0 2 value "+50"
        END IF
    ELSE 
        OUTPUT 0 0 value stack_value
        IF showDormant
            IF dormant > 0 
                OUTPUT 0 2 value dormant_out
            ELSE 
                OUTPUT 0 2 value ""
            END IF
        END IF
    END IF

END TEMPLATE
BEGIN TEMPLATE stat
    SETTING align pivot
    STRING stat
    INT hideUnit
    INT shadow

    COL_OUTPUT 0 align pivot
    COL_OUTPUT 0 color color
    COL_OUTPUT 0 font font
    IF shadow 
        COL_OUTPUT 0 shadow 1
    END IF

    INT hide_when_dead
    IF hide_dead
        hide_when_dead = 1
    END IF

    RASTERIZE_TEXT "0123456789/" font fontSize
ON_UPDATE    

    IF hide_when_dead == 1 && common_game_data.self_alive == "false"
        discard
    END IF

    STRING print_value
    IF stat == "dmg"
        print_value = battle_data.self.damage_inflicted
    END IF
    IF stat == "hp"
        print_value = battle_data.self.gained_hp
    END IF
    IF stat == "armor"
        print_value = battle_data.self.gained_armor
    END IF
    IF stat == "dmgrcv"
        print_value = battle_data.self.damage_taken
    END IF
    IF stat == "kda"
        print_value = battle_data.self.kills
        print_value = print_value & "/"
        print_value = print_value & battle_data.self.deaths
        print_value = print_value & "/"
        print_value = print_value & battle_data.self.assists
    END IF

    OUTPUT 0 0 value print_value

END TEMPLATE

BEGIN TEMPLATE steal_progress
    SETTING align pivot

    STRING progress_rect
    progress_rect = "<svg width='" & width & "'"
    progress_rect = progress_rect & " height='" & height & "'>"
    progress_rect = progress_rect & "<rect width='" & width & "'"
    progress_rect = progress_rect & " height='" & height & "'"
    progress_rect = progress_rect & " x='0' y='0' fill='white' /></svg>"


    COL_OUTPUT 0 width width
    COL_OUTPUT 0 height height
    COL_OUTPUT 0 fill "#FFFFFF4C"

    COL_OUTPUT 1 width width
    COL_OUTPUT 1 height height
    COL_OUTPUT 1 image progress_rect
    COL_OUTPUT 1 image_width width
    COL_OUTPUT 1 image_height height
    COL_OUTPUT 1 image_color "#FFFFFF"
    COL_OUTPUT 1 x 0
    COL_OUTPUT 1 y 0

    DOUBLE progress
    progress = 0


ON_UPDATE
   
    IF !IN_EDITOR
        IF game_data.game_mode != "macguffin" && game_data.game_mode != "ft"
            discard
        END IF
    END IF

    //IF game_data.game_mode != "macguffin" && !IN_EDITOR
    //    discard
    //END IF

    IF IN_EDITOR
        COL_OUTPUT 1 clip_x -0.4
    ELSE
        IF frame_data.steal_progress == 0
            discard
        END IF

        IF game_data.own_team.team_has_macguffin
            COL_OUTPUT 1 image_color game_data.enemy_team.color
        ELSE 
            COL_OUTPUT 1 image_color game_data.own_team.color
        END IF

        progress = frame_data.steal_progress / 100
        progress = progress * -1
        COL_OUTPUT 1 clip_x progress
    END IF

END TEMPLATE

BEGIN TEMPLATE teammates_alive
    SETTING align pivot
    INT aliveText
    INT teamColor
    INT shadow

    COL_OUTPUT 0 font font
    COL_OUTPUT 0 align pivot
    COL_OUTPUT 0 uppercase 1

    IF shadow
        COL_OUTPUT 0 shadow 1
    END IF

    RASTERIZE_TEXT "ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" font fontSize
ON_UPDATE

    IF game_data.game_mode != "ca" && game_data.game_mode != "wipeout"
        IF !IN_EDITOR
            discard
        END IF
    END IF

    INT val
    IF IN_EDITOR
        val = 1
    ELSE
        val = game_data.own_team.alive_count
    END IF

    STRING text_color
    text_color = color
    IF teamColor
        text_color = game_data.own_team.color
    END IF
    OUTPUT 0 0 color text_color

    IF aliveText
        OUTPUT 0 0 lvalue "alive"
        OUTPUT 0 0 value val
        LOCALIZE 0 0
    ELSE 
        OUTPUT 0 0 value val
    END IF

END TEMPLATE

BEGIN TEMPLATE team_name
    SETTING align pivot

    COL_OUTPUT 0 align pivot
    COL_OUTPUT 0 font font

    IF shadow
        COL_OUTPUT 0 shadow 1
    END IF

    RASTERIZE_TEXT "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" font fontSize
ON_UPDATE

    IF game_data.team_size <= 1
        IF !IN_EDITOR
            discard
        END IF
    END IF

    IF team == "own"
        OUTPUT 0 0 value game_data.own_team.team_name
    ELSE
        OUTPUT 0 0 value game_data.enemy_team.team_name
    END IF

END TEMPLATE
BEGIN TEMPLATE text
    SETTING align pivot
    STRING txt
    INT hideUnit
    INT shadow

    COL_OUTPUT 0 align pivot
    COL_OUTPUT 0 color color
    COL_OUTPUT 0 font font
    IF shadow 
        COL_OUTPUT 0 shadow 1
    END IF

    INT hide_when_dead
    IF hide_dead
        hide_when_dead = 1
    END IF

    RASTERIZE_TEXT "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" font fontSize
ON_UPDATE    

    IF hide_when_dead == 1 && common_game_data.self_alive == "false"
        discard
    END IF

    STRING print_text
    print_text = "no-text-set"

    INT len
    len = LENGTH txt

    IF len > 0
        print_text = txt
    END IF

    OUTPUT 0 0 value print_text

END TEMPLATE
TRANSLATION "following"
TRANSLATION "ingame_status_unready"
TRANSLATION "ingame_message_warmup"
TRANSLATION "ingame_message_round"
TRANSLATION "ingame_message_overtime"
TRANSLATION "ingame_message_overtime_time"
TRANSLATION "ingame_message_golden_frag"
TRANSLATION "ingame_message_overtime_fraglimit"
TRANSLATION "ingame_message_inactivity_countdown"
TRANSLATION "custom_game_settings_mode"
TRANSLATION "custom_game_settings_map"
TRANSLATION "custom_game_settings_duration"
TRANSLATION "time_unlimited"
TRANSLATION "custom_game_settings_round_limit"
TRANSLATION "custom_game_settings_score_limit"
TRANSLATION "score_unlimited"
TRANSLATION "stats_rank"
TRANSLATION "stats_status"
TRANSLATION "stats_score"
TRANSLATION "stats_kda"
TRANSLATION "stats_dmg"
TRANSLATION "stats_ping"
TRANSLATION "stats_best_time"
TRANSLATION "stats_rounds"
TRANSLATION "stats_coins"
TRANSLATION "stats_score"
TRANSLATION "stats_ready"
TRANSLATION "stats_not_ready"
TRANSLATION "spectators"
TRANSLATION "connecting"
TRANSLATION "hint_mg_round_started"
TRANSLATION "hint_mg_spawning_soon"
TRANSLATION "hint_mg_pickup"
TRANSLATION "hint_mg_bring"
TRANSLATION "hint_mg_claim_base"
TRANSLATION "hint_mg_escort"
TRANSLATION "hint_mg_hunt_carrier"
TRANSLATION "hint_mg_contest"
TRANSLATION "hint_mg_defend"
TRANSLATION "hint_mg_attack"
TRANSLATION "hint_race_restart"
TRANSLATION "hint_buy"
TRANSLATION "item_coin"
TRANSLATION "item_score_pickup"
TRANSLATION "item_score_deny"
TRANSLATION "item_flag"
TRANSLATION "item_macguffin"
TRANSLATION "item_diabotical"
TRANSLATION "item_tripledamage"
TRANSLATION "item_siphonator"
TRANSLATION "item_haste"
TRANSLATION "item_vanguard"
TRANSLATION "weapon_melee"
TRANSLATION "weapon_rocket_launcher"
TRANSLATION "weapon_blaster"
TRANSLATION "weapon_machinegun"
TRANSLATION "weapon_crossbow_pncr"
TRANSLATION "weapon_crossbow"
TRANSLATION "weapon_pncr"
TRANSLATION "weapon_shaft"
TRANSLATION "weapon_grenade_launcher"
TRANSLATION "weapon_super_shotgun"
TRANSLATION "weapon_minigun"
TRANSLATION "weapon_w9"
TRANSLATION "weapon_laserpen"
TRANSLATION "weapon_implosion_weeball"
TRANSLATION "weapon_slowfield_weeball"
TRANSLATION "weapon_explosive_weeball"
TRANSLATION "weapon_smoke_weeball"
TRANSLATION "weapon_healing_weeball"
TRANSLATION "weapon_knockback_weeball"
TRANSLATION "weapon_void_cannon"
TRANSLATION "weapon_hook"
TRANSLATION "weapon_amplifier_weeball"
TRANSLATION "weapon_vulnerability_weeball",
TRANSLATION "weapon_heal_bomb_weeball",
TRANSLATION "item_armort1"
TRANSLATION "item_armort2"
TRANSLATION "item_armort3"
TRANSLATION "item_armort4"
TRANSLATION "item_hpt0"
TRANSLATION "item_hpt1"
TRANSLATION "item_hpt2"
TRANSLATION "item_hpt3"
TRANSLATION "ammo_blaster"
TRANSLATION "ammo_shaft"
TRANSLATION "ammo_rockets"
TRANSLATION "ammo_shotgun"
TRANSLATION "ammo_pncr"
TRANSLATION "ammo_machinegun"
TRANSLATION "ammo_grenades"
TRANSLATION "ammo_void_cannon"
TRANSLATION "tool_editpad"
TRANSLATION "ingame_low_ammo"
TRANSLATION "ingame_press_attack_to_respawn"
TRANSLATION "ingame_game_is_paused"
TRANSLATION "ingame_assist"
TRANSLATION "ingame_you_fragged"
TRANSLATION "ingame_survival_remaining"
TRANSLATION "fraglog_player_suicide"
TRANSLATION "alive"
TRANSLATION "game_mode_brawl"
TRANSLATION "game_mode_wipeout"
TRANSLATION "game_mode_ctf"
TRANSLATION "game_mode_macguffin"
TRANSLATION "game_mode_duel"
TRANSLATION "game_mode_duelc"
TRANSLATION "game_mode_instagib"
TRANSLATION "game_mode_ghosthunt"
TRANSLATION "game_mode_arena"
TRANSLATION "game_mode_ca"
TRANSLATION "game_mode_cac"
TRANSLATION "game_mode_flagrun"
TRANSLATION "game_mode_coinrun"
TRANSLATION "game_mode_tdm"
TRANSLATION "game_mode_tdmc"
TRANSLATION "game_mode_race"
TRANSLATION "game_mode_rocket_arena"
TRANSLATION "game_mode_shaft_arena"
TRANSLATION "game_mode_warmup"
TRANSLATION "game_mode_extinction"
TRANSLATION "game_mode_bounty"
TRANSLATION "game_mode_ffa"
TRANSLATION "game_mode_survival"
TRANSLATION "game_mode_ft"
TRANSLATION "game_mode_ftc"
TRANSLATION "empty"
TRANSLATION "recording_match"
TRANSLATION "custom_settings_physics"
TRANSLATION "custom_settings_physics_diabotical"
TRANSLATION "custom_settings_physics_race"
TRANSLATION "custom_settings_physics_vintage"
TRANSLATION "custom_game_settings_customized"
TRANSLATION "custom_game_settings_preset"
TRANSLATION "map_vote_created_text"
TRANSLATION "vote_success"
TRANSLATION "vote_failed"
TRANSLATION "yes_str"
TRANSLATION "no_str"
TRANSLATION "vote_seconds_remaining"

// Center screen announcements
TRANSLATION "ingame_message_match_resumes_in"
TRANSLATION "ingame_message_respawning_in"
TRANSLATION "ingame_message_fight"
TRANSLATION "ingame_message_round_begins_in"
TRANSLATION "ingame_message_get_ready"
TRANSLATION "ingame_message_start_countdown"
TRANSLATION "ingame_message_overtime"
TRANSLATION "ingame_message_overtime_seconds"
TRANSLATION "ingame_message_overtime_fraglimit"
TRANSLATION "editor_saved_map"
TRANSLATION "editor_baked_map"
TRANSLATION "editor_map_bake_failed"
TRANSLATION "ingame_message_round_x"
TRANSLATION "ingame_message_round_cleared"
TRANSLATION "ingame_message_fragged_by"
TRANSLATION "ingame_message_fragged_self"

//Natively used:
TRANSLATION "ingame_chat_msg_client_connecting"
TRANSLATION "ingame_chat_msg_client_disconnected"
TRANSLATION "ingame_chat_msg_client_joined_team"
TRANSLATION "ingame_chat_msg_client_joined_spec"
TRANSLATION "ingame_chat_msg_client_inactivity_kick"
TRANSLATION "ingame_chat_msg_client_inactivity_warning"
TRANSLATION "ingame_chat_msg_pauses_left"
TRANSLATION "ingame_chat_msg_out_of_pauses"
TRANSLATION "ingame_chat_msg_client_match_paused"
TRANSLATION "ingame_chat_msg_match_paused"
TRANSLATION "ingame_chat_msg_client_match_unpaused"
TRANSLATION "ingame_chat_msg_match_unpaused"
TRANSLATION "ingame_chat_msg_observing"
TRANSLATION "ingame_chat_msg_observing_stopped"
TRANSLATION "match_cancel_msg"
TRANSLATION "match_penalty_msg"
TRANSLATION "match_penalty_removed_msg"
TRANSLATION "match_user_abandoned"
TRANSLATION "match_auto_balance_teams"

// Loading Screen Tips
TRANSLATION "loading_tip_general_1_frox"
TRANSLATION "loading_tip_general_2_flawlessdbt"
TRANSLATION "loading_tip_general_3_snexwang"
TRANSLATION "loading_tip_general_4_un1d"
TRANSLATION "loading_tip_general_5_d0pebear99"
TRANSLATION "loading_tip_general_6_pop"
TRANSLATION "loading_tip_general_7_tomau5"
TRANSLATION "loading_tip_general_8_tomau5"
TRANSLATION "loading_tip_general_9_fragtastic"
TRANSLATION "loading_tip_general_10_g4rlock"
TRANSLATION "loading_tip_general_11_dan_dead_or_alive"
TRANSLATION "loading_tip_general_12_drrifted_"
TRANSLATION "loading_tip_general_13_doggerdemon"
TRANSLATION "loading_tip_general_14_pressok"
TRANSLATION "loading_tip_general_15_g4mb4"
TRANSLATION "loading_tip_general_16_inactiveaccount"
TRANSLATION "loading_tip_general_17_mr_kt"
TRANSLATION "loading_tip_general_18_jysandy"
TRANSLATION "loading_tip_general_19_zydian05"
TRANSLATION "loading_tip_general_20_amrojare"
TRANSLATION "loading_tip_general_21_grev"
TRANSLATION "loading_tip_general_22_c3zz"
TRANSLATION "loading_tip_general_23_vit0so"
TRANSLATION "loading_tip_general_24_owenz0r"
TRANSLATION "loading_tip_general_25_tekn0z"
TRANSLATION "loading_tip_general_26_cadsmar"
TRANSLATION "loading_tip_general_27_westyy"
TRANSLATION "loading_tip_general_28_dobbelburger"
TRANSLATION "loading_tip_general_29_seekay"
TRANSLATION "loading_tip_general_30_reign_"
TRANSLATION "loading_tip_general_31_gretel"
TRANSLATION "loading_tip_general_32_e_r_n_y"
TRANSLATION "loading_tip_general_33_kok0mo"
TRANSLATION "loading_tip_general_34_nonstickswag"
TRANSLATION "loading_tip_general_35_yikespike"
TRANSLATION "loading_tip_general_36_peenscreeker"
TRANSLATION "loading_tip_general_37_groparoo"
TRANSLATION "loading_tip_general_38_lemmingNr13"
TRANSLATION "loading_tip_general_39_imageomega"
TRANSLATION "loading_tip_general_40_gppp"
TRANSLATION "loading_tip_general_41_real_kranken"
TRANSLATION "loading_tip_general_42_groparoo"
TRANSLATION "loading_tip_general_43_gerby"
TRANSLATION "loading_tip_general_44_saka"
TRANSLATION "loading_tip_general_45_frustzwerg"
TRANSLATION "loading_tip_general_46_nerfhalo1"
TRANSLATION "loading_tip_general_47_mister_wong"
TRANSLATION "loading_tip_general_48_internetdonut"
TRANSLATION "loading_tip_general_49_coredusk"
TRANSLATION "loading_tip_general_50_kerim"
TRANSLATION "loading_tip_general_51_blakeeo"
TRANSLATION "loading_tip_general_52_yonecessito"
TRANSLATION "loading_tip_general_53_moody"
TRANSLATION "loading_tip_general_54_sohm"
TRANSLATION "loading_tip_general_55_sakiir"
TRANSLATION "loading_tip_general_56_creep"
TRANSLATION "loading_tip_pickups_1_dukeajc"
TRANSLATION "loading_tip_pickups_2_satan_inside"
TRANSLATION "loading_tip_pickups_3_kok0mo"
TRANSLATION "loading_tip_pickups_4_clkou"
TRANSLATION "loading_tip_pickups_5_typhon"
TRANSLATION "loading_tip_pickups_6_saka"
TRANSLATION "loading_tip_pickups_7_cjwovo"
TRANSLATION "loading_tip_pickups_8_smolin"
TRANSLATION "loading_tip_pickups_9_quick_autophagie"
TRANSLATION "loading_tip_pickups_10_bananmanx47"
TRANSLATION "loading_tip_pickups_11_track004"
TRANSLATION "loading_tip_pickups_12_nonstickswag"
TRANSLATION "loading_tip_duel_1_nubb3r"
TRANSLATION "loading_tip_duel_2__saif"
TRANSLATION "loading_tip_duel_3_drad1k"
TRANSLATION "loading_tip_duel_4_pagedmov"
TRANSLATION "loading_tip_wipeout_1_sav"
TRANSLATION "loading_tip_wipeout_2_big_bad_beaver"
TRANSLATION "loading_tip_wipeout_3_b0oboy"
TRANSLATION "loading_tip_wipeout_4_nommme"
TRANSLATION "loading_tip_macguffin_1_satan_inside"
TRANSLATION "loading_tip_macguffin_2_anima"
TRANSLATION "loading_tip_macguffin_3_kainalo"
TRANSLATION "loading_tip_macguffin_4_nommme"
TRANSLATION "loading_tip_macguffin_5_akacia"
TRANSLATION "loading_tip_macguffin_6_cjwovo"
TRANSLATION "loading_tip_extinction_1_sav"
TRANSLATION "loading_tip_extinction_2_nommme"
TRANSLATION "loading_tip_weebow_1_satan_inside"
TRANSLATION "loading_tip_freezetag_1_dw"
TRANSLATION "loading_tip_freezetag_2_dw"
BEGIN TEMPLATE voicechat
    SETTING iterator own_team_players.count
    SETTING item_direction "vertical"
    SETTING cell_direction "horizontal"
    SETTING align pivot
    SETTING item_spacing 0.5
    SETTING cell_spacing 0

    INT row
    row = 0

    DOUBLE icon_offset
    icon_offset = fontSize * -0.5

    DOUBLE separator
    separator = fontSize / 2

    RASTERIZE "images/icons/fa/microphone-slash.svg" fontSize fontSize
    RASTERIZE "images/icons/fa/microphone.svg" fontSize fontSize

    RASTERIZE_TEXT "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" font fontSize
ON_UPDATE

    IF IDX == 0
        row = 0
    END IF
    
    OUTPUT row 0 value own_team_players[IDX].name
    OUTPUT row 0 shadow 1
    OUTPUT row 0 font font

    OUTPUT row 1 width separator
    OUTPUT row 1 height fontSize

    IF own_team_players[IDX].voip_muted
        OUTPUT row 2 image "images/icons/fa/microphone-slash.svg"
    ELSE
        OUTPUT row 2 image "images/icons/fa/microphone.svg"
    END IF

    STRING icon_color
    icon_color = iC
    IF own_team_players[IDX].is_self
        icon_color = "#ff0000"
    END IF
    
    OUTPUT row 2 image_color icon_color 
    OUTPUT row 2 image_width fontSize
    OUTPUT row 2 image_height fontSize
    OUTPUT row 2 width fontSize
    OUTPUT row 2 height fontSize
    OUTPUT row 2 offset_y icon_offset

    IF own_team_players[IDX].voip_talking || IN_EDITOR
        OUTPUT row 0 opacity 1
        OUTPUT row 1 opacity 1
        OUTPUT row 2 opacity 1
    ELSE
        OUTPUT row 0 opacity 0
        OUTPUT row 1 opacity 0
        OUTPUT row 2 opacity 0
    END IF

    row = row + 1

END TEMPLATE
BEGIN TEMPLATE vote
    SETTING align pivot

    RASTERIZE_TEXT "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" font fontSize
ON_UPDATE

    IF vote.state == 0
        discard
    END IF

    DOUBLE row_height
    row_height = fontSize * 1.5

    DOUBLE row_height2
    row_height2 = fontSize * 2

    DOUBLE indent
    indent = fontSize * 0.5


    OUTPUT 0 0 lvalue "map_vote_created_text"
    OUTPUT 0 0 value vote.creator
    OUTPUT 0 0 value2 vote.map_name
    LOCALIZE 0 0
    OUTPUT 0 0 height row_height
    OUTPUT 0 0 font font
    OUTPUT 0 0 shadow 1
    OUTPUT 0 0 color color


    IF vote.state == 1

        STRING yes_bg
        yes_bg = "#00000066"
        IF vote.voted == 1
            yes_bg = "#2fd42f"
        END IF

        STRING no_bg
        no_bg = "#00000066"
        IF vote.voted == 2
            no_bg = "#ff0000"
        END IF 

        STRING yes_key
        yes_key = "["
        yes_key = yes_key & vote.yes_key
        yes_key = yes_key & "]"

        STRING no_key
        no_key = "["
        no_key = no_key & vote.no_key
        no_key = no_key & "]"

        ECHO yes_key

        OUTPUT 1 0 value yes_key
        OUTPUT 1 0 font font
        OUTPUT 1 0 height row_height2
        OUTPUT 1 0 shadow 1
        OUTPUT 1 0 fill yes_bg
        OUTPUT 1 0 indent DOUBLE (indent * 0.5)

        OUTPUT 1 1 lvalue "yes_str"
        LOCALIZE 1 1
        OUTPUT 1 1 font font
        OUTPUT 1 1 height row_height2
        OUTPUT 1 1 shadow 1
        OUTPUT 1 1 fill yes_bg
        OUTPUT 1 1 indent indent

        OUTPUT 1 2 value vote.yes_count
        OUTPUT 1 2 font font
        OUTPUT 1 2 height row_height2
        OUTPUT 1 2 shadow 1
        OUTPUT 1 2 width row_height
        OUTPUT 1 2 fill "#00000044"

        OUTPUT 1 3 width DOUBLE (fontSize * 1)

        OUTPUT 1 4 value no_key
        OUTPUT 1 4 font font
        OUTPUT 1 4 height row_height2
        OUTPUT 1 4 shadow 1
        OUTPUT 1 4 fill no_bg
        OUTPUT 1 4 indent DOUBLE (indent * 0.5)

        OUTPUT 1 5 lvalue "no_str"
        LOCALIZE 1 5
        OUTPUT 1 5 font font
        OUTPUT 1 5 height row_height2
        OUTPUT 1 5 shadow 1
        OUTPUT 1 5 fill no_bg
        OUTPUT 1 5 indent indent

        OUTPUT 1 6 value vote.no_count
        OUTPUT 1 6 font font
        OUTPUT 1 6 height row_height2
        OUTPUT 1 6 shadow 1
        OUTPUT 1 6 width row_height
        OUTPUT 1 6 fill "#00000044"

        OUTPUT 2 0 lvalue "vote_seconds_remaining"
        OUTPUT 2 0 value vote.countdown
        LOCALIZE 2 0
        OUTPUT 2 0 font font
        OUTPUT 2 0 height row_height2
        OUTPUT 2 0 shadow 1
    END IF 

    IF vote.state == 3 
        OUTPUT 1 0 lvalue "vote_failed"
        LOCALIZE 1 0
        OUTPUT 1 0 height row_height
        OUTPUT 1 0 font font
        OUTPUT 1 0 shadow 1
        OUTPUT 1 0 color "#ff0000"
        OUTPUT 1 0 indent 0
    END IF 

    IF vote.state == 2
        OUTPUT 1 0 lvalue "vote_success"
        LOCALIZE 1 0
        OUTPUT 1 0 height row_height
        OUTPUT 1 0 font font
        OUTPUT 1 0 shadow 1
        OUTPUT 1 0 color "#2fd42f"
        OUTPUT 1 0 indent 0
    END IF

END TEMPLATE


yes color: #2fd42f; }
no  color: #ff0000; }
BEGIN TEMPLATE you_fragged
    SETTING iterator kill_messages.count
    SETTING item_direction "vertical"
    SETTING cell_direction "horizontal"
    SETTING align pivot
    SETTING item_spacing 0
    SETTING cell_spacing 0
    SETTING row_align align
    INT ha

    DOUBLE fontSizeSmall
    fontSizeSmall = fontSize * 0.8

    RASTERIZE_TEXT "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" font fontSize
    RASTERIZE_TEXT "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" font fontSizeSmall
ON_UPDATE

    INT render_msg
    render_msg = 1
    IF ha && kill_messages[IDX].assist
        render_msg = 0
    END IF
    
    DOUBLE fsize
    fsize = fontSize

    DOUBLE row_height
    row_height = fontSize * 1.2

    DOUBLE indent
    indent = fontSize * 0.1

    IF kill_messages[IDX].assist 
        fsize = fontSizeSmall
        indent = fsize * 0.1
    END IF

    IF color == "white"
        color = "#ffffff"
    END IF

    OUTPUT IDX 0 color color
    OUTPUT IDX 0 height row_height
    OUTPUT IDX 0 align "center"
    OUTPUT IDX 0 font font
    OUTPUT IDX 0 font_size fsize
    OUTPUT IDX 0 shadow 1
    OUTPUT IDX 0 indent indent
    IF kill_messages[IDX].assist
        OUTPUT IDX 0 lvalue "ingame_assist"
    ELSE
        OUTPUT IDX 0 lvalue "ingame_you_fragged"
    END IF
    OUTPUT IDX 0 value ""
    LOCALIZE IDX 0

    OUTPUT IDX 1 height row_height
    OUTPUT IDX 1 align "center"
    OUTPUT IDX 1 font font
    OUTPUT IDX 1 font_size fsize
    OUTPUT IDX 1 shadow 1
    OUTPUT IDX 1 indent indent
    OUTPUT IDX 1 value kill_messages[IDX].target_name
    OUTPUT IDX 1 color kill_messages[IDX].enemy_color

    # Need to set to something ("empty") otherwise the previous iterations value will be rendered
    IF !render_msg
        OUTPUT IDX 0 height 0
        OUTPUT IDX 0 lvalue "empty"
        OUTPUT IDX 0 value ""
        LOCALIZE 0 0
        OUTPUT IDX 1 height 0
        OUTPUT IDX 1 value ""
    END IF

END TEMPLATE
BEGIN TEMPLATE armor
    SETTING align pivot
    DOUBLE threshold
    INT scaleOnPickup
    INT hideIf0
    INT shadow

    COL_OUTPUT 0 font font
    COL_OUTPUT 0 align pivot
    IF shadow 
        COL_OUTPUT 0 shadow 1
    END IF

    INT hide_zero
    IF hideIf0
        hide_zero = 1
    END IF

    RASTERIZE_TEXT "0123456789" font fontSize
ON_UPDATE

    STRING main_color
    main_color = color
    IF battle_data.self.armor <= threshold
        main_color = thresholdColor
    END IF
    
    IF !common_game_data.self_alive 
        discard
    END IF

    IF hide_zero == 1 && battle_data.self.armor == 0
        discard
    END IF

    OUTPUT 0 0 value battle_data.self.armor
    OUTPUT 0 0 color main_color

END TEMPLATE

BEGIN TEMPLATE armor_bar
    SETTING align pivot
    SETTING cell_direction "horizontal"
    DOUBLE segments
    DOUBLE gap
    DOUBLE threshold
    INT rightToLeft
    INT boxShadow
    DOUBLE bRadius
    DOUBLE cCode
    DOUBLE skewX
    DOUBLE skewY

    INT gaps
    gaps = segments - 1

    DOUBLE gap_size
    gap_size = gap / 10

    DOUBLE total_gaps_width
    total_gaps_width = gaps * gap_size

    DOUBLE total_segments_width
    total_segments_width = width - total_gaps_width

    DOUBLE segment_width
    segment_width = total_segments_width / segments

    DOUBLE segment_perc
    segment_perc = segment_width / width

    DOUBLE total_segments_perc
    total_segments_perc = total_segments_width / width

    DOUBLE gap_perc
    gap_perc = gap_size / width

    DOUBLE nogap_segment_perc
    nogap_segment_perc = 1 / segments

    INT fill_dir
    IF rightToLeft
        fill_dir = 1
    END IF

    STRING svg
    DOUBLE n    

    svg = "<svg "
    svg = svg & " width='" & width & "'"
    svg = svg & " height='" & height & "'"
    svg = svg & " viewBox='0 0 " & width
    svg = svg & " " & height & "'"
    svg = svg & ">"

    FOR segments
        svg = svg & "<rect "
        svg = svg & " width='" & segment_width & "' "
        svg = svg & " height='" & height & "' "
        svg = svg & " rx='" & bRadius & "' "
        svg = svg & " fill='#ffffff' "
        svg = svg & " y='0' "
        svg = svg & " x='" & n & "'"
        svg = svg & "/>"

        n = n + segment_width
        n = n + gap_size
    END FOR

    svg = svg & "</svg>"
    
    COL_OUTPUT 0 image svg
    COL_OUTPUT 0 image_width width
    COL_OUTPUT 0 image_height height
    COL_OUTPUT 0 width width
    COL_OUTPUT 0 height height
    COL_OUTPUT 0 image_color bC

    COL_OUTPUT 1 image svg
    COL_OUTPUT 1 image_width width
    COL_OUTPUT 1 image_height height
    COL_OUTPUT 1 width width
    COL_OUTPUT 1 height height

    COL_OUTPUT 1 x 0
    COL_OUTPUT 1 y 0

ON_UPDATE

    IF !common_game_data.self_alive 
        discard
    END IF

    # Clip percent
    DOUBLE armor_perc
    armor_perc = battle_data.self.armor_percentage / 100
    armor_perc = CLAMP armor_perc 0 1

    DOUBLE segment_only_perc
    segment_only_perc = total_segments_perc * armor_perc

    INT live_segments
    live_segments = armor_perc / nogap_segment_perc
    live_segments = live_segments + 1

    INT live_gaps
    live_gaps = armor_perc / nogap_segment_perc
    
    DOUBLE tmp
    tmp = armor_perc % nogap_segment_perc

    INT bleh 
    bleh = 0
    IF tmp == 0
        bleh = bleh + 1
    END IF
    IF live_segments > segments
        bleh = bleh + 1
    END IF
    IF bleh > 0
        live_gaps = live_gaps - 1
    END IF
    
    DOUBLE clip_perc
    clip_perc = live_gaps * gap_perc
    clip_perc = clip_perc + segment_only_perc

    IF !fill_dir
        clip_perc = clip_perc * -1
    END IF

    IF armor_perc == 0
        OUTPUT 0 1 clip_x 0
    ELSE
        OUTPUT 0 1 clip_x clip_perc
    END IF

    # Color
    STRING bar_color
    bar_color = color
    IF battle_data.self.armor <= threshold
        bar_color = thresholdColor
    END IF

    OUTPUT 0 1 image_color bar_color


END TEMPLATE

BEGIN TEMPLATE current_ammo
    SETTING align pivot
    DOUBLE threshold
    INT lowAO
    INT shadow

    COL_OUTPUT 0 font font
    COL_OUTPUT 0 align pivot
    IF shadow 
        COL_OUTPUT 0 shadow 1
    END IF

    RASTERIZE_TEXT "0123456789" font fontSize
ON_UPDATE
    DOUBLE threshold_abs
    threshold_abs = threshold * current_weapon_data.max_ammo

    STRING color
    STRING value
    color = aCCustom
    value = current_weapon_data.ammo
    
    IF lowAO
        IF current_weapon_data.ammo > threshold_abs 
            IF !IN_EDITOR
                discard
            END IF
        END IF
    END IF

    IF !common_game_data.self_alive
        discard
    END IF
    IF current_weapon_data.unlimited_ammo 
        OUTPUT 0 0 value "โ" 
        BREAK
    END IF 
    IF aC == "weapon" 
        color = current_weapon_data.color
    END IF 
    IF lowAC == "weapon" 
        lowACCustom = current_weapon_data.color
    END IF
    IF current_weapon_data.ammo <= threshold_abs 
        color = lowACCustom
    END IF

    OUTPUT 0 0 value value
    OUTPUT 0 0 color color

END TEMPLATE

BEGIN TEMPLATE current_weapon_icon
    SETTING align pivot
    DOUBLE size
    INT weapon_fill
    INT iconShadow

    COL_OUTPUT 0 image_width size
    COL_OUTPUT 0 image_height size
    COL_OUTPUT 0 width size
    COL_OUTPUT 0 height size

    RASTERIZE "images/weapon_rl.svg" size size
    RASTERIZE "images/weapon_melee.svg" size size
    RASTERIZE "images/weapon_rl.svg" size size
    RASTERIZE "images/weapon_sb.svg" size size
    RASTERIZE "images/weapon_mac.svg" size size
    RASTERIZE "images/weapon_cb.svg" size size
    RASTERIZE "images/weapon_pncr.svg" size size
    RASTERIZE "images/weapon_shaft.svg" size size
    RASTERIZE "images/weapon_gl.svg" size size
    RASTERIZE "images/weapon_ss.svg" size size
    RASTERIZE "images/weapon_mg.svg" size size
    RASTERIZE "images/weapon_w9.svg" size size
    RASTERIZE "images/weapon_st.svg" size size
    RASTERIZE "images/weapon_iw.svg" size size
    RASTERIZE "images/weapon_sw.svg" size size
    RASTERIZE "images/weapon_bw.svg" size size
    RASTERIZE "images/weapon_smw.svg" size size
    RASTERIZE "images/weapon_hw.svg" size size
    RASTERIZE "images/weapon_kw.svg" size size
    RASTERIZE "images/weapon_vc.svg" size size
    RASTERIZE "images/weapon_bl.svg" size size
    
ON_UPDATE
    
    IF !common_game_data.self_alive
        discard
    END IF

    STRING color
    color = fill
    IF weapon_fill 
        color = current_weapon_data.color
    END IF

    OUTPUT 0 0 image current_weapon_data.icon_url
    OUTPUT 0 0 image_color color

END TEMPLATE

BEGIN TEMPLATE dodge
    SETTING cell_direction "vertical"
    SETTING align pivot
    INT aT
    DOUBLE iSize
    DOUBLE icon_inactive_opacity
    DOUBLE bRadius
    DOUBLE cCode
    DOUBLE bWidth

    DOUBLE bg_offset
    bg_offset = bWidth * -1
    DOUBLE bg_size
    bg_size = iSize + bWidth
    bg_size = bg_size + bWidth

    STRING bg_svg
    bg_svg = "<svg "
    bg_svg = bg_svg & " width='" & iSize & "'"
    bg_svg = bg_svg & " height='" & iSize & "'"
    bg_svg = bg_svg & " viewBox='" & bg_offset
    bg_svg = bg_svg & " " & bg_offset
    bg_svg = bg_svg & " " & bg_size
    bg_svg = bg_svg & " " & bg_size & "'>"
    bg_svg = bg_svg & "<rect "
    bg_svg = bg_svg & " width='" & iSize & "' "
    bg_svg = bg_svg & " height='" & iSize & "' "
    bg_svg = bg_svg & " rx='" & bRadius & "' "
    bg_svg = bg_svg & " fill='#ffffff' "
    bg_svg = bg_svg & " stroke-width='0' "
    bg_svg = bg_svg & " y='0' "
    bg_svg = bg_svg & " x='0' "
    bg_svg = bg_svg & "/></svg>"

    DOUBLE border_offset
    border_offset = bWidth / 2
    border_offset = border_offset * -1
    DOUBLE border_size
    border_size = iSize + bWidth

    STRING border_svg 
    border_svg = "<svg "
    border_svg = border_svg & " width='" & iSize & "'"
    border_svg = border_svg & " height='" & iSize & "'"
    border_svg = border_svg & " viewBox='" & border_offset
    border_svg = border_svg & " " & border_offset
    border_svg = border_svg & " " & border_size
    border_svg = border_svg & " " & border_size & "'>"
    border_svg = border_svg & "<rect "
    border_svg = border_svg & " width='" & iSize & "' "
    border_svg = border_svg & " height='" & iSize & "' "
    border_svg = border_svg & " rx='" & bRadius & "' "
    border_svg = border_svg & " fill-opacity='0' "
    border_svg = border_svg & " stroke='#ffffff' "
    border_svg = border_svg & " stroke-width='" & bWidth & "' "
    border_svg = border_svg & " y='0' "
    border_svg = border_svg & " x='0' "
    border_svg = border_svg & "/></svg>"

    COL_OUTPUT 0 image bg_svg
    COL_OUTPUT 0 image_width iSize
    COL_OUTPUT 0 image_height iSize
    COL_OUTPUT 0 image_color bgC
    COL_OUTPUT 0 width iSize
    COL_OUTPUT 0 height iSize

    COL_OUTPUT 1 image border_svg
    COL_OUTPUT 1 image_width iSize
    COL_OUTPUT 1 image_height iSize
    COL_OUTPUT 1 image_color mC
    COL_OUTPUT 1 width iSize
    COL_OUTPUT 1 height iSize
    COL_OUTPUT 1 x 0
    COL_OUTPUT 1 y 0

    DOUBLE icon_size
    icon_size = iSize * 0.9
    IF aT == 0
        COL_OUTPUT 2 image "images/icons/dodge_arrow_single.svg"
        COL_OUTPUT 2 align "center"
        COL_OUTPUT 2 image_width icon_size 
        COL_OUTPUT 2 image_height icon_size
        COL_OUTPUT 2 image_color mC
        COL_OUTPUT 2 width iSize
        COL_OUTPUT 2 height iSize
        COL_OUTPUT 2 x 0
        COL_OUTPUT 2 y 0
    END IF
    IF aT == 1
        COL_OUTPUT 2 image "images/icons/dodge_arrow_type1_1.svg"
        COL_OUTPUT 2 align "center"
        COL_OUTPUT 2 image_width icon_size 
        COL_OUTPUT 2 image_height icon_size
        COL_OUTPUT 2 image_color mC
        COL_OUTPUT 2 width iSize
        COL_OUTPUT 2 height iSize
        COL_OUTPUT 2 x 0
        COL_OUTPUT 2 y 0

        COL_OUTPUT 3 image "images/icons/dodge_arrow_type1_2.svg"
        COL_OUTPUT 3 align "center"
        COL_OUTPUT 3 image_width icon_size 
        COL_OUTPUT 3 image_height icon_size
        COL_OUTPUT 3 image_color mC
        COL_OUTPUT 3 width iSize
        COL_OUTPUT 3 height iSize
        COL_OUTPUT 3 x 0
        COL_OUTPUT 3 y 0

        COL_OUTPUT 4 image "images/icons/dodge_arrow_type1_3.svg"
        COL_OUTPUT 4 align "center"
        COL_OUTPUT 4 image_width icon_size 
        COL_OUTPUT 4 image_height icon_size
        COL_OUTPUT 4 image_color mC
        COL_OUTPUT 4 width iSize
        COL_OUTPUT 4 height iSize
        COL_OUTPUT 4 x 0
        COL_OUTPUT 4 y 0
    END IF

    IF aT == 2
        COL_OUTPUT 2 image "images/icons/dodge_arrow_type2_1.svg"
        COL_OUTPUT 2 align "center"
        COL_OUTPUT 2 image_width icon_size 
        COL_OUTPUT 2 image_height icon_size
        COL_OUTPUT 2 image_color mC
        COL_OUTPUT 2 width iSize
        COL_OUTPUT 2 height iSize
        COL_OUTPUT 2 x 0
        COL_OUTPUT 2 y 0

        COL_OUTPUT 3 image "images/icons/dodge_arrow_type2_2.svg"
        COL_OUTPUT 3 align "center"
        COL_OUTPUT 3 image_width icon_size 
        COL_OUTPUT 3 image_height icon_size
        COL_OUTPUT 3 image_color mC
        COL_OUTPUT 3 width iSize
        COL_OUTPUT 3 height iSize
        COL_OUTPUT 3 x 0
        COL_OUTPUT 3 y 0

        COL_OUTPUT 4 image "images/icons/dodge_arrow_type2_3.svg"
        COL_OUTPUT 4 align "center"
        COL_OUTPUT 4 image_width icon_size 
        COL_OUTPUT 4 image_height icon_size
        COL_OUTPUT 4 image_color mC
        COL_OUTPUT 4 width iSize
        COL_OUTPUT 4 height iSize
        COL_OUTPUT 4 x 0
        COL_OUTPUT 4 y 0
    END IF

ON_UPDATE

    IF !common_game_data.self_alive
        discard
    END IF

    IF IN_EDITOR
        OUTPUT 0 1 opacity 1
        OUTPUT 0 2 opacity 1
        OUTPUT 0 3 opacity 1
        OUTPUT 0 4 opacity 1
        BREAK
    END IF

    IF frame_data.bolt_recharging_progress == 0
        # "active", show border
        OUTPUT 0 1 opacity 1
    ELSE
        IF frame_data.bolt_recharging_progress >= 99.5
            OUTPUT 0 1 opacity 1
        ELSE 
            OUTPUT 0 1 opacity 0
        END IF
    END IF

    IF aT == 0 
        IF frame_data.bolt_recharging_progress == 0
            OUTPUT 0 2 opacity 1
        ELSE 
            OUTPUT 0 2 opacity icon_inactive_opacity
        END IF
    END IF

    IF aT == 1 || aT == 2
        IF frame_data.bolt_recharging_progress == 0
            OUTPUT 0 2 opacity 1
            OUTPUT 0 3 opacity 1
            OUTPUT 0 4 opacity 1
        ELSE 
            IF frame_data.bolt_recharging_progress < 33.3333
                OUTPUT 0 2 opacity icon_inactive_opacity
                OUTPUT 0 3 opacity icon_inactive_opacity
                OUTPUT 0 4 opacity icon_inactive_opacity
            END IF
            IF frame_data.bolt_recharging_progress >= 33.3333
                OUTPUT 0 2 opacity 1
                OUTPUT 0 3 opacity icon_inactive_opacity
                OUTPUT 0 4 opacity icon_inactive_opacity
            END IF
            IF frame_data.bolt_recharging_progress >= 66.6666
                OUTPUT 0 2 opacity 1
                OUTPUT 0 3 opacity 1
                OUTPUT 0 4 opacity icon_inactive_opacity
            END IF
            IF frame_data.bolt_recharging_progress >= 99.5
                OUTPUT 0 4 opacity 1
            END IF
        END IF
    END IF

END TEMPLATE
BEGIN TEMPLATE enemy_players
    SETTING iterator enemy_team_players.count
    SETTING item_direction direction
    SETTING cell_direction "vertical"
    SETTING align pivot
    SETTING item_spacing 1
    SETTING cell_spacing 0

    DOUBLE nWidth
    INT sL

    # ========================================
    # SVGS
    STRING square
    square = "<svg width='1' height='1'><rect width='1' height='1' x='0' y='0' fill='white' /></svg>"

    STRING hp_bar
    hp_bar = "<svg width='" & height & "'"
    hp_bar = hp_bar & " height='" & 0.68 & "'>"
    hp_bar = hp_bar & "<rect width='" & height & "'"
    hp_bar = hp_bar & " height='" & 0.68 & "'"
    hp_bar = hp_bar & " x='0' y='0' fill='white' /></svg>"

    STRING armor_bar
    armor_bar = "<svg width='" & height & "'"
    armor_bar = armor_bar & " height='" & 0.46 & "'>"
    armor_bar = armor_bar & "<rect width='" & height & "'"
    armor_bar = armor_bar & " height='" & 0.46 & "'"
    armor_bar = armor_bar & " x='0' y='0' fill='white' /></svg>"

    STRING solo_hp_bar
    solo_hp_bar = "<svg width='" & nWidth & "'"
    solo_hp_bar = solo_hp_bar & " height='" & 1.6 & "'>"
    solo_hp_bar = solo_hp_bar & "<rect width='" & nWidth & "'"
    solo_hp_bar = solo_hp_bar & " height='" & 1.6 & "'"
    solo_hp_bar = solo_hp_bar & " x='0' y='0' fill='white' /></svg>"

    STRING solo_armor_bar
    solo_armor_bar = "<svg width='" & nWidth & "'"
    solo_armor_bar = solo_armor_bar & " height='" & 0.4 & "'>"
    solo_armor_bar = solo_armor_bar & "<rect width='" & nWidth & "'"
    solo_armor_bar = solo_armor_bar & " height='" & 0.4 & "'"
    solo_armor_bar = solo_armor_bar & " x='0' y='0' fill='white' /></svg>"

    # ========================================
    # COMMON
    DOUBLE dead_font_size
    dead_font_size = height * 0.65

    DOUBLE ready_size
    ready_size = height * 0.2

    DOUBLE half_ready_size
    half_ready_size = ready_size / 2

    DOUBLE ready_offset_x
    ready_offset_x = height - ready_size

    DOUBLE name_offset_x
    name_offset_x = height + 0.2

    DOUBLE name_size
    name_size = height / 4

    DOUBLE hp_bar_offset_x
    hp_bar_offset_x = height + 0.3
    hp_bar_offset_x = hp_bar_offset_x + name_size

    DOUBLE armor_bar_offset_x
    armor_bar_offset_x = hp_bar_offset_x + 0.7

    DOUBLE item_image_size
    item_image_size = height * 0.8

    DOUBLE item_offset_x
    item_offset_x = height + 1.5

    DOUBLE small_item_size
    small_item_size = height / 2

    DOUBLE small_item_image_size
    small_item_image_size = small_item_size - 0.2

    DOUBLE lives_offset
    lives_offset = height + 2

    DOUBLE lives_offset_text
    lives_offset_text = height + 2.2

    DOUBLE lives_image_size
    lives_image_size = small_item_size * 0.7

    DOUBLE solo_lives_image_size
    solo_lives_image_size = small_item_size * 0.9

    INT dir
    IF direction == "horizontal reverse"
        dir = 1
    END IF

    INT j

    IF game_data.team_size > 1
        # ========================================
        # AVATAR
        COL_OUTPUT j image_width height
        COL_OUTPUT j image_height height
        COL_OUTPUT j width height
        COL_OUTPUT j height height
        j = j + 1

        # ========================================
        # DEAD INDICATOR
        COL_OUTPUT j height height
        COL_OUTPUT j width height
        COL_OUTPUT j x 0
        COL_OUTPUT j fill "#FF000033"
        COL_OUTPUT j value "X"
        COL_OUTPUT j font "montserrat-bold"
        COL_OUTPUT j font_size dead_font_size
        COL_OUTPUT j align "center"
        COL_OUTPUT j color "#ff0000"
        j = j + 1

        # ========================================
        # FROZEN INDICATOR
        IF game_data.game_mode == "ft"
            j = j + 1
        END IF

        # ========================================
        # SELF INDICATOR
        COL_OUTPUT j image_width DOUBLE (height * 0.5)
        COL_OUTPUT j image_height DOUBLE (height * 0.5)
        COL_OUTPUT j height height
        COL_OUTPUT j x 0
        j = j + 1

        # ========================================
        # READY INDICATOR
        COL_OUTPUT j image square
        COL_OUTPUT j image_width ready_size
        COL_OUTPUT j image_height ready_size
        COL_OUTPUT j width ready_size
        COL_OUTPUT j height ready_size
        COL_OUTPUT j x ready_offset_x
        COL_OUTPUT j offset_x ready_offset_x
        j = j + 1

        # ========================================
        # PLAYER NAME
        COL_OUTPUT j font "roboto-bold"
        COL_OUTPUT j font_size name_size
        COL_OUTPUT j shadow 1
        COL_OUTPUT j height height
        COL_OUTPUT j width name_size
        COL_OUTPUT j x name_offset_x
        COL_OUTPUT j align "center"
        #COL_OUTPUT j fill "#ff0000"
        j = j + 1

        # ========================================
        # HEALTH BAR
        COL_OUTPUT j width 0.68
        COL_OUTPUT j height height
        COL_OUTPUT j fill "#00000080"
        COL_OUTPUT j image hp_bar
        COL_OUTPUT j image_width height
        COL_OUTPUT j image_height 0.68
        COL_OUTPUT j x hp_bar_offset_x
        j = j + 1


        # ========================================
        # ARMOR BAR
        COL_OUTPUT j width 0.46
        COL_OUTPUT j height height
        COL_OUTPUT j fill "#00000080"
        COL_OUTPUT j image armor_bar
        COL_OUTPUT j image_color "#ffffff"
        COL_OUTPUT j image_width height
        COL_OUTPUT j image_height 0.46
        COL_OUTPUT j x armor_bar_offset_x
        j = j + 1

        # ========================================
        # RESPAWN TIMER
        COL_OUTPUT j width 2.2
        COL_OUTPUT j height height
        COL_OUTPUT j fill "#17171788"
        COL_OUTPUT j font "roboto-bold"
        COL_OUTPUT j shadow 1
        COL_OUTPUT j font_size 1.5
        COL_OUTPUT j x hp_bar_offset_x
        j = j + 1

    ELSE
        # team_size <= 1

        DOUBLE name_indent
        name_indent = height / 3
        
        # ========================================
        # NAME
        COL_OUTPUT j height nWidth
        COL_OUTPUT j width height
        COL_OUTPUT j font font
        COL_OUTPUT j color "#ffffff"
        COL_OUTPUT j align "left-edge"
        COL_OUTPUT j indent name_indent
        COL_OUTPUT j font_size fontSize
        IF dir
            COL_OUTPUT j align "right-edge"
        ELSE
            COL_OUTPUT j align "left-edge"
        END IF
        j = j + 1

        # ========================================
        # AVATAR
        COL_OUTPUT j width height
        COL_OUTPUT j height height
        COL_OUTPUT j fill "#111111"
        COL_OUTPUT j image_width height
        COL_OUTPUT j image_height height
        COL_OUTPUT j x 0
        IF dir
            COL_OUTPUT j y DOUBLE (height * -1)
        ELSE
            COL_OUTPUT j y nWidth
        END IF
        j = j + 1

        # ========================================
        # DEAD INDICATOR
        COL_OUTPUT j height height
        COL_OUTPUT j width height
        COL_OUTPUT j x 0
        COL_OUTPUT j y nWidth
        COL_OUTPUT j fill "#FF000033"
        COL_OUTPUT j value "X"
        COL_OUTPUT j font "montserrat-bold"
        COL_OUTPUT j font_size dead_font_size
        COL_OUTPUT j align "center"
        COL_OUTPUT j color "#ff0000"
        IF dir
            COL_OUTPUT j y DOUBLE (height * -1)
        ELSE
            COL_OUTPUT j y nWidth
        END IF
        j = j + 1

        # ========================================
        # READY INDICATOR
        DOUBLE ready_size
        ready_size = height * 0.2

        DOUBLE half_ready_size
        half_ready_size = ready_size / 2

        DOUBLE ready_offset_x
        ready_offset_x = height - ready_size

        COL_OUTPUT j image square
        COL_OUTPUT j image_width ready_size
        COL_OUTPUT j image_height ready_size
        COL_OUTPUT j width ready_size
        COL_OUTPUT j height ready_size
        COL_OUTPUT j x ready_offset_x
        IF dir
            COL_OUTPUT j y DOUBLE (ready_size * -1)
        ELSE
            COL_OUTPUT j offset_x DOUBLE (nWidth + ready_offset_x)
        END IF
        j = j + 1

        # ========================================
        # SPECTATOR HP BAR
        COL_OUTPUT j width 1.6
        COL_OUTPUT j height nWidth
        COL_OUTPUT j image solo_hp_bar
        COL_OUTPUT j image_width nWidth
        COL_OUTPUT j image_height 1.6
        COL_OUTPUT j fill "#00000066"
        COL_OUTPUT j x DOUBLE (height + 0.4)
        j = j + 1

        # ========================================
        # SPECTATOR ARMOR BAR
        DOUBLE solo_armor_offset
        solo_armor_offset = height + 2.1

        COL_OUTPUT j width 0.4
        COL_OUTPUT j height nWidth
        COL_OUTPUT j image solo_armor_bar
        COL_OUTPUT j image_color "#ffffff"
        COL_OUTPUT j image_width nWidth
        COL_OUTPUT j image_height 0.4
        COL_OUTPUT j fill "#00000066"
        COL_OUTPUT j x solo_armor_offset
        j = j + 1
        
    END IF


    DOUBLE self_icon_size
    self_icon_size = DOUBLE (height * 0.5)
    
    DOUBLE dead_icon_size
    dead_icon_size = DOUBLE(item_image_size * 0.66)

    RASTERIZE "images/frozen.svg" item_image_size item_image_size
    RASTERIZE "images/icons/fa/caret-down.svg" self_icon_size self_icon_size
    RASTERIZE "images/icons/fa/heart.svg" lives_image_size lives_image_size
    RASTERIZE "images/icons/icon_dead.svg" dead_icon_size dead_icon_size

    RASTERIZE "images/item_macguffin.svg" item_image_size item_image_size
    RASTERIZE "images/item_macguffin.svg" small_item_image_size small_item_image_size
    RASTERIZE "images/item_flag.svg" item_image_size item_image_size
    RASTERIZE "images/item_flag.svg" small_item_image_size small_item_image_size

    # enemy_team_players[IDX].pd_powerup_image: 
    RASTERIZE "images/powerup_diabotical.svg" item_image_size item_image_size
    RASTERIZE "images/powerup_diabotical.svg" small_item_image_size small_item_image_size
    RASTERIZE "images/powerup_tripledamage.svg" item_image_size item_image_size
    RASTERIZE "images/powerup_tripledamage.svg" small_item_image_size small_item_image_size
    RASTERIZE "images/powerup_siphonator.svg" item_image_size item_image_size
    RASTERIZE "images/powerup_siphonator.svg" small_item_image_size small_item_image_size
    RASTERIZE "images/powerup_surge.svg" item_image_size item_image_size
    RASTERIZE "images/powerup_surge.svg" small_item_image_size small_item_image_size
    RASTERIZE "images/powerup_vanguard.svg" item_image_size item_image_size
    RASTERIZE "images/powerup_vanguard.svg" small_item_image_size small_item_image_size

    # solo icons
    RASTERIZE "images/diabotical_o.svg" solo_lives_image_size solo_lives_image_size
    RASTERIZE "images/diabotical_o_shield.svg" solo_lives_image_size solo_lives_image_size
    RASTERIZE "images/icons/fa/heart.svg" solo_lives_image_size solo_lives_image_size

    RASTERIZE_TEXT "xX" "montserrat-bold" dead_font_size
    RASTERIZE_TEXT "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" "roboto-bold" name_size
    RASTERIZE_TEXT "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" font fontSize
    RASTERIZE_TEXT "0123456789.:" "roboto-bold" 1.5
    RASTERIZE_TEXT "0123456789x" "roboto-bold" 1.8
ON_UPDATE

    IF enemy_team_players.count == 0
        discard
    END IF

    j = 0

    STRING avatar_url
    INT avatar_length
    avatar_length = LENGTH enemy_team_players[IDX].avatar
    IF avatar_length > 0
        avatar_url = "customization/avatar/" & enemy_team_players[IDX].avatar
        avatar_url = avatar_url & ".png"
    ELSE 
        avatar_url = "customization/avatar/av_no_avatar.png"
    END IF

    STRING ready_color
    IF enemy_team_players[IDX].ready
        ready_color = "#00ff00"
    ELSE 
        ready_color = "#ff0000"
    END IF

    DOUBLE health_clip
    DOUBLE solo_health_clip
    health_clip = -1 * DOUBLE(enemy_team_players[IDX].hp_percentage / 100)
    solo_health_clip = health_clip

    DOUBLE armor_clip
    DOUBLE solo_armor_clip
    armor_clip = -1 * DOUBLE(enemy_team_players[IDX].armor_percentage / 100)
    solo_armor_clip = armor_clip
    
    IF !dir
        solo_health_clip = solo_health_clip * -1
        solo_armor_clip = solo_armor_clip * -1
    END IF


    IF game_data.team_size > 1

        # ========================================
        # AVATAR
        OUTPUT IDX j image avatar_url
        OUTPUT IDX j fill "#111111"
        IF !enemy_team_players[IDX].alive
            OUTPUT IDX j GRAYSCALE 1
        END IF
        IF enemy_team_players[IDX].frozen
            OUTPUT IDX j GRAYSCALE 1
        END IF
        j = j + 1

        # ========================================
        # DEAD INDICATOR
        IF enemy_team_players[IDX].alive
            OUTPUT IDX j opacity 0
        END IF
        j = j + 1

        # ========================================
        # FROZEN INDICATOR
        IF game_data.game_mode == "ft"
            OUTPUT IDX j height height
            OUTPUT IDX j width height
            OUTPUT IDX j x 0
            OUTPUT IDX j fill "#2a678c99"

            OUTPUT IDX j image "images/frozen.svg"
            OUTPUT IDX j image_width item_image_size
            OUTPUT IDX j image_height item_image_size
            #OUTPUT IDX j image_color "#ffffff"

            IF !enemy_team_players[IDX].frozen
                OUTPUT IDX j opacity 0
            END IF
            j = j + 1
        END IF

        # ========================================
        # SELF INDICATOR
        IF enemy_team_players[IDX].is_self
            OUTPUT IDX j image "images/icons/fa/caret-down.svg"
        END IF
        j = j + 1

        # ========================================
        # READY INDICATOR
        OUTPUT IDX j image_color ready_color
        IF game_data.game_stage != 1
            OUTPUT IDX j opacity 0            
        END IF
        j = j + 1

        # ========================================
        # PLAYER NAME
        STRING player_name
        player_name = SUBSTR enemy_team_players[IDX].name 0 8
        OUTPUT IDX j value player_name
        IF !enemy_team_players[IDX].alive
            OUTPUT IDX j opacity 0.6
        END IF
        j = j + 1

        # ========================================
        # HEALTH BAR
        IF game_data.spectator
            OUTPUT IDX j clip_y health_clip
            OUTPUT IDX j image_color game_data.enemy_team.color
        ELSE
            OUTPUT IDX j opacity 0
        END IF
        IF !enemy_team_players[IDX].alive
            OUTPUT IDX j opacity 0
        END IF
        j = j + 1

        # ========================================
        # ARMOR BAR
        IF game_data.spectator
            OUTPUT IDX j clip_y armor_clip
        ELSE
            OUTPUT IDX j opacity 0 
        END IF
        IF !enemy_team_players[IDX].alive
            OUTPUT IDX j opacity 0
        END IF
        j = j + 1

        # ========================================
        # RESPAWN TIMER
        IF game_data.show_respawn_timers
            OUTPUT IDX j value enemy_team_players[IDX].respawn_timer
            IF enemy_team_players[IDX].alive
                OUTPUT IDX j opacity 0
            END IF
        ELSE
            OUTPUT IDX j opacity 0
        END IF
        j = j + 1

        # ========================================
        # LIVES
        INT show_lives
        show_lives = 0

        INT lives_mode
        lives_mode = 0
        IF IN_EDITOR
            lives_mode = 1
        END IF
        IF game_data.game_mode == "ca" || game_data.game_mode == "extinction"
            lives_mode = 1
        END IF
        IF game_data.game_mode == "rocket_arena" || game_data.game_mode == "shaft_arena"
            lives_mode = 1
        END IF
        IF game_data.game_mode == "bounty"
            lives_mode = 1
        END IF

        IF lives_mode && sL
            IF game_data.spectator
                lives_offset = height + 3
                lives_offset_text = height + 3.2
            ELSE
                lives_offset = height + 1.5
                lives_offset_text = height + 1.7
            END IF

            show_lives = 1
            life_count = enemy_team_players[IDX].life_count & "x"

            # ========================================
            # ARENA LIFE COUNT
            OUTPUT IDX j width small_item_size
            OUTPUT IDX j height small_item_size
            OUTPUT IDX j x lives_offset_text
            OUTPUT IDX j shadow 1
            OUTPUT IDX j font_size 1.8
            OUTPUT IDX j font "roboto-bold"
            OUTPUT IDX j value life_count
            IF enemy_team_players[IDX].life_count < 1
                OUTPUT IDX j opacity 0
            END IF
            j = j + 1

            # ========================================
            # ARENA LIFE 2
            OUTPUT IDX j image "images/icons/fa/heart.svg"
            OUTPUT IDX j width small_item_size
            OUTPUT IDX j height small_item_size
            OUTPUT IDX j image_width lives_image_size
            OUTPUT IDX j image_height lives_image_size
            OUTPUT IDX j x lives_offset
            OUTPUT IDX j offset_x small_item_size
            OUTPUT IDX j image_color game_data.enemy_team.color
            IF enemy_team_players[IDX].life_count < 1
                OUTPUT IDX j opacity 0
            END IF
            j = j + 1

            OUTPUT IDX j image "images/icons/icon_dead.svg"
            OUTPUT IDX j width DOUBLE(height * 0.7)
            OUTPUT IDX j height height
            OUTPUT IDX j image_width DOUBLE(item_image_size * 0.66)
            OUTPUT IDX j image_height DOUBLE(item_image_size * 0.66)
            OUTPUT IDX j x DOUBLE(lives_offset - 0.4)
            OUTPUT IDX j image_color "#ffffff"
            OUTPUT IDX j opacity 0
            IF enemy_team_players[IDX].life_count < 1
                OUTPUT IDX j opacity 0.5
            END IF
            j = j + 1

            ## ========================================
            ## ARENA LIFE 2
            #OUTPUT IDX j image_color game_data.enemy_team.color
            #OUTPUT IDX j image "images/icons/fa/heart.svg"
            #OUTPUT IDX j width small_item_size
            #OUTPUT IDX j height small_item_size
            #OUTPUT IDX j image_width lives_image_size
            #OUTPUT IDX j image_height lives_image_size
            #OUTPUT IDX j x lives_offset
            #IF enemy_team_players[IDX].life_count < 1
            #    OUTPUT IDX j opacity 0
            #END IF
            #j = j + 1
#
            ## ========================================
            ## ARENA LIFE 2
            #OUTPUT IDX j image "images/icons/fa/heart.svg"
            #OUTPUT IDX j width small_item_size
            #OUTPUT IDX j height small_item_size
            #OUTPUT IDX j image_width lives_image_size
            #OUTPUT IDX j image_height lives_image_size
            #OUTPUT IDX j x lives_offset
            #OUTPUT IDX j offset_x small_item_size
            #OUTPUT IDX j image_color game_data.enemy_team.color
            #IF enemy_team_players[IDX].life_count < 2
            #    OUTPUT IDX j opacity 0
            #END IF
            #j = j + 1

        END IF

        # ========================================
        # POWERUP / ITEM COMMON
        INT items
        items = 0

        IF enemy_team_players[IDX].has_macguffin
            items = items + 1
        END IF
        IF enemy_team_players[IDX].has_flag
            items = items + 1
        END IF
        IF enemy_team_players[IDX].has_powerup
            items = items + 1
        END IF

        DOUBLE item_offset_x_enemy
        item_offset_x_enemy = item_offset_x
        IF game_data.spectator
            item_offset_x_enemy = item_offset_x + 1.5
        END IF

        IF show_lives == 1
            item_offset_x_enemy = item_offset_x_enemy + small_item_size
        END IF

        # ========================================
        # MACGUFFIN
        IF enemy_team_players[IDX].has_macguffin
            OUTPUT IDX j width height
            OUTPUT IDX j height height
            OUTPUT IDX j image "images/item_macguffin.svg"
            OUTPUT IDX j image_color "#f8d206"
            OUTPUT IDX j image_width item_image_size
            OUTPUT IDX j image_height item_image_size
            OUTPUT IDX j x item_offset_x_enemy

            IF items > 1
                OUTPUT IDX j width small_item_size
                OUTPUT IDX j height small_item_size
                OUTPUT IDX j image_width small_item_image_size
                OUTPUT IDX j image_height small_item_image_size
            END IF

            IF game_data.game_mode == "extinction" || game_data.game_mode == "bounty"
                OUTPUT IDX j opacity 0
            END IF

            j = j + 1
        END IF

        # ========================================
        # FLAG
        IF enemy_team_players[IDX].has_flag
            OUTPUT IDX j width height
            OUTPUT IDX j height height
            OUTPUT IDX j image "images/item_flag.svg"
            OUTPUT IDX j hue enemy_team_players[IDX].flag_color
            OUTPUT IDX j image_width item_image_size
            OUTPUT IDX j image_height item_image_size
            OUTPUT IDX j x item_offset_x_enemy

            IF items > 1
                OUTPUT IDX j width small_item_size
                OUTPUT IDX j height small_item_size
                OUTPUT IDX j image_width small_item_image_size
                OUTPUT IDX j image_height small_item_image_size
            END IF

            j = j + 1
        END IF

        # ========================================
        # POWERUP
        DOUBLE powerup_offset_y
        IF enemy_team_players[IDX].has_powerup
            OUTPUT IDX j width height
            OUTPUT IDX j height height
            OUTPUT IDX j image enemy_team_players[IDX].pd_powerup_image
            OUTPUT IDX j image_color enemy_team_players[IDX].pd_powerup_color
            OUTPUT IDX j image_width item_image_size
            OUTPUT IDX j image_height item_image_size
            OUTPUT IDX j x item_offset_x_enemy

            IF items > 1
                OUTPUT IDX j width small_item_size
                OUTPUT IDX j height small_item_size
                OUTPUT IDX j image_width small_item_image_size
                OUTPUT IDX j image_height small_item_image_size
                OUTPUT IDX j offset_x small_item_size
            END IF

            j = j + 1
        END IF

    ELSE
        # team_size <= 1

        STRING name_bg
        name_bg = game_data.enemy_team.color & name_bg_opacity

        DOUBLE name_indent
        name_indent = height / 3

        STRING name_color_grayscale 
        name_color_grayscale = GRAYSCALE game_data.enemy_team.color

        STRINg name_color
        name_color = "#ffffff"

        IF name_color_grayscale > 0.55
            name_color = "#1c1c1c"
        END IF
        
        # ========================================
        # NAME
        OUTPUT IDX j value enemy_team_players[IDX].name
        OUTPUT IDX j fill name_bg
        OUTPUT IDX j color name_color
        j = j + 1

        # ========================================
        # AVATAR
        OUTPUT IDX j image avatar_url
        IF !enemy_team_players[IDX].alive
            IF game_data.spectator
                OUTPUT IDX j GRAYSCALE 1
            END IF
        END IF
        j = j + 1

        # ========================================
        # DEAD INDICATOR
        IF enemy_team_players[IDX].alive
            OUTPUT IDX j opacity 0
        END IF
        IF !game_data.spectator
            OUTPUT IDX j opacity 0
        END IF
        j = j + 1

        # ========================================
        # READY INDICATOR
        OUTPUT IDX j image_color ready_color
        IF game_data.game_stage != 1
            OUTPUT IDX j opacity 0
        END IF
        j = j + 1


        # ========================================
        # SPECTATOR HP BAR
        IF game_data.game_mode == "duel" && game_data.spectator
            OUTPUT IDX j image_color game_data.enemy_team.color
            OUTPUT IDX j clip_y solo_health_clip
        ELSE
            OUTPUT IDX j opacity 0
        END IF
        j = j + 1

        # ========================================
        # SPECTATOR ARMOR BAR
        IF game_data.game_mode == "duel" && game_data.spectator
            OUTPUT IDX j clip_y solo_armor_clip
        ELSE
            OUTPUT IDX j opacity 0
        END IF
        j = j + 1
        

        # ========================================
        # SOLO LIVES

        DOUBLE solo_life_offset_x
        solo_life_offset_x = solo_armor_offset + 0.6
        IF game_data.spectator
            solo_life_offset_x = solo_armor_offset + 0.6
        ELSE
            solo_life_offset_x = height + 0.4
        END IF

        DOUBLE solo_main_life_offset_y
        solo_main_life_offset_y = nWidth - small_item_size
        IF dir
            solo_main_life_offset_y = 0
        END IF
        
        lives_mode = 0
        IF game_data.game_mode == "ca"
            lives_mode = 1
        END IF
        IF game_data.game_mode == "rocket_arena" || game_data.game_mode == "shaft_arena"
            lives_mode = 1
        END IF

        IF lives_mode && sL

            # ========================================
            # ARENA LIFE 2
            OUTPUT IDX j image_color game_data.enemy_team.color
            OUTPUT IDX j image "images/icons/fa/heart.svg"
            OUTPUT IDX j width small_item_size
            OUTPUT IDX j height small_item_size
            OUTPUT IDX j image_width solo_lives_image_size
            OUTPUT IDX j image_height solo_lives_image_size
            OUTPUT IDX j x solo_life_offset_x
            OUTPUT IDX j y solo_main_life_offset_y
            IF enemy_team_players[IDX].life_count < 1
                OUTPUT IDX j opacity 0
            END IF
            j = j + 1

            # ========================================
            # ARENA LIFE 2
            IF dir
                solo_main_life_offset_y = solo_main_life_offset_y + DOUBLE (solo_lives_image_size + 0.4)
            ELSE
                solo_main_life_offset_y = solo_main_life_offset_y - DOUBLE (solo_lives_image_size + 0.4)
            END IF
            OUTPUT IDX j image_color game_data.enemy_team.color
            OUTPUT IDX j image "images/icons/fa/heart.svg"
            OUTPUT IDX j width small_item_size
            OUTPUT IDX j height small_item_size
            OUTPUT IDX j image_width solo_lives_image_size
            OUTPUT IDX j image_height solo_lives_image_size
            OUTPUT IDX j x solo_life_offset_x
            OUTPUT IDX j y solo_main_life_offset_y
            IF enemy_team_players[IDX].life_count < 2
                OUTPUT IDX j opacity 0
            END IF
            j = j + 1

        END IF

        IF game_data.game_mode == "duel" && sL
            # ========================================
            # MAIN LIFE

            OUTPUT IDX j width small_item_size
            OUTPUT IDX j height small_item_size
            OUTPUT IDX j image_width solo_lives_image_size
            OUTPUT IDX j image_height solo_lives_image_size
            OUTPUT IDX j x solo_life_offset_x
            OUTPUT IDX j y solo_main_life_offset_y

            IF game_data.is_golden_frag
                OUTPUT IDX j image "images/diabotical_o.svg"
                OUTPUT IDX j image_color game_data.enemy_team.color
            ELSE
                OUTPUT IDX j image "images/diabotical_o_shield.svg"
                OUTPUT IDX j hue game_data.enemy_team.color_dark
            END IF
            j = j + 1

            # ========================================
            # DUEL LIVES
            INT lives
            IF game_data.enemy_team.team_score > game_data.own_team.team_score
                lives = game_data.enemy_team.team_score - game_data.own_team.team_score
            ELSE 
                lives = 0
            END IF
            
            INT current_life
            current_life = 0

            DOUBLE current_life_offset_y
            IF dir
                current_life_offset_y = small_item_size + 0.2
            ELSE
                current_life_offset_y = nWidth - small_item_size
                current_life_offset_y = current_life_offset_y - DOUBLE (small_item_size + 0.2)
            END IF

            IF lives > 5

                OUTPUT IDX j width small_item_size
                OUTPUT IDX j height small_item_size
                OUTPUT IDX j image_width solo_lives_image_size
                OUTPUT IDX j image_height solo_lives_image_size
                OUTPUT IDX j image "images/icons/fa/heart.svg"
                OUTPUT IDX j image_color game_data.enemy_team.color
                OUTPUT IDX j x solo_life_offset_x
                OUTPUT IDX j y current_life_offset_y
                j = j + 1

                DOUBLE live_count_offset_y
                IF dir
                    live_count_offset_y = small_item_size * 2
                    live_count_offset_y = live_count_offset_y + 0.6
                    OUTPUT IDX j align "left-edge"
                ELSE
                    OUTPUT IDX j align "right-edge"
                    live_count_offset_y = 0 - DOUBLE(small_item_size * 2)
                    live_count_offset_y = live_count_offset_y - 0.6
                END IF
                STRING live_count_string
                live_count_string = lives & "x"

                OUTPUT IDX j x solo_life_offset_x
                OUTPUT IDX j y live_count_offset_y
                OUTPUT IDX j width small_item_size
                
                OUTPUT IDX j font "roboto-bold"
                OUTPUT IDX j font_size DOUBLE (solo_lives_image_size / 1.5)
                OUTPUT IDX j color "#ffffff"
                OUTPUT IDX j shadow 1
                OUTPUT IDX j value live_count_string
                j = j + 1

            ELSE 
                FOR lives

                    current_life = current_life + 1

                    OUTPUT IDX j width small_item_size
                    OUTPUT IDX j height small_item_size
                    OUTPUT IDX j image_width solo_lives_image_size
                    OUTPUT IDX j image_height solo_lives_image_size
                    OUTPUT IDX j image "images/icons/fa/heart.svg"
                    OUTPUT IDX j image_color game_data.enemy_team.color
                    OUTPUT IDX j x solo_life_offset_x
                    OUTPUT IDX j y current_life_offset_y

                    IF dir
                        current_life_offset_y = current_life_offset_y + DOUBLE (small_item_size + 0.2)
                    ELSE
                        current_life_offset_y = current_life_offset_y - DOUBLE (small_item_size + 0.2)
                    END IF
                    j = j + 1

                END FOR
            END IF
        END IF

    END IF

END TEMPLATE
BEGIN TEMPLATE flag
    SETTING align pivot
    DOUBLE size
    DOUBLE bRadius
    DOUBLE cCode
    INT hide_dead

    STRING bg_svg
    bg_svg = "<svg "
    bg_svg = bg_svg & " width='" & size & "'"
    bg_svg = bg_svg & " height='" & size & "'"
    bg_svg = bg_svg & " viewBox='" & 0
    bg_svg = bg_svg & " " & 0
    bg_svg = bg_svg & " " & size
    bg_svg = bg_svg & " " & size & "'>"
    bg_svg = bg_svg & "<rect "
    bg_svg = bg_svg & " width='" & size & "' "
    bg_svg = bg_svg & " height='" & size & "' "
    bg_svg = bg_svg & " rx='" & bRadius & "' "
    bg_svg = bg_svg & " fill='#ffffff' "
    bg_svg = bg_svg & " stroke-width='0' "
    bg_svg = bg_svg & " y='" & 0 & "' "
    bg_svg = bg_svg & " x='" & 0 & "' "
    bg_svg = bg_svg & "/></svg>"

    INT own_team
    IF team == "own"
        own_team = 1
    END IF

    DOUBLE image_size
    image_size = size * 0.8

    COL_OUTPUT 0 image bg_svg
    COL_OUTPUT 0 image_color bgC
    COL_OUTPUT 0 image_width size
    COL_OUTPUT 0 image_height size
    COL_OUTPUT 0 width size
    COL_OUTPUT 0 height size

    COL_OUTPUT 1 image_height image_size
    COL_OUTPUT 1 image_width image_size
    COL_OUTPUT 1 width size
    COL_OUTPUT 1 height size
    COL_OUTPUT 1 x 0
    COL_OUTPUT 1 y 0

    INT hide_when_dead
    IF hide_dead
        hide_when_dead = 1
    END IF

    RASTERIZE "images/item_flag.svg" image_size image_size
    RASTERIZE "images/icons/fa/times.svg" image_size image_size
    RASTERIZE "images/icons/fa/question.svg" image_size image_size

ON_UPDATE

    IF game_data.game_mode != "ctf" && !IN_EDITOR
        discard
    END IF

    IF hide_when_dead == 1 && common_game_data.self_alive == "false"
        discard
    END IF

    STRING icon_color
    STRING icon_image

    STRING own_icon_color
    STRING own_icon_image
    STRING enemy_icon_color
    STRING enemy_icon_image

    STRING flag_color
    STRING bg_color

    STRING times_color
    times_color = "EE3015"

    STRING question_color
    question_color = "EEEEEE"

    IF own_team
        flag_color = game_data.own_team.color
    ELSE
        flag_color = game_data.enemy_team.color
    END IF

    INT own_flag_state 
    own_flag_state = game_data.own_team.team_flag_state
    IF own_flag_state == 0
        own_icon_image = "images/item_flag.svg"
        own_icon_color = flag_color
    END IF
    IF own_flag_state == 1
        own_icon_image = "images/icons/fa/times.svg"
        own_icon_color = times_color
    END IF
    IF own_flag_state == 2
        own_icon_image = "images/icons/fa/question.svg"
        own_icon_color = question_color
    END IF

    INT enemy_flag_state 
    enemy_flag_state = game_data.enemy_team.team_flag_state
    IF enemy_flag_state == 0
        enemy_icon_image = "images/item_flag.svg"
        enemy_icon_color = flag_color
    END IF
    IF enemy_flag_state == 1
        enemy_icon_image = "images/icons/fa/times.svg"
        enemy_icon_color = times_color
    END IF
    IF enemy_flag_state == 2
        enemy_icon_image = "images/icons/fa/question.svg"
        enemy_icon_color = question_color
    END IF

    IF own_team
        icon_image = own_icon_image
        icon_color = own_icon_color
    ELSE
        icon_image = enemy_icon_image
        icon_color = enemy_icon_color
    END IF

    OUTPUT 0 1 image icon_image
    OUTPUT 0 1 hue icon_color
    OUTPUT 0 1 align "center"
    
    
END TEMPLATE
BEGIN TEMPLATE game_timer
    SETTING align pivot

    INT countdown
    INT shadow

    COL_OUTPUT 0 color color
    COL_OUTPUT 0 font font
    COL_OUTPUT 0 align pivot
    IF shadow
        COL_OUTPUT 0 shadow 1
    END IF

    RASTERIZE_TEXT "0123456789:" font fontSize
ON_UPDATE

    INT time_left
    time_left = game_data.time_limit + game_data.overtime_seconds
    time_left = time_left + game_data.tide_time_offset
    time_left = time_left - game_data.time
    time_left = MAX 0 time_left

    # Switch to count up if no time_limit is set, otherwise it would stay at 0
    IF game_data.time_limit == 0
        countdown = 0
    END IF

    STRING game_time
    IF countdown
        game_time = TIMESTAMP time_left
    ELSE
        game_time = TIMESTAMP game_data.time
    END IF

    IF game_data.warmup
        OUTPUT 0 0 value "00:00"
    ELSE
        OUTPUT 0 0 value game_time
    END IF

END TEMPLATE
BEGIN TEMPLATE hint
    SETTING align pivot

    DOUBLE icon_size
    icon_size = fontSize * 1.5

    DOUBLE gap_size
    gap_size = fontSize * 0.5

    COL_OUTPUT 0 font font
    COL_OUTPUT 0 align pivot
    COL_OUTPUT 0 shadow 1
    COL_OUTPUT 0 height icon_size

    COL_OUTPUT 1 width gap_size

    COL_OUTPUT 2 width icon_size
    COL_OUTPUT 2 height icon_size
    COL_OUTPUT 2 image_width icon_size
    COL_OUTPUT 2 image_height icon_size

    STRING hint
    STRING hint_key

    RASTERIZE "images/icons/poi_a.svg" icon_size icon_size
    RASTERIZE "images/icons/poi_b.svg" icon_size icon_size
    RASTERIZE "images/item_macguffin.svg" icon_size icon_size

    RASTERIZE_TEXT "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" font fontSize
ON_UPDATE

    STRING text_color
    text_color = "#ffffff"

    IF IN_EDITOR
        OUTPUT 0 0 LVALUE "hint_mg_pickup"
        LOCALIZE 0 0
    ELSE
        INT show
        show = 0
    
        hint = ""
        hint_key = ""

        IF game_data.game_mode == "macguffin" 
            show = 1
            IF game_data.hint == ""
                show = 0
            END IF 

            hint = "hint_" & game_data.hint
            hint_key = game_data.hint_key
        END IF
        IF game_data.game_mode == "survival" 
            show = 1
            IF game_data.hint == ""
                show = 0
            END IF 

            hint = "hint_" & game_data.hint
            hint_key = game_data.hint_key
        END IF
        IF game_data.game_mode == "race"
            show = 1
            IF battle_data.race_state == 0
                show = 0
            END IF

            IF battle_data.race_state > 0
                hint = "hint_race_restart"
                hint_key = battle_data.restart_key                
            END IF

            IF battle_data.race_state == 2
                text_color = "#ffff00"
            END IF

            IF rr == 0
                show = 0
            END IF
        END IF

        IF !show
            discard
        END IF

        INT hint_length
        hint_length = LENGTH hint

        IF hint_length == 0
            discard
        END IF

        OUTPUT 0 0 color text_color
        OUTPUT 0 0 LVALUE hint
        OUTPUT 0 0 VALUE hint_key
        LOCALIZE 0 0

        OUTPUT 0 2 image game_data.hint_image 
        IF game_data.hint_image == "images/item_macguffin.svg"
            OUTPUT 0 2 image_color game_data.hint_team_color
        ELSE
            OUTPUT 0 2 hue game_data.hint_team_color
        END IF
    END IF

END TEMPLATE
BEGIN TEMPLATE hook
    SETTING cell_direction "vertical"
    SETTING align pivot

    DOUBLE iSize
    DOUBLE bRadius
    DOUBLE cCode
    DOUBLE bWidth
    INT flip
    INT name
    INT keybind
    INT iShadow

    DOUBLE double_bWidth
    double_bWidth = 2 * bWidth

    DOUBLE half_bWidth
    half_bWidth = bWidth / 2

    DOUBLE bg_size
    bg_size = iSize - double_bWidth

    DOUBLE bg_radius
    bg_radius = bWidth / 2
    bg_radius = bRadius - bg_radius 
    bg_radius = CLAMP bg_radius 0 100

    STRING bg_svg
    bg_svg = "<svg "
    bg_svg = bg_svg & " width='" & iSize & "'"
    bg_svg = bg_svg & " height='" & iSize & "'"
    bg_svg = bg_svg & " viewBox='" & 0
    bg_svg = bg_svg & " " & 0
    bg_svg = bg_svg & " " & iSize
    bg_svg = bg_svg & " " & iSize & "'>"
    bg_svg = bg_svg & "<rect "
    bg_svg = bg_svg & " width='" & bg_size & "' "
    bg_svg = bg_svg & " height='" & bg_size & "' "
    bg_svg = bg_svg & " rx='" & bg_radius & "' "
    bg_svg = bg_svg & " fill='#ffffff' "
    bg_svg = bg_svg & " stroke-width='0' "
    bg_svg = bg_svg & " y='" & bWidth & "' "
    bg_svg = bg_svg & " x='" & bWidth & "' "
    bg_svg = bg_svg & "/></svg>"

    DOUBLE border_offset
    border_offset = bWidth / 2
    border_offset = border_offset * -1
    DOUBLE border_size
    border_size = iSize + bWidth

    DOUBLE border_size
    border_size = iSize - bWidth

    STRING border_svg 
    border_svg = "<svg "
    border_svg = border_svg & " width='" & iSize & "'"
    border_svg = border_svg & " height='" & iSize & "'"
    border_svg = border_svg & " viewBox='" & 0
    border_svg = border_svg & " " & 0
    border_svg = border_svg & " " & iSize
    border_svg = border_svg & " " & iSize & "'>"
    border_svg = border_svg & "<rect "
    border_svg = border_svg & " width='" & border_size & "' "
    border_svg = border_svg & " height='" & border_size & "' "
    border_svg = border_svg & " rx='" & bRadius & "' "
    border_svg = border_svg & " fill-opacity='0' "
    border_svg = border_svg & " stroke='#ffffff' "
    border_svg = border_svg & " stroke-width='" & bWidth & "' "
    border_svg = border_svg & " y='" & half_bWidth & "' "
    border_svg = border_svg & " x='" & half_bWidth & "' "
    border_svg = border_svg & "/></svg>"

    DOUBLE d_bg_tmp
    d_bg_tmp = iSize * 0.075

    DOUBLE d_bg_offset 
    d_bg_offset = d_bg_tmp * -1

    DOUBLE d_bg_size
    d_bg_size = iSize + d_bg_tmp
    d_bg_size = d_bg_size + d_bg_tmp

    STRING default_bg
    default_bg = "<svg "
    default_bg = default_bg & " width='" & iSize & "'"
    default_bg = default_bg & " height='" & iSize & "'"
    default_bg = default_bg & " viewBox='" & d_bg_offset
    default_bg = default_bg & " " & d_bg_offset
    default_bg = default_bg & " " & d_bg_size
    default_bg = default_bg & " " & d_bg_size & "'>"
    default_bg = default_bg & "<rect "
    default_bg = default_bg & " width='" & iSize & "' "
    default_bg = default_bg & " height='" & iSize & "' "
    default_bg = default_bg & " rx='" & bRadius & "' "
    default_bg = default_bg & " fill='#ffffff' "
    default_bg = default_bg & " stroke-width='0' "
    default_bg = default_bg & " y='0' "
    default_bg = default_bg & " x='0' "
    default_bg = default_bg & "/></svg>"

    DOUBLE d1_b_width
    d1_b_width = iSize * 0.03

    DOUBLE half_d1_b_width
    half_d1_b_width = d1_b_width / 2

    DOUBLE d1_border_size
    d1_border_size = iSize - d1_b_width

    STRING default_b_1 
    default_b_1 = "<svg "
    default_b_1 = default_b_1 & " width='" & iSize & "'"
    default_b_1 = default_b_1 & " height='" & iSize & "'"
    default_b_1 = default_b_1 & " viewBox='" & 0
    default_b_1 = default_b_1 & " " & 0
    default_b_1 = default_b_1 & " " & iSize
    default_b_1 = default_b_1 & " " & iSize & "'>"
    default_b_1 = default_b_1 & "<rect "
    default_b_1 = default_b_1 & " width='" & d1_border_size & "' "
    default_b_1 = default_b_1 & " height='" & d1_border_size & "' "
    default_b_1 = default_b_1 & " rx='" & bRadius & "' "
    default_b_1 = default_b_1 & " fill-opacity='0' "
    default_b_1 = default_b_1 & " stroke='#ffffff' "
    default_b_1 = default_b_1 & " stroke-width='" & d1_b_width & "' "
    default_b_1 = default_b_1 & " y='" & half_d1_b_width & "' "
    default_b_1 = default_b_1 & " x='" & half_d1_b_width & "' "
    default_b_1 = default_b_1 & "/></svg>"

    DOUBLE d2_gap
    d2_gap = 0.2

    DOUBLE d2_b_width
    d2_b_width = iSize * 0.055

    DOUBLE half_d2_b_width
    half_d2_b_width = d2_b_width / 2

    DOUBLE d2_size 
    d2_size = iSize - d1_b_width
    d2_size = d2_size - d1_b_width
    d2_size = d2_size - d2_b_width
    d2_size = d2_size - d2_gap
    d2_size = d2_size - d2_gap

    DOUBLE d2_inset
    d2_inset = half_d2_b_width + d1_b_width
    d2_inset = d2_inset + d2_gap
    
    DOUBLE d2_radius
    d2_radius = bRadius - d2_gap
    d2_radius = d2_radius - half_d2_b_width
    d2_radius = d2_radius - half_d1_b_width
    d2_radius = CLAMP d2_radius 0 100

    STRING default_b_2 
    default_b_2 = "<svg "
    default_b_2 = default_b_2 & " width='" & iSize & "'"
    default_b_2 = default_b_2 & " height='" & iSize & "'"
    default_b_2 = default_b_2 & " viewBox='" & 0
    default_b_2 = default_b_2 & " " & 0
    default_b_2 = default_b_2 & " " & iSize
    default_b_2 = default_b_2 & " " & iSize & "'>"
    default_b_2 = default_b_2 & "<rect "
    default_b_2 = default_b_2 & " width='" & d2_size & "' "
    default_b_2 = default_b_2 & " height='" & d2_size & "' "
    default_b_2 = default_b_2 & " rx='" & d2_radius & "' "
    default_b_2 = default_b_2 & " fill-opacity='0' "
    default_b_2 = default_b_2 & " stroke='#ffffff' "
    default_b_2 = default_b_2 & " stroke-width='" & d2_b_width & "' "
    default_b_2 = default_b_2 & " y='" & d2_inset & "' "
    default_b_2 = default_b_2 & " x='" & d2_inset & "' "
    default_b_2 = default_b_2 & "/></svg>"

    COL_OUTPUT 0 image default_bg
    COL_OUTPUT 0 image_width iSize
    COL_OUTPUT 0 image_height iSize
    COL_OUTPUT 0 image_color bgC
    COL_OUTPUT 0 width iSize
    COL_OUTPUT 0 height iSize

    COL_OUTPUT 1 image default_b_1
    COL_OUTPUT 1 image_width iSize
    COL_OUTPUT 1 image_height iSize
    COL_OUTPUT 1 image_color "#ffffff45"
    COL_OUTPUT 1 width iSize
    COL_OUTPUT 1 height iSize
    COL_OUTPUT 1 x 0
    COL_OUTPUT 1 y 0

    COL_OUTPUT 2 image default_b_2
    COL_OUTPUT 2 image_width iSize
    COL_OUTPUT 2 image_height iSize
    COL_OUTPUT 2 image_color "#00ffff"
    COL_OUTPUT 2 width iSize
    COL_OUTPUT 2 height iSize
    COL_OUTPUT 2 x 0
    COL_OUTPUT 2 y 0

    DOUBLE icon_size
    icon_size = iSize * 0.6

    COL_OUTPUT 3 image_width icon_size
    COL_OUTPUT 3 image_height icon_size
    COL_OUTPUT 3 image_color "#000000"
    COL_OUTPUT 3 width iSize
    COL_OUTPUT 3 height iSize
    COL_OUTPUT 3 align "center"
    COL_OUTPUT 3 x 0
    COL_OUTPUT 3 y 0

    # COUNTDOWN
    DOUBLE fontsize 
    fontsize = iSize * 0.4

    DOUBLE countdown_offset_x
    countdown_offset_x = iSize / 2
    countdown_offset_x = countdown_offset_x - DOUBLE (fontsize / 2)
    
    COL_OUTPUT 4 font font
    COL_OUTPUT 4 font_size fontsize
    COL_OUTPUT 4 shadow 1
    COL_OUTPUT 4 x countdown_offset_x
    COL_OUTPUT 4 y 0
    COL_OUTPUT 4 align "center"

    # ITEM NAME
    IF name
        DOUBLE name_x
        name_x = iSize + 0.8
        IF flip
            name_x = -1.6
        END IF
        COL_OUTPUT 5 font "roboto-bold"
        COL_OUTPUT 5 font_size 1.3
        COL_OUTPUT 5 opacity 0.8
        COL_OUTPUT 5 color "#ffffff"
        COL_OUTPUT 5 shadow 1
        COL_OUTPUT 5 align "top-edge"
        COL_OUTPUT 5 uppercase 1
        COL_OUTPUT 5 x name_x
        COL_OUTPUT 5 y 0
    END IF

    # KEY BIND
    INT show_keybind
    IF keybind
        DOUBLE keybind_x
        DOUBLE keybind_y
        keybind_x = iSize + 1
        keybind_y = iSize / 2
        keybind_y = keybind_y - 1.5
        IF name
            keybind_x = iSize + 2.5
        END IF

        IF flip
            keybind_x = -3
            IF name
                keybind_x = -4.2
            END IF
        END IF

        show_keybind = 1
        COL_OUTPUT 6 font_size 1.2
        COL_OUTPUT 6 font "roboto-bold"
        COL_OUTPUT 6 align "center"
        COL_OUTPUT 6 width 2
        COL_OUTPUT 6 height 3
        COL_OUTPUT 6 color "1a1a1a"
        COL_OUTPUT 6 x keybind_x
        COL_OUTPUT 6 y keybind_y
        COL_OUTPUT 6 fill "#ffffff55"
        COL_OUTPUT 6 border_radius 0.3
    END IF

    RASTERIZE_TEXT "0123456789" font fontsize
    RASTERIZE_TEXT "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ" "roboto-bold" 1.3
    RASTERIZE_TEXT "ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" "roboto-bold" 1.2
ON_UPDATE

    IF !battle_data.hook_enabled && !IN_EDITOR
        discard
    END IF

    IF !common_game_data.self_alive
        discard
    END IF

    OUTPUT 0 2 image_color mC

    #IF battle_data.hook_state > 0
    #    OUTPUT 0 3 opacity 0.3
    #    #OUTPUT 0 4 opacity 1
    #    #OUTPUT 0 4 value frame_data.item_cooldown
    #ELSE
    #    OUTPUT 0 3 opacity 1
    #    #OUTPUT 0 4 opacity 0
    #    #OUTPUT 0 4 value ""
    #END IF

    OUTPUT 0 3 image "images/item_hook.svg"
    OUTPUT 0 3 image_color iC

    IF name
        OUTPUT 0 5 lvalue "weapon_hook"
        LOCALIZE 0 5
    END IF
    IF show_keybind
        OUTPUT 0 6 value battle_data.hook_key
    END IF

END TEMPLATE
BEGIN TEMPLATE hp
    SETTING align pivot
    DOUBLE threshold
    INT scaleOnPickup
    INT shadow

    COL_OUTPUT 0 font font
    COL_OUTPUT 0 align pivot
    IF shadow 
        COL_OUTPUT 0 shadow 1
    END IF

    RASTERIZE_TEXT "0123456789" font fontSize
ON_UPDATE

    STRING main_color
    main_color = color
    IF battle_data.self.hp <= threshold
        main_color = thresholdColor
    END IF
    
    IF !common_game_data.self_alive
        discard
    END IF

    OUTPUT 0 0 value battle_data.self.hp
    OUTPUT 0 0 color main_color

END TEMPLATE

BEGIN TEMPLATE hp_bar
    SETTING align pivot
    SETTING cell_direction "horizontal"
    DOUBLE segments
    DOUBLE gap
    DOUBLE threshold
    INT rightToLeft
    INT boxShadow
    DOUBLE bRadius
    DOUBLE cCode
    DOUBLE skewX
    DOUBLE skewY

    INT gaps
    gaps = segments - 1

    DOUBLE gap_size
    gap_size = gap / 10

    DOUBLE total_gaps_width
    total_gaps_width = gaps * gap_size

    DOUBLE total_segments_width
    total_segments_width = width - total_gaps_width

    DOUBLE segment_width
    segment_width = total_segments_width / segments

    DOUBLE segment_perc
    segment_perc = segment_width / width

    DOUBLE total_segments_perc
    total_segments_perc = total_segments_width / width

    DOUBLE gap_perc
    gap_perc = gap_size / width

    DOUBLE nogap_segment_perc
    nogap_segment_perc = 1 / segments

    INT fill_dir
    IF rightToLeft
        fill_dir = 1
    END IF

    STRING svg
    DOUBLE n    

    svg = "<svg "
    svg = svg & " width='" & width & "'"
    svg = svg & " height='" & height & "'"
    svg = svg & " viewBox='0 0 " & width
    svg = svg & " " & height & "'"
    svg = svg & ">"

    FOR segments
        svg = svg & "<rect "
        svg = svg & " width='" & segment_width & "' "
        svg = svg & " height='" & height & "' "
        svg = svg & " rx='" & bRadius & "' "
        svg = svg & " fill='#ffffff' "
        svg = svg & " y='0' "
        svg = svg & " x='" & n & "'"
        svg = svg & "/>"

        n = n + segment_width
        n = n + gap_size
    END FOR

    svg = svg & "</svg>"
    
    COL_OUTPUT 0 image svg
    COL_OUTPUT 0 image_width width
    COL_OUTPUT 0 image_height height
    COL_OUTPUT 0 width width
    COL_OUTPUT 0 height height
    COL_OUTPUT 0 image_color bC

    COL_OUTPUT 1 image svg
    COL_OUTPUT 1 image_width width
    COL_OUTPUT 1 image_height height
    COL_OUTPUT 1 width width
    COL_OUTPUT 1 height height

    COL_OUTPUT 1 x 0
    COL_OUTPUT 1 y 0

ON_UPDATE

    IF !common_game_data.self_alive
        discard
    END IF

    # Clip percent
    DOUBLE hp_perc
    hp_perc = battle_data.self.hp_percentage / 100
    hp_perc = CLAMP hp_perc 0 1

    DOUBLE segment_only_perc
    segment_only_perc = total_segments_perc * hp_perc

    INT live_segments
    live_segments = hp_perc / nogap_segment_perc
    live_segments = live_segments + 1

    INT live_gaps
    live_gaps = hp_perc / nogap_segment_perc
    
    DOUBLE tmp
    tmp = hp_perc % nogap_segment_perc

    INT bleh
    bleh = 0
    IF tmp == 0
        bleh = bleh + 1
    END IF
    IF live_segments > segments
        bleh = bleh + 1
    END IF
    IF bleh > 0
        live_gaps = live_gaps - 1
    END IF
    
    DOUBLE clip_perc
    clip_perc = live_gaps * gap_perc
    clip_perc = clip_perc + segment_only_perc

    IF !fill_dir
        clip_perc = clip_perc * -1
    END IF

    IF hp_perc == 0
        OUTPUT 0 1 clip_x 0
    ELSE
        OUTPUT 0 1 clip_x clip_perc
    END IF

    # Color
    STRING bar_color
    bar_color = color
    IF battle_data.self.hp <= threshold
        bar_color = thresholdColor
    END IF

    OUTPUT 0 1 image_color bar_color


END TEMPLATE


BEGIN TEMPLATE icon
    SETTING align pivot
    DOUBLE stroke_width
    INT iconShadow
    INT hide_dead

    STRING image_url
    image_url = "images/hud_icon_" & icon
    image_url = image_url & ".svg"

    DOUBLE img_width
    DOUBLE img_height
    img_width = width
    img_height = height
    IF width > height
        img_width = height
    ELSE
        img_height = width
    END IF

    COL_OUTPUT 0 image image_url
    COL_OUTPUT 0 image_width img_width
    COL_OUTPUT 0 image_height img_height
    COL_OUTPUT 0 width width
    COL_OUTPUT 0 height height
    COL_OUTPUT 0 image_color fill

    INT hide_when_dead
    IF hide_dead
        hide_when_dead = 1
    END IF

ON_UPDATE

    IF hide_when_dead == 1 && common_game_data.self_alive == "false"
        discard
    END IF

END TEMPLATE
BEGIN TEMPLATE item
    SETTING cell_direction "vertical"
    SETTING align pivot

    DOUBLE iSize
    DOUBLE bRadius
    DOUBLE cCode
    DOUBLE bWidth
    INT flip
    INT name
    INT keybind
    INT iShadow
    INT cP

    DOUBLE double_bWidth
    double_bWidth = 2 * bWidth

    DOUBLE half_bWidth
    half_bWidth = bWidth / 2

    DOUBLE bg_size
    bg_size = iSize - double_bWidth

    DOUBLE bg_radius
    bg_radius = bWidth / 2
    bg_radius = bRadius - bg_radius 
    bg_radius = CLAMP bg_radius 0 100

    STRING bg_svg
    bg_svg = "<svg "
    bg_svg = bg_svg & " width='" & iSize & "'"
    bg_svg = bg_svg & " height='" & iSize & "'"
    bg_svg = bg_svg & " viewBox='" & 0
    bg_svg = bg_svg & " " & 0
    bg_svg = bg_svg & " " & iSize
    bg_svg = bg_svg & " " & iSize & "'>"
    bg_svg = bg_svg & "<rect "
    bg_svg = bg_svg & " width='" & bg_size & "' "
    bg_svg = bg_svg & " height='" & bg_size & "' "
    bg_svg = bg_svg & " rx='" & bg_radius & "' "
    bg_svg = bg_svg & " fill='#ffffff' "
    bg_svg = bg_svg & " stroke-width='0' "
    bg_svg = bg_svg & " y='" & bWidth & "' "
    bg_svg = bg_svg & " x='" & bWidth & "' "
    bg_svg = bg_svg & "/></svg>"

    DOUBLE border_offset
    border_offset = bWidth / 2
    border_offset = border_offset * -1
    DOUBLE border_size
    border_size = iSize + bWidth

    DOUBLE border_size
    border_size = iSize - bWidth

    STRING border_svg 
    border_svg = "<svg "
    border_svg = border_svg & " width='" & iSize & "'"
    border_svg = border_svg & " height='" & iSize & "'"
    border_svg = border_svg & " viewBox='" & 0
    border_svg = border_svg & " " & 0
    border_svg = border_svg & " " & iSize
    border_svg = border_svg & " " & iSize & "'>"
    border_svg = border_svg & "<rect "
    border_svg = border_svg & " width='" & border_size & "' "
    border_svg = border_svg & " height='" & border_size & "' "
    border_svg = border_svg & " rx='" & bRadius & "' "
    border_svg = border_svg & " fill-opacity='0' "
    border_svg = border_svg & " stroke='#ffffff' "
    border_svg = border_svg & " stroke-width='" & bWidth & "' "
    border_svg = border_svg & " y='" & half_bWidth & "' "
    border_svg = border_svg & " x='" & half_bWidth & "' "
    border_svg = border_svg & "/></svg>"

    DOUBLE d_bg_tmp
    d_bg_tmp = iSize * 0.075

    DOUBLE d_bg_offset 
    d_bg_offset = d_bg_tmp * -1

    DOUBLE d_bg_size
    d_bg_size = iSize + d_bg_tmp
    d_bg_size = d_bg_size + d_bg_tmp

    STRING default_bg
    default_bg = "<svg "
    default_bg = default_bg & " width='" & iSize & "'"
    default_bg = default_bg & " height='" & iSize & "'"
    default_bg = default_bg & " viewBox='" & d_bg_offset
    default_bg = default_bg & " " & d_bg_offset
    default_bg = default_bg & " " & d_bg_size
    default_bg = default_bg & " " & d_bg_size & "'>"
    default_bg = default_bg & "<rect "
    default_bg = default_bg & " width='" & iSize & "' "
    default_bg = default_bg & " height='" & iSize & "' "
    default_bg = default_bg & " rx='" & bRadius & "' "
    default_bg = default_bg & " fill='#ffffff' "
    default_bg = default_bg & " stroke-width='0' "
    default_bg = default_bg & " y='0' "
    default_bg = default_bg & " x='0' "
    default_bg = default_bg & "/></svg>"

    DOUBLE d1_b_width
    d1_b_width = iSize * 0.03

    DOUBLE half_d1_b_width
    half_d1_b_width = d1_b_width / 2

    DOUBLE d1_border_size
    d1_border_size = iSize - d1_b_width

    STRING default_b_1 
    default_b_1 = "<svg "
    default_b_1 = default_b_1 & " width='" & iSize & "'"
    default_b_1 = default_b_1 & " height='" & iSize & "'"
    default_b_1 = default_b_1 & " viewBox='" & 0
    default_b_1 = default_b_1 & " " & 0
    default_b_1 = default_b_1 & " " & iSize
    default_b_1 = default_b_1 & " " & iSize & "'>"
    default_b_1 = default_b_1 & "<rect "
    default_b_1 = default_b_1 & " width='" & d1_border_size & "' "
    default_b_1 = default_b_1 & " height='" & d1_border_size & "' "
    default_b_1 = default_b_1 & " rx='" & bRadius & "' "
    default_b_1 = default_b_1 & " fill-opacity='0' "
    default_b_1 = default_b_1 & " stroke='#ffffff' "
    default_b_1 = default_b_1 & " stroke-width='" & d1_b_width & "' "
    default_b_1 = default_b_1 & " y='" & half_d1_b_width & "' "
    default_b_1 = default_b_1 & " x='" & half_d1_b_width & "' "
    default_b_1 = default_b_1 & "/></svg>"

    DOUBLE d2_gap
    d2_gap = 0.2

    DOUBLE d2_b_width
    d2_b_width = iSize * 0.055

    DOUBLE half_d2_b_width
    half_d2_b_width = d2_b_width / 2

    DOUBLE d2_size 
    d2_size = iSize - d1_b_width
    d2_size = d2_size - d1_b_width
    d2_size = d2_size - d2_b_width
    d2_size = d2_size - d2_gap
    d2_size = d2_size - d2_gap

    DOUBLE d2_inset
    d2_inset = half_d2_b_width + d1_b_width
    d2_inset = d2_inset + d2_gap
    
    DOUBLE d2_radius
    d2_radius = bRadius - d2_gap
    d2_radius = d2_radius - half_d2_b_width
    d2_radius = d2_radius - half_d1_b_width
    d2_radius = CLAMP d2_radius 0 100

    STRING default_b_2 
    default_b_2 = "<svg "
    default_b_2 = default_b_2 & " width='" & iSize & "'"
    default_b_2 = default_b_2 & " height='" & iSize & "'"
    default_b_2 = default_b_2 & " viewBox='" & 0
    default_b_2 = default_b_2 & " " & 0
    default_b_2 = default_b_2 & " " & iSize
    default_b_2 = default_b_2 & " " & iSize & "'>"
    default_b_2 = default_b_2 & "<rect "
    default_b_2 = default_b_2 & " width='" & d2_size & "' "
    default_b_2 = default_b_2 & " height='" & d2_size & "' "
    default_b_2 = default_b_2 & " rx='" & d2_radius & "' "
    default_b_2 = default_b_2 & " fill-opacity='0' "
    default_b_2 = default_b_2 & " stroke='#ffffff' "
    default_b_2 = default_b_2 & " stroke-width='" & d2_b_width & "' "
    default_b_2 = default_b_2 & " y='" & d2_inset & "' "
    default_b_2 = default_b_2 & " x='" & d2_inset & "' "
    default_b_2 = default_b_2 & "/></svg>"

    IF style == "default"
        COL_OUTPUT 0 image default_bg
        COL_OUTPUT 0 image_width iSize
        COL_OUTPUT 0 image_height iSize
        COL_OUTPUT 0 image_color bgC
        COL_OUTPUT 0 width iSize
        COL_OUTPUT 0 height iSize

        COL_OUTPUT 1 image default_b_1
        COL_OUTPUT 1 image_width iSize
        COL_OUTPUT 1 image_height iSize
        COL_OUTPUT 1 image_color "#ffffff45"
        COL_OUTPUT 1 width iSize
        COL_OUTPUT 1 height iSize
        COL_OUTPUT 1 x 0
        COL_OUTPUT 1 y 0

        COL_OUTPUT 2 image default_b_2
        COL_OUTPUT 2 image_width iSize
        COL_OUTPUT 2 image_height iSize
        COL_OUTPUT 2 image_color "#00ffff"
        COL_OUTPUT 2 width iSize
        COL_OUTPUT 2 height iSize
        COL_OUTPUT 2 x 0
        COL_OUTPUT 2 y 0
    ELSE
        COL_OUTPUT 0 image bg_svg
        COL_OUTPUT 0 image_width iSize
        COL_OUTPUT 0 image_height iSize
        COL_OUTPUT 0 image_color bgC
        COL_OUTPUT 0 width iSize
        COL_OUTPUT 0 height iSize

        COL_OUTPUT 1 image border_svg
        COL_OUTPUT 1 image_width iSize
        COL_OUTPUT 1 image_height iSize
        COL_OUTPUT 1 image_color mC
        COL_OUTPUT 1 width iSize
        COL_OUTPUT 1 height iSize
        COL_OUTPUT 1 x 0
        COL_OUTPUT 1 y 0
    END IF

    DOUBLE icon_size
    icon_size = iSize * 0.6

    COL_OUTPUT 3 image_width icon_size
    COL_OUTPUT 3 image_height icon_size
    COL_OUTPUT 3 image_color "#000000"
    COL_OUTPUT 3 width iSize
    COL_OUTPUT 3 height iSize
    COL_OUTPUT 3 align "center"
    COL_OUTPUT 3 x 0
    COL_OUTPUT 3 y 0

    # COUNTDOWN
    DOUBLE fontsize 
    fontsize = iSize * 0.4

    DOUBLE countdown_offset_x
    countdown_offset_x = iSize / 2
    countdown_offset_x = countdown_offset_x - DOUBLE (fontsize / 2)
    
    COL_OUTPUT 4 font font
    COL_OUTPUT 4 font_size fontsize
    COL_OUTPUT 4 shadow 1
    COL_OUTPUT 4 x countdown_offset_x
    COL_OUTPUT 4 y 0
    COL_OUTPUT 4 align "center"

    # ITEM NAME
    IF name
        DOUBLE name_x
        name_x = iSize + 0.8
        IF flip
            name_x = -1.6
        END IF
        COL_OUTPUT 5 font "roboto-bold"
        COL_OUTPUT 5 font_size 1.3
        COL_OUTPUT 5 opacity 0.8
        COL_OUTPUT 5 color "#ffffff"
        COL_OUTPUT 5 shadow 1
        COL_OUTPUT 5 align "top-edge"
        COL_OUTPUT 5 uppercase 1
        COL_OUTPUT 5 x name_x
        COL_OUTPUT 5 y 0
    END IF

    # KEY BIND
    INT show_keybind
    IF keybind
        DOUBLE keybind_x
        DOUBLE keybind_y
        keybind_x = iSize + 1
        keybind_y = iSize / 2
        keybind_y = keybind_y - 1.5
        IF name
            keybind_x = iSize + 2.5
        END IF

        IF flip
            keybind_x = -3
            IF name
                keybind_x = -4.2
            END IF
        END IF

        show_keybind = 1
        COL_OUTPUT 6 font_size 1.2
        COL_OUTPUT 6 font "roboto-bold"
        COL_OUTPUT 6 align "center"
        COL_OUTPUT 6 width 2
        COL_OUTPUT 6 height 3
        COL_OUTPUT 6 color "1a1a1a"
        COL_OUTPUT 6 x keybind_x
        COL_OUTPUT 6 y keybind_y
        COL_OUTPUT 6 fill "#ffffff55"
        COL_OUTPUT 6 border_radius 0.3
    END IF


    RASTERIZE "images/weapon_rl.svg" icon_size icon_size
    RASTERIZE "images/weapon_melee.svg" icon_size icon_size
    RASTERIZE "images/weapon_rl.svg" icon_size icon_size
    RASTERIZE "images/weapon_sb.svg" icon_size icon_size
    RASTERIZE "images/weapon_mac.svg" icon_size icon_size
    RASTERIZE "images/weapon_cb.svg" icon_size icon_size
    RASTERIZE "images/weapon_pncr.svg" icon_size icon_size
    RASTERIZE "images/weapon_shaft.svg" icon_size icon_size
    RASTERIZE "images/weapon_gl.svg" icon_size icon_size
    RASTERIZE "images/weapon_ss.svg" icon_size icon_size
    RASTERIZE "images/weapon_mg.svg" icon_size icon_size
    RASTERIZE "images/weapon_w9.svg" icon_size icon_size
    RASTERIZE "images/weapon_st.svg" icon_size icon_size
    RASTERIZE "images/weapon_iw.svg" icon_size icon_size
    RASTERIZE "images/weapon_sw.svg" icon_size icon_size
    RASTERIZE "images/weapon_bw.svg" icon_size icon_size
    RASTERIZE "images/weapon_smw.svg" icon_size icon_size
    RASTERIZE "images/weapon_hw.svg" icon_size icon_size
    RASTERIZE "images/weapon_kw.svg" icon_size icon_size
    RASTERIZE "images/weapon_vc.svg" icon_size icon_size
    RASTERIZE "images/weapon_bl.svg" icon_size icon_size
    RASTERIZE "images/weapon_aw.svg" icon_size icon_size
    RASTERIZE "images/weapon_hbw.svg" icon_size icon_size
    RASTERIZE "images/weapon_vw.svg" icon_size icon_size

    RASTERIZE "images/item_flag.svg" icon_size icon_size
    RASTERIZE "images/item_macguffin.svg" icon_size icon_size
    
    RASTERIZE_TEXT "0123456789" font fontsize
    RASTERIZE_TEXT "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ" "roboto-bold" 1.3
    RASTERIZE_TEXT "ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" "roboto-bold" 1.2
ON_UPDATE

    IF !battle_data.have_item
        discard
    END IF

    IF !common_game_data.self_alive
        discard
    END IF

    STRING icon_color
    icon_color = iCCustom
    IF iC == "item"
        icon_color = battle_data.item_color
    END IF

    IF style == "default"
        OUTPUT 0 2 image_color battle_data.item_color
    END IF

    IF frame_data.item_cooldown > 0
        OUTPUT 0 3 opacity 0.3
        OUTPUT 0 4 opacity 1
        OUTPUT 0 4 value frame_data.item_cooldown
    ELSE
        OUTPUT 0 3 opacity 1
        OUTPUT 0 4 opacity 0
        OUTPUT 0 4 value ""
    END IF

    
    
    OUTPUT 0 3 image battle_data.item_image
    IF battle_data.item_image == "images/item_flag.svg"
        OUTPUT 0 3 image_color "#ffffff"
        OUTPUT 0 3 hue battle_data.item_color
    ELSE
        OUTPUT 0 3 image_color icon_color
    END IF

    IF name
        OUTPUT 0 5 lvalue battle_data.item_name
        LOCALIZE 0 5
    END IF
    IF show_keybind
        OUTPUT 0 6 value battle_data.item_keybind
    END IF

END TEMPLATE
BEGIN TEMPLATE low_ammo_warning
    SETTING align pivot
    DOUBLE threshold
    INT shadow
    INT uc

    COL_OUTPUT 0 font font
    COL_OUTPUT 0 align pivot
    COL_OUTPUT 0 color color
    IF shadow 
        COL_OUTPUT 0 shadow 1
    END IF

    STRING print_text
    IF uc
        COL_OUTPUT 0 uppercase 1
    END IF
    COL_OUTPUT 0 lvalue "ingame_low_ammo"
    LOCALIZE 0 0

    RASTERIZE_TEXT "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ" font fontSize
ON_UPDATE

    DOUBLE threshold_abs
    threshold_abs = threshold * current_weapon_data.max_ammo

    IF !common_game_data.self_alive
        discard
    END IF

    INT hide
    hide = 0
    IF current_weapon_data.ammo > threshold_abs 
        hide = hide + 1
    END IF
    IF !IN_EDITOR
        hide = hide + 1
    END IF
    IF hide == 2
        discard
    END IF

END TEMPLATE
BEGIN TEMPLATE own_players
    SETTING iterator own_team_players.count
    SETTING item_direction direction
    SETTING cell_direction "vertical"
    SETTING align pivot
    SETTING item_spacing 1
    SETTING cell_spacing 0

    DOUBLE nWidth
    INT sL

    # ========================================
    # SVGS
    STRING square
    square = "<svg width='1' height='1'><rect width='1' height='1' x='0' y='0' fill='white' /></svg>"

    STRING hp_bar
    hp_bar = "<svg width='" & height & "'"
    hp_bar = hp_bar & " height='" & 0.68 & "'>"
    hp_bar = hp_bar & "<rect width='" & height & "'"
    hp_bar = hp_bar & " height='" & 0.68 & "'"
    hp_bar = hp_bar & " x='0' y='0' fill='white' /></svg>"

    STRING armor_bar
    armor_bar = "<svg width='" & height & "'"
    armor_bar = armor_bar & " height='" & 0.46 & "'>"
    armor_bar = armor_bar & "<rect width='" & height & "'"
    armor_bar = armor_bar & " height='" & 0.46 & "'"
    armor_bar = armor_bar & " x='0' y='0' fill='white' /></svg>"

    STRING solo_hp_bar
    solo_hp_bar = "<svg width='" & nWidth & "'"
    solo_hp_bar = solo_hp_bar & " height='" & 1.6 & "'>"
    solo_hp_bar = solo_hp_bar & "<rect width='" & nWidth & "'"
    solo_hp_bar = solo_hp_bar & " height='" & 1.6 & "'"
    solo_hp_bar = solo_hp_bar & " x='0' y='0' fill='white' /></svg>"

    STRING solo_armor_bar
    solo_armor_bar = "<svg width='" & nWidth & "'"
    solo_armor_bar = solo_armor_bar & " height='" & 0.4 & "'>"
    solo_armor_bar = solo_armor_bar & "<rect width='" & nWidth & "'"
    solo_armor_bar = solo_armor_bar & " height='" & 0.4 & "'"
    solo_armor_bar = solo_armor_bar & " x='0' y='0' fill='white' /></svg>"

    # ========================================
    # COMMON
    DOUBLE dead_font_size
    dead_font_size = height * 0.65

    DOUBLE ready_size
    ready_size = height * 0.2

    DOUBLE half_ready_size
    half_ready_size = ready_size / 2

    DOUBLE ready_offset_x
    ready_offset_x = height - ready_size

    DOUBLE name_offset_x
    name_offset_x = height + 0.2

    DOUBLE name_size
    name_size = height / 4

    DOUBLE hp_bar_offset_x
    hp_bar_offset_x = height + 0.3
    hp_bar_offset_x = hp_bar_offset_x + name_size

    DOUBLE armor_bar_offset_x
    armor_bar_offset_x = hp_bar_offset_x + 0.7

    DOUBLE item_image_size
    item_image_size = height * 0.8

    DOUBLE item_offset_x
    item_offset_x = height + 3

    DOUBLE small_item_size
    small_item_size = height / 2

    DOUBLE small_item_image_size
    small_item_image_size = small_item_size - 0.2

    DOUBLE lives_offset
    lives_offset = height + name_size
    lives_offset = lives_offset + 1.8

    DOUBLE lives_offset_text
    lives_offset_text = height + name_size
    lives_offset_text = lives_offset_text + 2

    DOUBLE lives_image_size
    lives_image_size = small_item_size * 0.7

    DOUBLE solo_lives_image_size
    solo_lives_image_size = small_item_size * 0.9

    INT dir
    IF direction == "horizontal reverse"
        dir = 1
    END IF

    INT j

    IF game_data.team_size > 1
        # ========================================
        # AVATAR
        COL_OUTPUT j image_width height
        COL_OUTPUT j image_height height
        COL_OUTPUT j width height
        COL_OUTPUT j height height
        j = j + 1

        # ========================================
        # DEAD INDICATOR
        COL_OUTPUT j height height
        COL_OUTPUT j width height
        COL_OUTPUT j x 0
        COL_OUTPUT j fill "#FF000033"
        COL_OUTPUT j value "X"
        COL_OUTPUT j font "montserrat-bold"
        COL_OUTPUT j font_size dead_font_size
        COL_OUTPUT j align "center"
        COL_OUTPUT j color "#ff0000"
        j = j + 1

        # ========================================
        # FROZEN INDICATOR
        IF game_data.game_mode == "ft"
            j = j + 1
        END IF

        # ========================================
        # SELF INDICATOR
        COL_OUTPUT j image_width DOUBLE (height * 0.5)
        COL_OUTPUT j image_height DOUBLE (height * 0.5)
        COL_OUTPUT j height height
        COL_OUTPUT j x 0
        j = j + 1

        # ========================================
        # READY INDICATOR
        COL_OUTPUT j image square
        COL_OUTPUT j image_width ready_size
        COL_OUTPUT j image_height ready_size
        COL_OUTPUT j width ready_size
        COL_OUTPUT j height ready_size
        COL_OUTPUT j x ready_offset_x
        COL_OUTPUT j offset_x ready_offset_x
        j = j + 1

        # ========================================
        # PLAYER NAME
        COL_OUTPUT j font "roboto-bold"
        COL_OUTPUT j font_size name_size
        COL_OUTPUT j shadow 1
        COL_OUTPUT j height height
        COL_OUTPUT j width name_size
        COL_OUTPUT j x name_offset_x
        COL_OUTPUT j align "center"
        j = j + 1

        # ========================================
        # HEALTH BAR
        COL_OUTPUT j width 0.68
        COL_OUTPUT j height height
        COL_OUTPUT j fill "#00000080"
        COL_OUTPUT j image hp_bar
        COL_OUTPUT j image_width height
        COL_OUTPUT j image_height 0.68
        COL_OUTPUT j x hp_bar_offset_x
        j = j + 1

        # ========================================
        # ARMOR BAR
        COL_OUTPUT j width 0.46
        COL_OUTPUT j height height
        COL_OUTPUT j fill "#00000080"
        COL_OUTPUT j image armor_bar
        COL_OUTPUT j image_color "#ffffff"
        COL_OUTPUT j image_width height
        COL_OUTPUT j image_height 0.46
        COL_OUTPUT j x armor_bar_offset_x
        j = j + 1

        # ========================================
        # RESPAWN TIMER
        COL_OUTPUT j width 2.2
        COL_OUTPUT j height height
        COL_OUTPUT j fill "#17171788"
        COL_OUTPUT j font "roboto-bold"
        COL_OUTPUT j shadow 1
        COL_OUTPUT j font_size 1.5
        COL_OUTPUT j x hp_bar_offset_x
        j = j + 1

    ELSE
        # team_size <= 1

        DOUBLE name_indent
        name_indent = height / 3
        
        # ========================================
        # NAME
        COL_OUTPUT j height nWidth
        COL_OUTPUT j width height
        COL_OUTPUT j font font
        COL_OUTPUT j color "#ffffff"
        COL_OUTPUT j align "left-edge"
        COL_OUTPUT j indent name_indent
        COL_OUTPUT j font_size fontSize
        IF dir
            COL_OUTPUT j align "right-edge"
        ELSE
            COL_OUTPUT j align "left-edge"
        END IF
        j = j + 1

        # ========================================
        # AVATAR
        COL_OUTPUT j width height
        COL_OUTPUT j height height
        COL_OUTPUT j fill "#111111"
        COL_OUTPUT j image_width height
        COL_OUTPUT j image_height height
        COL_OUTPUT j x 0
        IF dir
            COL_OUTPUT j y DOUBLE (height * -1)
        ELSE
            COL_OUTPUT j y nWidth
        END IF
        j = j + 1

        # ========================================
        # DEAD INDICATOR
        COL_OUTPUT j height height
        COL_OUTPUT j width height
        COL_OUTPUT j x 0
        COL_OUTPUT j y nWidth
        COL_OUTPUT j fill "#FF000033"
        COL_OUTPUT j value "X"
        COL_OUTPUT j font "montserrat-bold"
        COL_OUTPUT j font_size dead_font_size
        COL_OUTPUT j align "center"
        COL_OUTPUT j color "#ff0000"
        IF dir
            COL_OUTPUT j y DOUBLE (height * -1)
        ELSE
            COL_OUTPUT j y nWidth
        END IF
        j = j + 1

        # ========================================
        # READY INDICATOR
        DOUBLE ready_size
        ready_size = height * 0.2

        DOUBLE half_ready_size
        half_ready_size = ready_size / 2

        DOUBLE ready_offset_x
        ready_offset_x = height - ready_size

        COL_OUTPUT j image square
        COL_OUTPUT j image_width ready_size
        COL_OUTPUT j image_height ready_size
        COL_OUTPUT j width ready_size
        COL_OUTPUT j height ready_size
        COL_OUTPUT j x ready_offset_x
        IF dir
            COL_OUTPUT j y DOUBLE (ready_size * -1)
        ELSE
            COL_OUTPUT j offset_x DOUBLE (nWidth + ready_offset_x)
        END IF
        j = j + 1

        # ========================================
        # SPECTATOR HP BAR
        COL_OUTPUT j width 1.6
        COL_OUTPUT j height nWidth
        COL_OUTPUT j image solo_hp_bar
        COL_OUTPUT j image_width nWidth
        COL_OUTPUT j image_height 1.6
        COL_OUTPUT j fill "#00000066"
        COL_OUTPUT j x DOUBLE (height + 0.4)
        j = j + 1

        # ========================================
        # SPECTATOR ARMOR BAR
        DOUBLE solo_armor_offset
        solo_armor_offset = height + 2.1

        COL_OUTPUT j width 0.4
        COL_OUTPUT j height nWidth
        COL_OUTPUT j fill "#00ff00"
        COL_OUTPUT j image solo_armor_bar
        COL_OUTPUT j image_color "#ffffff"
        COL_OUTPUT j image_width nWidth
        COL_OUTPUT j image_height 0.4
        COL_OUTPUT j fill "#00000066"
        COL_OUTPUT j x solo_armor_offset
        j = j + 1
        
    END IF


    DOUBLE self_icon_size
    self_icon_size = DOUBLE (height * 0.5)
    
    DOUBLE dead_icon_size
    dead_icon_size = DOUBLE(item_image_size * 0.66)

    RASTERIZE "images/frozen.svg" item_image_size item_image_size
    RASTERIZE "images/icons/fa/caret-down.svg" self_icon_size self_icon_size
    RASTERIZE "images/icons/fa/heart.svg" lives_image_size lives_image_size
    RASTERIZE "images/icons/icon_dead.svg" dead_icon_size dead_icon_size

    RASTERIZE "images/item_macguffin.svg" item_image_size item_image_size
    RASTERIZE "images/item_macguffin.svg" small_item_image_size small_item_image_size
    RASTERIZE "images/item_flag.svg" item_image_size item_image_size
    RASTERIZE "images/item_flag.svg" small_item_image_size small_item_image_size

    # enemy_team_players[IDX].pd_powerup_image: 
    RASTERIZE "images/powerup_diabotical.svg" item_image_size item_image_size
    RASTERIZE "images/powerup_diabotical.svg" small_item_image_size small_item_image_size
    RASTERIZE "images/powerup_tripledamage.svg" item_image_size item_image_size
    RASTERIZE "images/powerup_tripledamage.svg" small_item_image_size small_item_image_size
    RASTERIZE "images/powerup_siphonator.svg" item_image_size item_image_size
    RASTERIZE "images/powerup_siphonator.svg" small_item_image_size small_item_image_size
    RASTERIZE "images/powerup_surge.svg" item_image_size item_image_size
    RASTERIZE "images/powerup_surge.svg" small_item_image_size small_item_image_size
    RASTERIZE "images/powerup_vanguard.svg" item_image_size item_image_size
    RASTERIZE "images/powerup_vanguard.svg" small_item_image_size small_item_image_size

    # solo icons
    RASTERIZE "images/diabotical_o.svg" solo_lives_image_size solo_lives_image_size
    RASTERIZE "images/diabotical_o_shield.svg" solo_lives_image_size solo_lives_image_size
    RASTERIZE "images/icons/fa/heart.svg" solo_lives_image_size solo_lives_image_size

    RASTERIZE_TEXT "xX" "montserrat-bold" dead_font_size
    RASTERIZE_TEXT "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" "roboto-bold" name_size
    RASTERIZE_TEXT "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" font fontSize
    RASTERIZE_TEXT "0123456789.:" "roboto-bold" 1.5
    RASTERIZE_TEXT "0123456789x" "roboto-bold" 1.8
ON_UPDATE

    j = 0

    STRING avatar_url
    INT avatar_length
    avatar_length = LENGTH own_team_players[IDX].avatar
    IF avatar_length > 0
        avatar_url = "customization/avatar/" & own_team_players[IDX].avatar
        avatar_url = avatar_url & ".png"
    ELSE 
        avatar_url = "customization/avatar/av_no_avatar.png"
    END IF

    STRING ready_color
    IF own_team_players[IDX].ready
        ready_color = "#00ff00"
    ELSE 
        ready_color = "#ff0000"
    END IF

    DOUBLE health_clip
    DOUBLE solo_health_clip
    health_clip = -1 * DOUBLE(own_team_players[IDX].hp_percentage / 100)
    solo_health_clip = health_clip

    DOUBLE armor_clip
    DOUBLE solo_armor_clip
    armor_clip = -1 * DOUBLE(own_team_players[IDX].armor_percentage / 100)
    solo_armor_clip = armor_clip

    IF !dir
        solo_health_clip = solo_health_clip * -1
        solo_armor_clip = solo_armor_clip * -1
    END IF


    IF game_data.team_size > 1

        # ========================================
        # AVATAR
        OUTPUT IDX j image avatar_url
        OUTPUT IDX j fill "#111111"
        IF !own_team_players[IDX].alive
            OUTPUT IDX j GRAYSCALE 1
        END IF
        IF own_team_players[IDX].frozen
            OUTPUT IDX j GRAYSCALE 1
        END IF
        j = j + 1

        # ========================================
        # DEAD INDICATOR
        IF own_team_players[IDX].alive
            OUTPUT IDX j opacity 0
        END IF
        j = j + 1

        # ========================================
        # FROZEN INDICATOR
        IF game_data.game_mode == "ft"
            OUTPUT IDX j height height
            OUTPUT IDX j width height
            OUTPUT IDX j x 0
            OUTPUT IDX j fill "#2a678c99"

            OUTPUT IDX j image "images/frozen.svg"
            OUTPUT IDX j image_width DOUBLE(item_image_size * 1)
            OUTPUT IDX j image_height DOUBLE(item_image_size * 1)
            #OUTPUT IDX j image_color "#ffffff"

            IF !own_team_players[IDX].frozen
                OUTPUT IDX j opacity 0
            END IF
            j = j + 1
        END IF

        # ========================================
        # SELF INDICATOR
        IF own_team_players[IDX].is_self
            OUTPUT IDX j image "images/icons/fa/caret-down.svg"
        END IF
        j = j + 1

        # ========================================
        # READY INDICATOR
        OUTPUT IDX j image_color ready_color
        IF game_data.game_stage != 1
            OUTPUT IDX j opacity 0            
        END IF
        j = j + 1

        # ========================================
        # PLAYER NAME
        STRING player_name
        player_name = SUBSTR own_team_players[IDX].name 0 8
        OUTPUT IDX j value player_name
        IF !own_team_players[IDX].alive
            OUTPUT IDX j opacity 0.6
        END IF
        j = j + 1

        # ========================================
        # HEALTH BAR
        OUTPUT IDX j clip_y health_clip
        OUTPUT IDX j image_color game_data.own_team.color
        IF !own_team_players[IDX].alive
            OUTPUT IDX j opacity 0
        END IF
        j = j + 1

        # ========================================
        # ARMOR BAR
        OUTPUT IDX j clip_y armor_clip
        IF !own_team_players[IDX].alive
            OUTPUT IDX j opacity 0
        END IF
        j = j + 1

        # ========================================
        # RESPAWN TIMER
        IF game_data.show_respawn_timers
            OUTPUT IDX j value own_team_players[IDX].respawn_timer
            IF own_team_players[IDX].alive
                OUTPUT IDX j opacity 0
            END IF
        ELSE
            OUTPUT IDX j opacity 0
        END IF
        j = j + 1

        # ========================================
        # LIVES
        INT show_lives
        show_lives = 0

        INT lives_mode
        lives_mode = 0
        IF IN_EDITOR
            lives_mode = 1
        END IF
        IF game_data.game_mode == "ca" || game_data.game_mode == "extinction"
            lives_mode = 1
        END IF
        IF game_data.game_mode == "rocket_arena" || game_data.game_mode == "shaft_arena"
            lives_mode = 1
        END IF
        IF game_data.game_mode == "bounty"
            lives_mode = 1
        END IF

        IF lives_mode && sL

            show_lives = 1
            life_count = own_team_players[IDX].life_count & "x"

            # ========================================
            # ARENA LIFE COUNT
            OUTPUT IDX j width small_item_size
            OUTPUT IDX j height small_item_size
            OUTPUT IDX j x lives_offset_text
            OUTPUT IDX j shadow 1
            OUTPUT IDX j font_size 1.8
            OUTPUT IDX j font "roboto-bold"
            OUTPUT IDX j value life_count
            IF own_team_players[IDX].life_count < 1
                OUTPUT IDX j opacity 0
            END IF
            j = j + 1

            # ========================================
            # ARENA LIFE 2
            OUTPUT IDX j image "images/icons/fa/heart.svg"
            OUTPUT IDX j width small_item_size
            OUTPUT IDX j height small_item_size
            OUTPUT IDX j image_width lives_image_size
            OUTPUT IDX j image_height lives_image_size
            OUTPUT IDX j x lives_offset
            OUTPUT IDX j offset_x small_item_size
            OUTPUT IDX j image_color game_data.own_team.color
            IF own_team_players[IDX].life_count < 1
                OUTPUT IDX j opacity 0
            END IF
            j = j + 1

            OUTPUT IDX j image "images/icons/icon_dead.svg"
            OUTPUT IDX j width DOUBLE(height * 0.7)
            OUTPUT IDX j height height
            OUTPUT IDX j image_width DOUBLE(item_image_size * 0.66)
            OUTPUT IDX j image_height DOUBLE(item_image_size * 0.66)
            OUTPUT IDX j x DOUBLE(lives_offset - 0.4)
            OUTPUT IDX j image_color "#ffffff"
            OUTPUT IDX j opacity 0
            IF own_team_players[IDX].life_count < 1
                OUTPUT IDX j opacity 0.5
            END IF
            j = j + 1

            ## ========================================
            ## ARENA LIFE 2
            #OUTPUT IDX j image_color game_data.own_team.color
            #OUTPUT IDX j image "images/icons/fa/heart.svg"
            #OUTPUT IDX j width small_item_size
            #OUTPUT IDX j height small_item_size
            #OUTPUT IDX j image_width lives_image_size
            #OUTPUT IDX j image_height lives_image_size
            #OUTPUT IDX j x lives_offset
            #IF own_team_players[IDX].life_count < 1
            #    OUTPUT IDX j opacity 0
            #END IF
            #j = j + 1
#
            ## ========================================
            ## ARENA LIFE 2
            #OUTPUT IDX j image "images/icons/fa/heart.svg"
            #OUTPUT IDX j width small_item_size
            #OUTPUT IDX j height small_item_size
            #OUTPUT IDX j image_width lives_image_size
            #OUTPUT IDX j image_height lives_image_size
            #OUTPUT IDX j x lives_offset
            #OUTPUT IDX j offset_x small_item_size
            #OUTPUT IDX j image_color game_data.own_team.color
            #IF own_team_players[IDX].life_count < 2
            #    OUTPUT IDX j opacity 0
            #END IF
            #j = j + 1

        END IF

        # ========================================
        # POWERUP / ITEM COMMON
        DOUBLE item_offset_x_extra
        item_offset_x_extra = item_offset_x

        IF show_lives == 1
            item_offset_x_extra = item_offset_x + small_item_size
        END IF

        INT items
        items = 0

        IF own_team_players[IDX].has_macguffin
            items = items + 1
        END IF
        IF own_team_players[IDX].has_flag
            items = items + 1
        END IF
        IF own_team_players[IDX].has_powerup
            items = items + 1
        END IF

        # ========================================
        # MACGUFFIN
        IF own_team_players[IDX].has_macguffin
            OUTPUT IDX j width height
            OUTPUT IDX j height height
            OUTPUT IDX j image "images/item_macguffin.svg"
            OUTPUT IDX j image_color "#f8d206"
            OUTPUT IDX j image_width item_image_size
            OUTPUT IDX j image_height item_image_size
            OUTPUT IDX j x item_offset_x_extra

            IF items > 1
                OUTPUT IDX j width small_item_size
                OUTPUT IDX j height small_item_size
                OUTPUT IDX j image_width small_item_image_size
                OUTPUT IDX j image_height small_item_image_size
            END IF

            IF game_data.game_mode == "extinction" || game_data.game_mode == "bounty"
                OUTPUT IDX j opacity 0
            END IF

            j = j + 1
        END IF

        # ========================================
        # FLAG
        IF own_team_players[IDX].has_flag
            OUTPUT IDX j width height
            OUTPUT IDX j height height
            OUTPUT IDX j image "images/item_flag.svg"
            OUTPUT IDX j hue own_team_players[IDX].flag_color
            OUTPUT IDX j image_width item_image_size
            OUTPUT IDX j image_height item_image_size
            OUTPUT IDX j x item_offset_x_extra

            IF items > 1
                OUTPUT IDX j width small_item_size
                OUTPUT IDX j height small_item_size
                OUTPUT IDX j image_width small_item_image_size
                OUTPUT IDX j image_height small_item_image_size
            END IF

            j = j + 1
        END IF

        # ========================================
        # POWERUP
        DOUBLE powerup_offset_y
        IF own_team_players[IDX].has_powerup
            OUTPUT IDX j width height
            OUTPUT IDX j height height
            OUTPUT IDX j image own_team_players[IDX].pd_powerup_image
            OUTPUT IDX j image_color own_team_players[IDX].pd_powerup_color
            OUTPUT IDX j image_width item_image_size
            OUTPUT IDX j image_height item_image_size
            OUTPUT IDX j x item_offset_x_extra

            IF items > 1
                OUTPUT IDX j width small_item_size
                OUTPUT IDX j height small_item_size
                OUTPUT IDX j image_width small_item_image_size
                OUTPUT IDX j image_height small_item_image_size
                OUTPUT IDX j offset_x small_item_size
            END IF

            j = j + 1
        END IF

    ELSE
        # team_size <= 1

        STRING name_bg
        name_bg = game_data.own_team.color & name_bg_opacity

        DOUBLE name_indent
        name_indent = height / 3

        STRING name_color_grayscale 
        name_color_grayscale = GRAYSCALE game_data.own_team.color

        STRING name_color
        name_color = "#ffffff"

        IF name_color_grayscale > 0.55
            name_color = "#1c1c1c"
        END IF
        
        # ========================================
        # NAME
        OUTPUT IDX j value own_team_players[IDX].name
        OUTPUT IDX j fill name_bg
        OUTPUT IDX j color name_color
        j = j + 1

        # ========================================
        # AVATAR
        OUTPUT IDX j image avatar_url
        IF !own_team_players[IDX].alive
            OUTPUT IDX j GRAYSCALE 1
        END IF
        j = j + 1

        # ========================================
        # DEAD INDICATOR
        IF own_team_players[IDX].alive
            OUTPUT IDX j opacity 0
        END IF
        j = j + 1

        # ========================================
        # READY INDICATOR
        OUTPUT IDX j image_color ready_color
        IF game_data.game_stage != 1
            OUTPUT IDX j opacity 0
        END IF
        j = j + 1


        # ========================================
        # SPECTATOR HP BAR
        IF game_data.game_mode == "duel" && game_data.spectator
            OUTPUT IDX j image_color game_data.own_team.color
            OUTPUT IDX j clip_y solo_health_clip
        ELSE
            OUTPUT IDX j opacity 0
        END IF
        j = j + 1

        # ========================================
        # SPECTATOR ARMOR BAR
        IF game_data.game_mode == "duel" && game_data.spectator
            OUTPUT IDX j clip_y solo_armor_clip
        ELSE
            OUTPUT IDX j opacity 0
        END IF
        j = j + 1
        

        # ========================================
        # SOLO LIVES

        DOUBLE solo_life_offset_x
        solo_life_offset_x = solo_armor_offset + 0.6
        IF game_data.spectator
            solo_life_offset_x = solo_armor_offset + 0.6
        ELSE
            solo_life_offset_x = height + 0.4
        END IF

        DOUBLE solo_main_life_offset_y
        solo_main_life_offset_y = nWidth - small_item_size
        IF dir
            solo_main_life_offset_y = 0
        END IF

        lives_mode = 0
        IF game_data.game_mode == "ca"
            lives_mode = 1
        END IF
        IF game_data.game_mode == "rocket_arena" || game_data.game_mode == "shaft_arena"
            lives_mode = 1
        END IF

        IF lives_mode && sL

            # ========================================
            # ARENA LIFE 2
            OUTPUT IDX j image_color game_data.own_team.color
            OUTPUT IDX j image "images/icons/fa/heart.svg"
            OUTPUT IDX j width small_item_size
            OUTPUT IDX j height small_item_size
            OUTPUT IDX j image_width solo_lives_image_size
            OUTPUT IDX j image_height solo_lives_image_size
            OUTPUT IDX j x solo_life_offset_x
            OUTPUT IDX j y solo_main_life_offset_y
            IF own_team_players[IDX].life_count < 1
                OUTPUT IDX j opacity 0
            END IF
            j = j + 1

            # ========================================
            # ARENA LIFE 2
            IF dir
                solo_main_life_offset_y = solo_main_life_offset_y + DOUBLE (solo_lives_image_size + 0.4)
            ELSE
                solo_main_life_offset_y = solo_main_life_offset_y - DOUBLE (solo_lives_image_size + 0.4)
            END IF
            OUTPUT IDX j image_color game_data.own_team.color
            OUTPUT IDX j image "images/icons/fa/heart.svg"
            OUTPUT IDX j width small_item_size
            OUTPUT IDX j height small_item_size
            OUTPUT IDX j image_width solo_lives_image_size
            OUTPUT IDX j image_height solo_lives_image_size
            OUTPUT IDX j x solo_life_offset_x
            OUTPUT IDX j y solo_main_life_offset_y
            IF own_team_players[IDX].life_count < 2
                OUTPUT IDX j opacity 0
            END IF
            j = j + 1

        END IF

        IF game_data.game_mode == "duel" && sL
            # ========================================
            # MAIN LIFE

            OUTPUT IDX j width small_item_size
            OUTPUT IDX j height small_item_size
            OUTPUT IDX j image_width solo_lives_image_size
            OUTPUT IDX j image_height solo_lives_image_size
            OUTPUT IDX j x solo_life_offset_x
            OUTPUT IDX j y solo_main_life_offset_y

            IF game_data.is_golden_frag
                OUTPUT IDX j image "images/diabotical_o.svg"
                OUTPUT IDX j image_color game_data.own_team.color
            ELSE
                OUTPUT IDX j image "images/diabotical_o_shield.svg"
                OUTPUT IDX j hue game_data.own_team.color_dark
            END IF
            j = j + 1

            # ========================================
            # DUEL LIVES
            INT lives
            IF game_data.own_team.team_score > game_data.enemy_team.team_score
                lives = game_data.own_team.team_score - game_data.enemy_team.team_score
            ELSE 
                lives = 0
            END IF
            
            INT current_life
            current_life = 0

            DOUBLE current_life_offset_y
            IF dir
                current_life_offset_y = small_item_size + 0.2
            ELSE
                current_life_offset_y = nWidth - small_item_size
                current_life_offset_y = current_life_offset_y - DOUBLE (small_item_size + 0.2)
            END IF

            IF lives > 5

                OUTPUT IDX j width small_item_size
                OUTPUT IDX j height small_item_size
                OUTPUT IDX j image_width solo_lives_image_size
                OUTPUT IDX j image_height solo_lives_image_size
                OUTPUT IDX j image "images/icons/fa/heart.svg"
                OUTPUT IDX j image_color game_data.own_team.color
                OUTPUT IDX j x solo_life_offset_x
                OUTPUT IDX j y current_life_offset_y
                j = j + 1

                DOUBLE live_count_offset_y
                IF dir
                    live_count_offset_y = small_item_size * 2
                    live_count_offset_y = live_count_offset_y + 0.6
                    OUTPUT IDX j align "left-edge"
                ELSE
                    OUTPUT IDX j align "right-edge"
                    live_count_offset_y = 0 - DOUBLE(small_item_size * 2)
                    live_count_offset_y = live_count_offset_y - 0.6
                END IF
                STRING live_count_string
                live_count_string = lives & "x"

                OUTPUT IDX j x solo_life_offset_x
                OUTPUT IDX j y live_count_offset_y
                OUTPUT IDX j width small_item_size
                
                OUTPUT IDX j font "roboto-bold"
                OUTPUT IDX j font_size DOUBLE (solo_lives_image_size / 1.5)
                OUTPUT IDX j color "#ffffff"
                OUTPUT IDX j shadow 1
                OUTPUT IDX j value live_count_string
                j = j + 1

            ELSE 
                FOR lives

                    current_life = current_life + 1

                    OUTPUT IDX j width small_item_size
                    OUTPUT IDX j height small_item_size
                    OUTPUT IDX j image_width solo_lives_image_size
                    OUTPUT IDX j image_height solo_lives_image_size
                    OUTPUT IDX j image "images/icons/fa/heart.svg"
                    OUTPUT IDX j image_color game_data.own_team.color
                    OUTPUT IDX j x solo_life_offset_x
                    OUTPUT IDX j y current_life_offset_y

                    IF dir
                        current_life_offset_y = current_life_offset_y + DOUBLE (small_item_size + 0.2)
                    ELSE
                        current_life_offset_y = current_life_offset_y - DOUBLE (small_item_size + 0.2)
                    END IF
                    j = j + 1

                END FOR
            END IF
        END IF

    END IF

END TEMPLATE
BEGIN TEMPLATE player_name
    SETTING cell_direction "horizontal"
    SETTING align pivot
    INT shadow
    INT teamColor
    INT pre
    INT uc

    # Following text
    IF pre
        COL_OUTPUT 0 lvalue "following"
        LOCALIZE 0 0
        COL_OUTPUT 0 color "#ffffff"
        COL_OUTPUT 0 font font
        COL_OUTPUT 0 height fontSize
        COL_OUTPUT 0 indent 0.5
        IF uc
            COL_OUTPUT 0 uppercase 1
        END IF
        IF shadow
            COL_OUTPUT 0 shadow 1
        END IF
    END IF

    # Player Name
    COL_OUTPUT 1 font font
    COL_OUTPUT 1 height fontSize
    IF uc
        COL_OUTPUT 1 uppercase 1
    END IF
    IF shadow
        COL_OUTPUT 1 shadow 1
    END IF

    RASTERIZE_TEXT "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" font fontSize
ON_UPDATE

    INT disc
    disc = 0
    IF !common_game_data.self_alive
        disc = 1
    END IF

    IF vis == "p" && common_game_data.spectating
        disc = 1
    END IF
    IF vis == "s" && !common_game_data.spectating
        disc = 1
    END IF

    IF !IN_EDITOR && disc
        discard
    END IF

    STRING name_color
    name_color = color
    IF teamColor
        name_color = game_data.pov_team.color
    END IF

    OUTPUT 0 1 color name_color
    OUTPUT 0 1 value battle_data.self.name

    
END TEMPLATE
BEGIN TEMPLATE powerup
    SETTING cell_direction "vertical"
    SETTING align pivot

    DOUBLE iSize
    DOUBLE bRadius
    DOUBLE cCode
    DOUBLE bWidth
    INT iShadow
    INT cP

    DOUBLE double_bWidth
    double_bWidth = 2 * bWidth

    DOUBLE half_bWidth
    half_bWidth = bWidth / 2

    DOUBLE bg_size
    bg_size = iSize - double_bWidth

    DOUBLE bg_radius
    bg_radius = bWidth / 2
    bg_radius = bRadius - bg_radius 
    bg_radius = CLAMP bg_radius 0 100

    STRING bg_svg
    bg_svg = "<svg "
    bg_svg = bg_svg & " width='" & iSize & "'"
    bg_svg = bg_svg & " height='" & iSize & "'"
    bg_svg = bg_svg & " viewBox='" & 0
    bg_svg = bg_svg & " " & 0
    bg_svg = bg_svg & " " & iSize
    bg_svg = bg_svg & " " & iSize & "'>"
    bg_svg = bg_svg & "<rect "
    bg_svg = bg_svg & " width='" & bg_size & "' "
    bg_svg = bg_svg & " height='" & bg_size & "' "
    bg_svg = bg_svg & " rx='" & bg_radius & "' "
    bg_svg = bg_svg & " fill='#ffffff' "
    bg_svg = bg_svg & " stroke-width='0' "
    bg_svg = bg_svg & " y='" & bWidth & "' "
    bg_svg = bg_svg & " x='" & bWidth & "' "
    bg_svg = bg_svg & "/></svg>"

    DOUBLE border_offset
    border_offset = bWidth / 2
    border_offset = border_offset * -1
    DOUBLE border_size
    border_size = iSize + bWidth

    DOUBLE border_size
    border_size = iSize - bWidth

    STRING border_svg 
    border_svg = "<svg "
    border_svg = border_svg & " width='" & iSize & "'"
    border_svg = border_svg & " height='" & iSize & "'"
    border_svg = border_svg & " viewBox='" & 0
    border_svg = border_svg & " " & 0
    border_svg = border_svg & " " & iSize
    border_svg = border_svg & " " & iSize & "'>"
    border_svg = border_svg & "<rect "
    border_svg = border_svg & " width='" & border_size & "' "
    border_svg = border_svg & " height='" & border_size & "' "
    border_svg = border_svg & " rx='" & bRadius & "' "
    border_svg = border_svg & " fill-opacity='0' "
    border_svg = border_svg & " stroke='#ffffff' "
    border_svg = border_svg & " stroke-width='" & bWidth & "' "
    border_svg = border_svg & " y='" & half_bWidth & "' "
    border_svg = border_svg & " x='" & half_bWidth & "' "
    border_svg = border_svg & "/></svg>"

    DOUBLE d_bg_tmp
    d_bg_tmp = iSize * 0.075

    DOUBLE d_bg_offset 
    d_bg_offset = d_bg_tmp * -1

    DOUBLE d_bg_size
    d_bg_size = iSize + d_bg_tmp
    d_bg_size = d_bg_size + d_bg_tmp

    STRING default_bg
    default_bg = "<svg "
    default_bg = default_bg & " width='" & iSize & "'"
    default_bg = default_bg & " height='" & iSize & "'"
    default_bg = default_bg & " viewBox='" & d_bg_offset
    default_bg = default_bg & " " & d_bg_offset
    default_bg = default_bg & " " & d_bg_size
    default_bg = default_bg & " " & d_bg_size & "'>"
    default_bg = default_bg & "<rect "
    default_bg = default_bg & " width='" & iSize & "' "
    default_bg = default_bg & " height='" & iSize & "' "
    default_bg = default_bg & " rx='" & bRadius & "' "
    default_bg = default_bg & " fill='#ffffff' "
    default_bg = default_bg & " stroke-width='0' "
    default_bg = default_bg & " y='0' "
    default_bg = default_bg & " x='0' "
    default_bg = default_bg & "/></svg>"

    DOUBLE d1_b_width
    d1_b_width = iSize * 0.03

    DOUBLE half_d1_b_width
    half_d1_b_width = d1_b_width / 2

    DOUBLE d1_border_size
    d1_border_size = iSize - d1_b_width

    STRING default_b_1 
    default_b_1 = "<svg "
    default_b_1 = default_b_1 & " width='" & iSize & "'"
    default_b_1 = default_b_1 & " height='" & iSize & "'"
    default_b_1 = default_b_1 & " viewBox='" & 0
    default_b_1 = default_b_1 & " " & 0
    default_b_1 = default_b_1 & " " & iSize
    default_b_1 = default_b_1 & " " & iSize & "'>"
    default_b_1 = default_b_1 & "<rect "
    default_b_1 = default_b_1 & " width='" & d1_border_size & "' "
    default_b_1 = default_b_1 & " height='" & d1_border_size & "' "
    default_b_1 = default_b_1 & " rx='" & bRadius & "' "
    default_b_1 = default_b_1 & " fill-opacity='0' "
    default_b_1 = default_b_1 & " stroke='#ffffff' "
    default_b_1 = default_b_1 & " stroke-width='" & d1_b_width & "' "
    default_b_1 = default_b_1 & " y='" & half_d1_b_width & "' "
    default_b_1 = default_b_1 & " x='" & half_d1_b_width & "' "
    default_b_1 = default_b_1 & "/></svg>"

    DOUBLE d2_gap
    d2_gap = 0.2

    DOUBLE d2_b_width
    d2_b_width = iSize * 0.055

    DOUBLE half_d2_b_width
    half_d2_b_width = d2_b_width / 2

    DOUBLE d2_size 
    d2_size = iSize - d1_b_width
    d2_size = d2_size - d1_b_width
    d2_size = d2_size - d2_b_width
    d2_size = d2_size - d2_gap
    d2_size = d2_size - d2_gap

    DOUBLE d2_inset
    d2_inset = half_d2_b_width + d1_b_width
    d2_inset = d2_inset + d2_gap
    
    DOUBLE d2_radius
    d2_radius = bRadius - d2_gap
    d2_radius = d2_radius - half_d2_b_width
    d2_radius = d2_radius - half_d1_b_width
    d2_radius = CLAMP d2_radius 0 100

    STRING default_b_2 
    default_b_2 = "<svg "
    default_b_2 = default_b_2 & " width='" & iSize & "'"
    default_b_2 = default_b_2 & " height='" & iSize & "'"
    default_b_2 = default_b_2 & " viewBox='" & 0
    default_b_2 = default_b_2 & " " & 0
    default_b_2 = default_b_2 & " " & iSize
    default_b_2 = default_b_2 & " " & iSize & "'>"
    default_b_2 = default_b_2 & "<rect "
    default_b_2 = default_b_2 & " width='" & d2_size & "' "
    default_b_2 = default_b_2 & " height='" & d2_size & "' "
    default_b_2 = default_b_2 & " rx='" & d2_radius & "' "
    default_b_2 = default_b_2 & " fill-opacity='0' "
    default_b_2 = default_b_2 & " stroke='#ffffff' "
    default_b_2 = default_b_2 & " stroke-width='" & d2_b_width & "' "
    default_b_2 = default_b_2 & " y='" & d2_inset & "' "
    default_b_2 = default_b_2 & " x='" & d2_inset & "' "
    default_b_2 = default_b_2 & "/></svg>"

    IF style == "default"
        COL_OUTPUT 0 image default_bg
        COL_OUTPUT 0 image_width iSize
        COL_OUTPUT 0 image_height iSize
        COL_OUTPUT 0 image_color bgC
        COL_OUTPUT 0 width iSize
        COL_OUTPUT 0 height iSize

        COL_OUTPUT 1 image default_b_1
        COL_OUTPUT 1 image_width iSize
        COL_OUTPUT 1 image_height iSize
        COL_OUTPUT 1 image_color "#ffffff45"
        COL_OUTPUT 1 width iSize
        COL_OUTPUT 1 height iSize
        COL_OUTPUT 1 x 0
        COL_OUTPUT 1 y 0

        COL_OUTPUT 2 image default_b_2
        COL_OUTPUT 2 image_width iSize
        COL_OUTPUT 2 image_height iSize
        COL_OUTPUT 2 image_color "#00ffff"
        COL_OUTPUT 2 width iSize
        COL_OUTPUT 2 height iSize
        COL_OUTPUT 2 x 0
        COL_OUTPUT 2 y 0
    ELSE
        COL_OUTPUT 0 image bg_svg
        COL_OUTPUT 0 image_width iSize
        COL_OUTPUT 0 image_height iSize
        COL_OUTPUT 0 image_color bgC
        COL_OUTPUT 0 width iSize
        COL_OUTPUT 0 height iSize

        COL_OUTPUT 1 image border_svg
        COL_OUTPUT 1 image_width iSize
        COL_OUTPUT 1 image_height iSize
        COL_OUTPUT 1 image_color mC
        COL_OUTPUT 1 width iSize
        COL_OUTPUT 1 height iSize
        COL_OUTPUT 1 x 0
        COL_OUTPUT 1 y 0
    END IF

    DOUBLE icon_size
    icon_size = iSize * 0.55

    COL_OUTPUT 3 image_width icon_size
    COL_OUTPUT 3 image_height icon_size
    COL_OUTPUT 3 image_color "#000000"
    COL_OUTPUT 3 width iSize
    COL_OUTPUT 3 height iSize
    COL_OUTPUT 3 align "center"
    COL_OUTPUT 3 x 0
    COL_OUTPUT 3 y 0

    # COUNTDOWN
    COL_OUTPUT 4 font font
    COL_OUTPUT 4 shadow 1

    DOUBLE countdown_offset_x
    countdown_offset_x = 0
    DOUBLE countdown_offset_y
    countdown_offset_y = 0

    # CENTER
    IF cP == 0
        countdown_offset_x = iSize / 2
        COL_OUTPUT 4 width iSize
        COL_OUTPUT 4 x 0
        COL_OUTPUT 4 y 0
        COL_OUTPUT 4 align "center"
    END IF

    # TOP
    IF cP == 1
        countdown_offset_x = fontSize + 0.5
        countdown_offset_x = countdown_offset_x * -1
        COL_OUTPUT 4 x countdown_offset_x
        COL_OUTPUT 4 y 0
        COL_OUTPUT 4 align "center"
    END IF

    # RIGHT
    IF cP == 2
        countdown_offset_x = iSize / 2
        countdown_offset_y = countdown_offset_x 
        countdown_offset_y = iSize + 1
        COL_OUTPUT 4 width iSize
        COL_OUTPUT 4 x 0
        COL_OUTPUT 4 y countdown_offset_y
        COL_OUTPUT 4 align "left-edge"
    END IF

    # BOTTOM
    IF cP == 3
        countdown_offset_x = fontSize / 2
        countdown_offset_x = 1 + iSize
        COL_OUTPUT 4 x countdown_offset_x
        COL_OUTPUT 4 y 0
        COL_OUTPUT 4 align "center"
    END IF

    # LEFT
    IF cP == 4
        countdown_offset_x = iSize / 2
        countdown_offset_y = countdown_offset_x 
        countdown_offset_y = iSize + 1
        countdown_offset_y = countdown_offset_y * -1
        COL_OUTPUT 4 width iSize
        COL_OUTPUT 4 x 0
        COL_OUTPUT 4 y countdown_offset_y
        COL_OUTPUT 4 align "right-edge"
    END IF

    RASTERIZE "images/powerup_diabotical.svg" icon_size icon_size
    RASTERIZE "images/powerup_tripledamage.svg" icon_size icon_size
    RASTERIZE "images/powerup_siphonator.svg" icon_size icon_size
    RASTERIZE "images/powerup_surge.svg" icon_size icon_size
    RASTERIZE "images/powerup_vanguard.svg" icon_size icon_size

    RASTERIZE_TEXT "0123456789" font fontSize
ON_UPDATE

    IF !battle_data.have_powerup
        discard
    END IF

    IF !common_game_data.self_alive
        discard
    END IF

    STRING icon_color
    icon_color = iCCustom
    IF iC == "powerup"
        icon_color = battle_data.powerup_color
    END IF

    IF style == "default"
        OUTPUT 0 2 image_color battle_data.powerup_color
    END IF

    OUTPUT 0 3 image_color icon_color
    OUTPUT 0 3 image battle_data.powerup_image

    IF frame_data.powerup_countdown > 0
        OUTPUT 0 4 value frame_data.powerup_countdown
    END IF


END TEMPLATE
BEGIN TEMPLATE score
    SETTING align pivot
    SETTING item_direction "vertical"
    SETTING cell_direction "horizontal"
    DOUBLE bRadius
    DOUBLE cCode
    INT shadow
    INT hide_dead

    STRING bg_svg
    bg_svg = "<svg "
    bg_svg = bg_svg & " width='" & width & "'"
    bg_svg = bg_svg & " height='" & height & "'"
    bg_svg = bg_svg & " viewBox='" & 0
    bg_svg = bg_svg & " " & 0
    bg_svg = bg_svg & " " & width
    bg_svg = bg_svg & " " & height & "'>"
    bg_svg = bg_svg & "<rect "
    bg_svg = bg_svg & " width='" & width & "' "
    bg_svg = bg_svg & " height='" & height & "' "
    bg_svg = bg_svg & " rx='" & bRadius & "' "
    bg_svg = bg_svg & " fill='#ffffff' "
    bg_svg = bg_svg & " stroke-width='0' "
    bg_svg = bg_svg & " y='" & bWidth & "' "
    bg_svg = bg_svg & " x='" & bWidth & "' "
    bg_svg = bg_svg & "/></svg>"

    STRING macguffin_bar
    macguffin_bar = "<svg width='2.5'"
    macguffin_bar = macguffin_bar & " height='" & height & "'>"
    macguffin_bar = macguffin_bar & "<rect width='2.5'"
    macguffin_bar = macguffin_bar & " height='" & height & "'"
    macguffin_bar = macguffin_bar & " x='0' y='0' fill='white' /></svg>"

    DOUBLE indent
    indent = width * 0.1

    INT dir
    DOUBLE macguffin_offset
    macguffin_offset = DOUBLE (width + 0.8)
    IF direction == "horizontal reverse"
        dir = 1
        macguffin_offset = -3.3
    END IF

    INT hide_when_dead
    IF hide_dead
        hide_when_dead = 1
    END IF

    RASTERIZE "images/item_flag.svg" width height
    RASTERIZE "images/icons/fa/times.svg" width height
    RASTERIZE "images/icons/fa/question.svg" width height
    RASTERIZE "images/item_macguffin.svg" 3 3
    
    DOUBLE fontSizeSmall
    fontSizeSmall = DOUBLE(fontSize / 2)

    RASTERIZE_TEXT "0123456789" font fontSize
    RASTERIZE_TEXT "0123456789:." font fontSizeSmall
    RASTERIZE_TEXT "0123456789" "roboto-bold" 2.4
ON_UPDATE

    IF hide_when_dead == 1 && common_game_data.self_alive == "false"
        discard
    END IF

    INT main_score
    INT round_score
    STRING race_time
    STRING team_color
    STRING team_color_dark
    INT flag_state
    INT has_macguffin
    has_macguffin = 0
    IF team == "own"
        main_score = game_data.own_team.team_score
        round_score = game_data.own_team.game_score
        team_color = game_data.own_team.color
        team_color_dark = game_data.own_team.color_dark
        flag_state = game_data.own_team.team_flag_state
        IF game_data.own_team.team_has_macguffin == "true"
            has_macguffin = 1
        END IF
        IF game_data.game_mode == "wipeout" || game_data.game_mode == "ca"
            main_score = game_data.own_team.game_score
        END IF
        IF game_data.game_mode == "extinction"
            main_score = game_data.own_team.game_score
        END IF
        IF game_data.game_mode == "race"
            race_time = FORMAT_TIME game_data.own_team.team_score
        END IF
    ELSE 
        main_score = game_data.enemy_team.team_score
        round_score = game_data.enemy_team.game_score
        team_color = game_data.enemy_team.color
        team_color_dark = game_data.enemy_team.color_dark
        flag_state = game_data.enemy_team.team_flag_state
        IF game_data.enemy_team.team_has_macguffin == "true"
            has_macguffin = 1
        END IF
        IF game_data.game_mode == "wipeout" || game_data.game_mode == "ca"
            main_score = game_data.enemy_team.game_score
        END IF
        IF game_data.game_mode == "extinction"
            main_score = game_data.enemy_team.game_score
        END IF
        IF game_data.game_mode == "race"
            race_time = FORMAT_TIME game_data.enemy_team.team_score
        END IF
    END IF

    # ====================================
    # MAIN SCORE

    IF game_data.game_mode == "race"
        OUTPUT 0 0 font_size fontSizeSmall
    ELSE
        OUTPUT 0 0 font_size fontSize
    END IF
    OUTPUT 0 0 image bg_svg
    OUTPUT 0 0 image_width width
    OUTPUT 0 0 image_height height
    OUTPUT 0 0 width width
    OUTPUT 0 0 height height
    OUTPUT 0 0 font font
    OUTPUT 0 0 indent indent
    IF shadow
        OUTPUT 0 0 shadow 1
    END IF
    IF align == "flex-start"
        OUTPUT 0 0 align "left-edge"
    END IF
    IF align == "flex-end"
        OUTPUT 0 0 align "right-edge"
    END IF

    STRING main_score_bg
    main_score_bg = bgCCustom

    IF bgC == "team"
        main_score_bg = team_color
    END IF
    OUTPUT 0 0 image_color main_score_bg

    STRING main_score_grayscale
    main_score_grayscale = GRAYSCALE main_score_bg

    IF main_score_grayscale > 0.55
        OUTPUT 0 0 color "#1c1c1c"
        OUTPUT 0 1 color "#1c1c1c"
    ELSE 
        OUTPUT 0 0 color "#ffffff"
        OUTPUT 0 1 color "#ffffff"
    END IF
    
    IF sType == "score"
        IF game_data.game_mode == "race"
            OUTPUT 0 0 value race_time
        ELSE
            OUTPUT 0 0 value main_score
        END IF
    ELSE
        IF game_data.round_mode == "false" && !IN_EDITOR
            discard
        END IF

        OUTPUT 0 0 value round_score
    END IF

    # ====================================
    # ROUND SCORE
    INT show_round_score
    show_round_score = 0
    IF rS && IN_EDITOR
        show_round_score = 1
    END IF
    IF rS && game_data.round_mode
        show_round_score = 1
    END IF
    IF game_data.game_mode == "wipeout" || game_data.game_mode == "ca"
        show_round_score = 0
    END IF
    IF game_data.game_mode == "extinction"
        show_round_score = 0
    END IF

    IF show_round_score
        OUTPUT 0 1 width width
        OUTPUT 0 1 height 3
        OUTPUT 0 1 x 0
        OUTPUT 0 1 y 2.9
        OUTPUT 0 1 font "roboto-bold"
        OUTPUT 0 1 font_size 2.4
        OUTPUT 0 1 value round_score
        OUTPUT 0 1 fill team_color_dark
        OUTPUT 0 1 font "roboto-bold"
    ELSE
        OUTPUT 0 1 opacity 0
    END IF

    # FLAG ============================================
    INT show_flag_state
    show_flag_state = 0
    IF fS && IN_EDITOR
        show_flag_state = 1
    END IF
    IF game_data.game_mode == "ctf" && fS
        show_flag_state = 1
    END IF

    IF show_flag_state
        DOUBLE flag_offset
        flag_offset = height + 1

        IF show_round_score
            flag_offset = height + 3.5
        END IF

        OUTPUT 0 2 width width
        OUTPUT 0 2 height height
        OUTPUT 0 2 image_width width
        OUTPUT 0 2 image_height height
        OUTPUT 0 2 align "center"
        OUTPUT 0 2 image_color "#ffffff
        OUTPUT 0 2 x 0
        OUTPUT 0 2 y 0
        OUTPUT 0 2 offset_y flag_offset

        IF flag_state == 0
            OUTPUT 0 2 image "images/item_flag.svg"
            OUTPUT 0 2 hue team_color
        END IF
        IF flag_state == 1
            OUTPUT 0 2 image "images/icons/fa/times.svg"
            OUTPUT 0 2 image_color "EE3015"
        END IF
        IF flag_state == 2
            OUTPUT 0 2 image "images/icons/fa/question.svg"
            OUTPUT 0 2 image_color "EEEEEE"
        END IF
    END IF

    INT show_macguffin_state
    show_macguffin_state = 0
    IF mS && IN_EDITOR
        show_macguffin_state = 1
    END IF
    IF game_data.game_mode == "macguffin" && mS
        show_macguffin_state = 1
    END IF

    IF show_macguffin_state

        #============================================
        # MACGUFFIN PROGRESS BAR 
        OUTPUT 1 0 image macguffin_bar
        OUTPUT 1 0 image_width 2.5
        OUTPUT 1 0 image_height height
        OUTPUT 1 0 image_color team_color
        OUTPUT 1 0 width 2.5
        OUTPUT 1 0 height height
        OUTPUT 1 0 fill "#00000066"
        OUTPUT 1 0 x macguffin_offset
        OUTPUT 1 0 y 0
        OUTPUT 1 0 clip_y DOUBLE (main_score / 100)

        #============================================
        # MACGUFFIN
        OUTPUT 1 1 image "images/item_macguffin.svg"
        OUTPUT 1 1 width 2.5
        OUTPUT 1 1 height 2.5
        OUTPUT 1 1 image_width 3
        OUTPUT 1 1 image_height 3
        OUTPUT 1 1 x macguffin_offset
        OUTPUT 1 1 y 3.6
        OUTPUT 1 1 image_color "#f8d206"

        IF has_macguffin
            OUTPUT 1 0 opacity 1
            OUTPUT 1 0 GRAYSCALE 0
            OUTPUT 1 1 opacity 1
        ELSE 
            OUTPUT 1 0 opacity 0.6
            OUTPUT 1 0 GRAYSCALE 0.6
            OUTPUT 1 1 opacity 0
        END IF
    ELSE
        OUTPUT 1 0 opacity 0
        OUTPUT 1 1 opacity 0
    END IF

END TEMPLATE
BEGIN TEMPLATE team_pickups
    SETTING iterator team_pickup.count
    SETTING item_direction dir
    SETTING cell_direction "horizontal"
    SETTING align pivot
    SETTING item_spacing 0
    SETTING cell_spacing 0

    IF font == ""
        font = "notosans-bold"
    END IF
    IF font == "default"
        font = "notosans-bold"
    END IF

    DOUBLE row_height
    row_height = fontSize * 2

    DOUBLE image_height
    image_height = row_height * 0.9

    RASTERIZE "images/weapon_rl.svg" image_height image_height
    RASTERIZE "images/weapon_melee.svg" image_height image_height
    RASTERIZE "images/weapon_rl.svg" image_height image_height
    RASTERIZE "images/weapon_sb.svg" image_height image_height
    RASTERIZE "images/weapon_mac.svg" image_height image_height
    RASTERIZE "images/weapon_cb.svg" image_height image_height
    RASTERIZE "images/weapon_pncr.svg" image_height image_height
    RASTERIZE "images/weapon_shaft.svg" image_height image_height
    RASTERIZE "images/weapon_gl.svg" image_height image_height
    RASTERIZE "images/weapon_ss.svg" image_height image_height
    RASTERIZE "images/weapon_mg.svg" image_height image_height
    RASTERIZE "images/weapon_w9.svg" image_height image_height
    RASTERIZE "images/weapon_st.svg" image_height image_height
    RASTERIZE "images/weapon_iw.svg" image_height image_height
    RASTERIZE "images/weapon_sw.svg" image_height image_height
    RASTERIZE "images/weapon_bw.svg" image_height image_height
    RASTERIZE "images/weapon_smw.svg" image_height image_height
    RASTERIZE "images/weapon_hw.svg" image_height image_height
    RASTERIZE "images/weapon_kw.svg" image_height image_height
    RASTERIZE "images/weapon_vc.svg" image_height image_height
    RASTERIZE "images/weapon_bl.svg" image_height image_height

    RASTERIZE "images/item_flag.svg" image_height image_height
    RASTERIZE "images/item_macguffin.svg" image_height image_height

    RASTERIZE "images/powerup_diabotical.svg" image_height image_height
    RASTERIZE "images/powerup_tripledamage.svg" image_height image_height
    RASTERIZE "images/powerup_siphonator.svg" image_height image_height
    RASTERIZE "images/powerup_surge.svg" image_height image_height
    RASTERIZE "images/powerup_vanguard.svg" image_height image_height

    RASTERIZE "images/item_armort1.svg" image_height image_height
    RASTERIZE "images/item_armort2.svg" image_height image_height
    RASTERIZE "images/item_armort3.svg" image_height image_height
    RASTERIZE "images/item_armort4.svg" image_height image_height
    RASTERIZE "images/item_hpt0.svg" image_height image_height
    RASTERIZE "images/item_hpt1.svg" image_height image_height
    RASTERIZE "images/item_hpt2.svg" image_height image_height
    RASTERIZE "images/item_hpt3.svg" image_height image_height

    RASTERIZE_TEXT "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" font fontSize
ON_UPDATE

    #team_pickup[]
    #    team_pickup[].item
    #    team_pickup[].player_name
    #    team_pickup[].image
    #    team_pickup[].timestamp

    DOUBLE indent
    indent = fontSize * 0.5

    DOUBLE image_padding
    image_padding = fontSize

    INT opacity
    opacity = 1

    INT show_item
    show_item = 0

    IF team_pickup[IDX].item == "armort2" && ia
        show_item = 1
    END IF
    IF team_pickup[IDX].item == "armort3" && ia
        show_item = 1
    END IF
    IF team_pickup[IDX].item == "armort4" && ia
        show_item = 1
    END IF
    IF team_pickup[IDX].item == "hpt3" && im
        show_item = 1
    END IF
    IF team_pickup[IDX].item == "doubledamage" && ip
        show_item = 1
    END IF
    IF team_pickup[IDX].item == "tripledamage" && ip
        show_item = 1
    END IF
    IF team_pickup[IDX].item == "survival" && ip
        show_item = 1
    END IF
    IF team_pickup[IDX].item == "haste" && ip
        show_item = 1
    END IF
    IF team_pickup[IDX].item == "vanguard" && ip
        show_item = 1
    END IF

    # Weapons
    IF team_pickup[IDX].item == "weaponrl" && wrl
        show_item = 1
    END IF
    IF team_pickup[IDX].item == "weaponshaft" && wshaft
        show_item = 1
    END IF
    IF team_pickup[IDX].item == "weaponcb" && wcb
        show_item = 1
    END IF
    IF team_pickup[IDX].item == "weaponpncr" && wpncr
        show_item = 1
    END IF
    IF team_pickup[IDX].item == "weapongl" && wgl
        show_item = 1
    END IF
    IF team_pickup[IDX].item == "weaponvc" && wvc
        show_item = 1
    END IF
    IF team_pickup[IDX].item == "weaponmac" && wmac
        show_item = 1
    END IF

    # Blaster types (maybe outdated)
    IF team_pickup[IDX].item == "weaponbl" && wbl
        show_item = 1
    END IF
    IF team_pickup[IDX].item == "weaponsb" && wbl
        show_item = 1
    END IF
    IF team_pickup[IDX].item == "weaponmb" && wbl
        show_item = 1
    END IF

    # Shotgun types (maybe outdated)
    IF team_pickup[IDX].item == "weaponshotgun" && wsg
        show_item = 1
    END IF
    IF team_pickup[IDX].item == "weaponss" && wsg
        show_item = 1
    END IF
    IF team_pickup[IDX].item == "weaponsg" && wsg
        show_item = 1
    END IF

    # Always show in the editor
    IF IN_EDITOR
        show_item = 1
    END IF

    IF show_item == 0
        #skip
        row_height = 0
        opacity = 0
    END IF

    # timestamp
    OUTPUT IDX 0 value team_pickup[IDX].timestamp
    OUTPUT IDX 0 height row_height
    OUTPUT IDX 0 font_size fontSize
    OUTPUT IDX 0 font font
    OUTPUT IDX 0 fill bgC
    OUTPUT IDX 0 color "#ffffff"
    OUTPUT IDX 0 indent indent
    OUTPUT IDX 0 opacity opacity

    # item icon
    OUTPUT IDX 2 width row_height
    OUTPUT IDX 2 height row_height
    OUTPUT IDX 2 fill bgC
    OUTPUT IDX 2 image_width image_height
    OUTPUT IDX 2 image_height image_height
    OUTPUT IDX 2 image team_pickup[IDX].image
    OUTPUT IDX 2 image_color team_pickup[IDX].color
    OUTPUT IDX 2 opacity opacity

    # player name
    OUTPUT IDX 3 value team_pickup[IDX].player_name
    OUTPUT IDX 3 height row_height
    OUTPUT IDX 3 font_size fontSize
    OUTPUT IDX 3 font font
    OUTPUT IDX 3 fill bgC
    OUTPUT IDX 3 color "#ffffff"
    OUTPUT IDX 3 indent indent
    OUTPUT IDX 3 opacity opacity


END TEMPLATE
BEGIN TEMPLATE time_limit
    SETTING item_direction "vertical"
    SETTING cell_direction "horizontal"
    SETTING align pivot
    SETTING item_spacing 0
    SETTING cell_spacing 0
    SETTING row_align "center"
    INT shadow

    COL_OUTPUT 0 font font
    COL_OUTPUT 0 align pivot
    COL_OUTPUT 0 color color
    COL_OUTPUT 0 height fontSize
    IF shadow
        COL_OUTPUT 0 shadow 1
    END IF

    COL_OUTPUT 1 font font
    COL_OUTPUT 1 align pivot
    COL_OUTPUT 1 color color
    COL_OUTPUT 1 height fontSize
    IF shadow
        COL_OUTPUT 1 shadow 1
    END IF

    STRING game_state
    STRING state_value
    INT game_state_length
    INT limit_overtime

    RASTERIZE_TEXT "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789.:" font fontSize
ON_UPDATE

    game_state = ""
    state_value = ""

    IF game_data.warmup
        game_state = "ingame_message_warmup"
    ELSE
        IF game_data.round_mode            
            game_state = "ingame_message_round"
            state_value = game_data.round + 1
        ELSE
            limit_overtime = game_data.time_limit + game_data.overtime_seconds
            limit_overtime = limit_overtime + game_data.tide_time_offset

            IF game_data.overtime_seconds
                game_state = "ingame_message_overtime_time"
                state_value = TIMESTAMP limit_overtime
            ELSE

                IF game_data.time_limit > 0

                    IF game_data.is_golden_frag
                        game_state = "ingame_message_golden_frag"
                    END IF

                    IF game_data.in_overtime_frag_mode 
                        game_state = "ingame_message_overtime_fraglimit"
                        state_value = game_data.dynamic_overtime_frag_limit 
                    END IF

                    game_state_length = LENGTH game_state
                    IF game_state_length == 0
                        state_value = TIMESTAMP limit_overtime
                    END IF

                END IF

            END IF

        END IF
    END IF

    game_state_length = LENGTH game_state
    IF game_state_length > 0
        OUTPUT 0 0 LVALUE game_state
    ELSE
        OUTPUT 0 0 LVALUE "empty"
    END IF

    OUTPUT 0 0 VALUE state_value
    LOCALIZE 0 0

    IF game_data.game_mode == "survival"
        IF !game_data.warmup
            IF game_data.survival_remaining
                OUTPUT 1 0 LVALUE "ingame_survival_remaining"
                OUTPUT 1 0 VALUE game_data.survival_remaining
                LOCALIZE 1 0
            END IF
        END IF
    END IF

END TEMPLATE
BEGIN TEMPLATE weapons_list
    DOUBLE fontSize
    DOUBLE aWidth
    DOUBLE aPadding
    DOUBLE iHeight
    DOUBLE iWidth
    DOUBLE wSepWidth
    DOUBLE aBarWidth
    INT accShow
    DOUBLE accFontSize
    DOUBLE cBitWidth
    INT keybindShow
    INT aKeybindShow
    INT aBarShow
    INT aBarWC
    DOUBLE iOpacityInactive
    DOUBLE aOpacityInactive
    INT iShadow

    STRING rounded_rect
    BEGIN TEXT rounded_rect
        <svg width="100" height="100">
            <rect width="100" height="100" x="0" y="0" rx="10" fill="#ffffff" fill-opacity="0.4" />
        </svg>
    END TEXT

    SETTING iterator weapons_list.count
    SETTING item_direction direction
    SETTING cell_direction wDirection
    SETTING align pivot
    SETTING item_spacing wSepWidth
    SETTING cell_spacing 0

    #################### Common
    DOUBLE row_height
    row_height = iHeight * 0.1
    COL_OUTPUT 0 height row_height
    INT j
    INT cell_dir
    IF wDirection == "vertical"
        cell_dir = 1
    END IF
    IF wDirection == "vertical reverse"
        cell_dir = 1
    END IF

    #################### Accuracy
    DOUBLE accuracy_size
    INT show_accuracy
    STRING acc_align
    acc_align = "right-edge"
    IF wDirection == "vertical"
        acc_align = "bottom-edge"
    END IF
    IF wDirection == "vertical reverse"
        acc_align = "top-edge"
    END IF
    IF accShow
        show_accuracy = 1
        accuracy_size = accFontSize * 4.5
        COL_OUTPUT j width accuracy_size
        COL_OUTPUT j height row_height
        COL_OUTPUT j font_size accFontSize
        COL_OUTPUT j font font
        COL_OUTPUT j align acc_align
        COL_OUTPUT j color "#FFFFFFCC"
        COL_OUTPUT j shadow 1
        COL_OUTPUT j indent 1
        j = j + 1
    END IF

    #################### Ammo label
    DOUBLE ammo_width
    ammo_width = aWidth
    COL_OUTPUT j width ammo_width
    COL_OUTPUT j height row_height
    COL_OUTPUT j font font
    COL_OUTPUT j shadow 1
    COL_OUTPUT j indent aPadding
    IF aAlign == "flex-start"
        COL_OUTPUT j align "left-edge"
    END IF
    IF aAlign == "flex-end"
        COL_OUTPUT j align "right-edge"
    END IF

    INT label_weapon_coloring
    INT active_label_weapon_coloring
    INT label_bg_weapon_coloring
    INT active_label_bg_weapon_coloring
    
    IF aC == "weapon"
        label_weapon_coloring = 1
    END IF
    IF aCActive == "weapon"
        active_label_weapon_coloring = 1
    END IF
    IF aBGC == "weapon"
        label_bg_weapon_coloring = 1
    END IF
    IF aBGCActive == "weapon"
        active_label_bg_weapon_coloring = 1
    END IF
    
    j = j + 1
    
    #################### Icon
    DOUBLE image_width
    DOUBLE image_height
    DOUBLE image_cell_width
    image_width = iHeight * 0.08
    image_height = iHeight * 0.08
    image_cell_width = iWidth * 0.1
    IF wDirection == "vertical"
        image_width = iWidth * 0.08
        image_height = iWidth * 0.08
    END IF
    IF wDirection == "vertical reverse"
        image_width = iWidth * 0.08
        image_height = iWidth * 0.08
    END IF
    COL_OUTPUT j image_width image_width
    COL_OUTPUT j image_height image_height
    COL_OUTPUT j width image_cell_width
    COL_OUTPUT j height row_height

    INT icon_weapon_coloring
    INT active_icon_weapon_coloring
    INT icon_bg_weapon_coloring
    INT active_icon_bg_weapon_coloring
    INT hM
    
    IF iC == "weapon"
        icon_weapon_coloring = 1
    END IF
    IF iCActive == "weapon"
        active_icon_weapon_coloring = 1
    END IF
    IF iBGC == "weapon"
        icon_bg_weapon_coloring = 1
    END IF
    IF iBGCActive == "weapon"
        active_icon_bg_weapon_coloring = 1
    END IF
    
    j = j + 1
    
    #################### Accent
    INT show_accent
    IF cBitWidth > 0
        show_accent = 1
        COL_OUTPUT j width cBitWidth
        COL_OUTPUT j height row_height
        j = j + 1
    END IF

    #################### Tank
    INT show_tank
    INT colorize_tank
    IF aBarWC
        colorize_tank = 1
    END IF

    DOUBLE tank_width
    DOUBLE tank_height
    tank_width = aBarWidth
    tank_height = row_height
    IF cell_dir
        tank_width = row_height
        tank_height = aBarWidth
    END IF

    STRING tank_rect
    tank_rect = "<svg width='" & tank_width & "'"
    tank_rect = tank_rect & " height='" & tank_height & "'>"
    tank_rect = tank_rect & "<rect width='" & tank_width & "'"
    tank_rect = tank_rect & " height='" & tank_height & "'"
    tank_rect = tank_rect & " x='0' y='0' fill='white' /></svg>"

    IF aBarShow
        show_tank = 1
        COL_OUTPUT j width aBarWidth
        COL_OUTPUT j height row_height
        COL_OUTPUT j image tank_rect
        COL_OUTPUT j image_width tank_width
        COL_OUTPUT j image_height tank_height
        COL_OUTPUT j fill "00000033"
        COL_OUTPUT j align "bottom-edge"
        j = j + 1
    END IF

    #################### Keybind
    INT show_keybind
    IF keybindShow
        show_keybind = 1
        COL_OUTPUT j width 4
        COL_OUTPUT j height row_height
        COL_OUTPUT j font_size 1.2
        COL_OUTPUT j font "roboto-bold"
        COL_OUTPUT j align "center"
        COL_OUTPUT j image rounded_rect
        COL_OUTPUT j image_width 2
        COL_OUTPUT j image_height 2
        COL_OUTPUT j color "1a1a1a"
        j = j + 1
    END IF

    # HACK: set height on last cell for when we iterate in reverse
    j = j - 1
    COL_OUTPUT j height row_height 
    
    RASTERIZE "images/weapon_rl.svg" image_width image_height
    RASTERIZE "images/weapon_melee.svg" image_width image_height
    RASTERIZE "images/weapon_rl.svg" image_width image_height
    RASTERIZE "images/weapon_sb.svg" image_width image_height
    RASTERIZE "images/weapon_mac.svg" image_width image_height
    RASTERIZE "images/weapon_cb.svg" image_width image_height
    RASTERIZE "images/weapon_pncr.svg" image_width image_height
    RASTERIZE "images/weapon_shaft.svg" image_width image_height
    RASTERIZE "images/weapon_gl.svg" image_width image_height
    RASTERIZE "images/weapon_ss.svg" image_width image_height
    RASTERIZE "images/weapon_mg.svg" image_width image_height
    RASTERIZE "images/weapon_w9.svg" image_width image_height
    RASTERIZE "images/weapon_st.svg" image_width image_height
    RASTERIZE "images/weapon_iw.svg" image_width image_height
    RASTERIZE "images/weapon_sw.svg" image_width image_height
    RASTERIZE "images/weapon_bw.svg" image_width image_height
    RASTERIZE "images/weapon_smw.svg" image_width image_height
    RASTERIZE "images/weapon_hw.svg" image_width image_height
    RASTERIZE "images/weapon_kw.svg" image_width image_height
    RASTERIZE "images/weapon_vc.svg" image_width image_height
    RASTERIZE "images/weapon_bl.svg" image_width image_height

    RASTERIZE_TEXT "ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" "roboto-bold" 1.2
    RASTERIZE_TEXT "0123456789" font fontSize
    RASTERIZE_TEXT "0123456789%" font accFontSize
ON_UPDATE
    
    IF !common_game_data.self_alive
        discard
    END IF

    IF weapons_list[IDX].tag == "melee" && hM
        skip
    END IF 

    j = 0
    
    STRING accuracy
    #################### Accuracy
    IF show_accuracy
        accuracy = weapons_list[IDX].accuracy & "%"
        OUTPUT IDX j value accuracy
        j = j + 1
    END IF
    

    #################### Ammo label

    # Main label color
    STRING label_color
    IF label_weapon_coloring
        label_color = weapons_list[IDX].color
    ELSE
        label_color = aCCustom
    END IF

    STRING label_color_active
    IF active_label_weapon_coloring
        label_color_active = weapons_list[IDX].color
    ELSE
        label_color_active = aCActiveCustom
    END IF

    # Main label background color
    STRING label_bg
    IF label_bg_weapon_coloring
        label_bg = weapons_list[IDX].color
    ELSE
        label_bg = aBGCCustom
    END IF

    STRING label_bg_active
    IF active_label_bg_weapon_coloring
        label_bg_active = weapons_list[IDX].color
    ELSE
        label_bg_active = aBGCActiveCustom
    END IF

    STRING label_value
    IF weapons_list[IDX].unlimited_ammo
        label_value = "โ"
    ELSE
        label_value = weapons_list[IDX].ammo
    END IF

    STRING label_print_value
    IF aKeybindShow
        label_print_value = weapons_list[IDX].key
    ELSE
        label_print_value = label_value
    END IF

    DOUBLE label_opacity
    IF weapons_list[IDX].current
        label_color = label_color_active
        label_bg = label_bg_active
        label_opacity = 1
        label_print_value = label_value
    ELSE
        label_opacity = aOpacityInactive
    END IF

    OUTPUT IDX j fill label_bg
    OUTPUT IDX j color label_color
    OUTPUT IDX j value label_print_value
    OUTPUT IDX j opacity label_opacity
    j = j + 1

    #################### Icon

    # Main icon color
    STRING icon_color
    IF icon_weapon_coloring
        icon_color = weapons_list[IDX].color
    ELSE
        icon_color = iCCustom
    END IF

    STRING icon_color_active
    IF active_icon_weapon_coloring
        icon_color_active = weapons_list[IDX].color
    ELSE
        icon_color_active = iCActiveCustom
    END IF

    # Main icon background color
    STRING icon_bg
    IF icon_bg_weapon_coloring
        icon_bg = weapons_list[IDX].color
    ELSE
        icon_bg = iBGCCustom
    END IF

    STRING icon_bg_active
    IF active_icon_bg_weapon_coloring
        icon_bg_active = weapons_list[IDX].color
    ELSE
        icon_bg_active = iBGCActiveCustom
    END IF

    DOUBLE icon_opacity
    IF weapons_list[IDX].current
        icon_color = icon_color_active
        icon_bg = icon_bg_active
        icon_opacity = 1
    ELSE
        icon_opacity = iOpacityInactive
    END IF

    OUTPUT IDX j image weapons_list[IDX].icon_url
    OUTPUT IDX j image_color icon_color
    OUTPUT IDX j fill icon_bg
    OUTPUT IDX j opacity icon_opacity
    j = j + 1
    
    #################### Accent
    IF show_accent
        OUTPUT IDX j fill weapons_list[IDX].color
        j = j + 1
    END IF

    #################### Tank
    STRING tank_color
    IF colorize_tank
        tank_color = weapons_list[IDX].color
    ELSE
        tank_color = "FFFFFFCC"
    END IF

    DOUBLE tank_height
    IF weapons_list[IDX].unlimited_ammo
        tank_height = 1
    ELSE
        tank_height = weapons_list[IDX].ammo / weapons_list[IDX].max_ammo 
        tank_height = SATURATE tank_height 
    END IF

    IF cell_dir
        tank_height = tank_height * -1
    END IF

    IF show_tank
        OUTPUT IDX j clip_y tank_height
        OUTPUT IDX j image_color tank_color
        j = j + 1
    END IF

    #################### Keybind
    IF show_keybind
        OUTPUT IDX j value weapons_list[IDX].key
        j = j + 1 
    END IF
       
END TEMPLATE


